Search.setIndex({"alltitles": {"3D wavelet denoising": [[17, "d-wavelet-denoising"]], "A tour of blur operators": [[4, "a-tour-of-blur-operators"]], "A tour of forward sensing operators": [[13, "a-tour-of-forward-sensing-operators"]], "ADMMIteration": [[151, "admmiteration"]], "Advanced": [[16, "advanced"]], "Adversarial Learning": [[16, "adversarial-learning"], [53, "adversarial-learning"]], "Adversarial Networks": [[51, "adversarial-networks"]], "AdversarialTrainer": [[224, "adversarialtrainer"]], "Affine": [[230, "affine"]], "AmplitudeLoss": [[128, "amplitudeloss"]], "Apply matched filtering to recover the signal and plot the results": [[8, "apply-matched-filtering-to-recover-the-signal-and-plot-the-results"]], "ArtifactRemoval": [[100, "artifactremoval"]], "AutoEncoder": [[101, "autoencoder"]], "BM3D": [[102, "bm3d"]], "BaseDEQ": [[234, "basedeq"]], "BaseOptim": [[129, "baseoptim"]], "BaseUnfold": [[235, "baseunfold"]], "Basics": [[16, "basics"]], "Benefits of using a decomposable forward operator.": [[12, "benefits-of-using-a-decomposable-forward-operator"]], "Blur": [[4, "blur"], [13, "blur"], [162, "blur"]], "Blur & Super-Resolution": [[58, "blur-super-resolution"]], "BlurFFT": [[163, "blurfft"]], "Build Sampler class": [[29, "build-sampler-class"]], "Building your custom sampling algorithm.": [[29, "building-your-custom-sampling-algorithm"]], "CBSD68": [[65, "cbsd68"]], "CPIteration": [[152, "cpiteration"]], "CSGM / AmbientGAN training": [[2, "csgm-ambientgan-training"]], "CSGMGenerator": [[103, "csgmgenerator"]], "Classical Denoisers": [[51, "classical-denoisers"]], "Complex Denoisers": [[51, "complex-denoisers"]], "Compressed Sensing": [[13, "compressed-sensing"]], "CompressedSensing": [[164, "compressedsensing"]], "Compressive operators": [[58, "compressive-operators"]], "Computation times": [[1, "computation-times"], [3, "computation-times"], [15, "computation-times"], [20, "computation-times"], [23, "computation-times"], [28, "computation-times"], [34, "computation-times"], [40, "computation-times"], [41, "computation-times"], [48, "computation-times"], [63, "computation-times"]], "Computed Tomography": [[13, "computed-tomography"]], "Concatenating forward operators.": [[10, "concatenating-forward-operators"]], "Conditional GAN training": [[2, "conditional-gan-training"]], "ConvDecoder": [[104, "convdecoder"]], "Create a Monte Carlo sampler": [[30, "create-a-monte-carlo-sampler"]], "Create a dataloader": [[6, "create-a-dataloader"]], "Create forward model": [[8, "create-forward-model"]], "Create the MCMC sampler": [[33, "create-the-mcmc-sampler"]], "Create the Monte Carlo sampler": [[30, "create-the-monte-carlo-sampler"]], "Create the denoising operator and solve the problem.": [[17, "create-the-denoising-operator-and-solve-the-problem"]], "Create the preconditioned and standard ULA samplers": [[29, "create-the-preconditioned-and-standard-ula-samplers"]], "Creating a custom forward operator.": [[12, "creating-a-custom-forward-operator"]], "Creating a decomposable forward operator.": [[12, "creating-a-decomposable-forward-operator"]], "Creating a forward operator.": [[12, "creating-a-forward-operator"]], "Creating your own dataset": [[6, "creating-your-own-dataset"]], "DCGANDiscriminator": [[105, "dcgandiscriminator"]], "DCGANGenerator": [[106, "dcgangenerator"]], "DDRM": [[215, "ddrm"]], "DEQ_builder": [[236, "deq-builder"]], "DIV2K": [[66, "div2k"]], "DPIR": [[130, "dpir"]], "DPIR method for PnP image deblurring.": [[24, "dpir-method-for-pnp-image-deblurring"]], "DPS": [[216, "dps"]], "DPS Algorithm": [[32, "dps-algorithm"]], "DPS approximation": [[32, "dps-approximation"]], "DRSIteration": [[153, "drsiteration"]], "DRUNet": [[107, "drunet"]], "Data Fidelity": [[56, "data-fidelity"]], "Data fidelity step": [[31, "data-fidelity-step"]], "DataFidelity": [[131, "datafidelity"]], "Datasets": [[50, "datasets"]], "Decolorize": [[13, "decolorize"], [165, "decolorize"]], "DecomposablePhysics": [[166, "decomposablephysics"]], "Deep Denoisers": [[51, "deep-denoisers"]], "Deep Equilibrium": [[60, "deep-equilibrium"]], "Deep Equilibrium (DEQ) algorithms for image deblurring": [[42, "deep-equilibrium-deq-algorithms-for-image-deblurring"]], "Deep Image Prior": [[52, "deep-image-prior"]], "DeepImagePrior": [[108, "deepimageprior"]], "DeepInverse: a Pytorch library for imaging with deep learning": [[62, "deepinverse-a-pytorch-library-for-imaging-with-deep-learning"]], "Define a custom iterator for the PDNet learned primal-dual algorithm.": [[45, "define-a-custom-iterator-for-the-pdnet-learned-primal-dual-algorithm"]], "Define a custom optimization algorithm": [[25, "define-a-custom-optimization-algorithm"]], "Define a forward operator": [[9, "define-a-forward-operator"]], "Define a model": [[9, "define-a-model"]], "Define diffusion schedule": [[32, "define-diffusion-schedule"]], "Define forward operator and generate dataset": [[14, "define-forward-operator-and-generate-dataset"], [46, "define-forward-operator-and-generate-dataset"]], "Define forward operator and noise model": [[7, "define-forward-operator-and-noise-model"], [29, "define-forward-operator-and-noise-model"], [30, "define-forward-operator-and-noise-model"], [33, "define-forward-operator-and-noise-model"]], "Define models": [[2, "define-models"]], "Define physics operator": [[5, "define-physics-operator"]], "Define the  DEQ algorithm.": [[42, "define-the-deq-algorithm"]], "Define the MMSE denoiser": [[30, "define-the-mmse-denoiser"]], "Define the custom fStep and gStep modules": [[25, "define-the-custom-fstep-and-gstep-modules"]], "Define the deep image prior": [[7, "define-the-deep-image-prior"]], "Define the likelihood": [[33, "define-the-likelihood"]], "Define the model.": [[45, "define-the-model"]], "Define the prior": [[29, "define-the-prior"], [33, "define-the-prior"]], "Define the sampling iteration": [[29, "define-the-sampling-iteration"]], "Define the trainable prior and data fidelity terms.": [[45, "define-the-trainable-prior-and-data-fidelity-terms"]], "Define the training parameters.": [[42, "define-the-training-parameters"], [43, "define-the-training-parameters"], [44, "define-the-training-parameters"], [45, "define-the-training-parameters"], [47, "define-the-training-parameters"]], "Define the unfolded PnP algorithm.": [[47, "define-the-unfolded-pnp-algorithm"]], "Define the unfolded Proximal Gradient algorithm.": [[43, "define-the-unfolded-proximal-gradient-algorithm"], [44, "define-the-unfolded-proximal-gradient-algorithm"]], "Define the unfolded trainable model.": [[45, "define-the-unfolded-trainable-model"]], "Defining new operators": [[58, "defining-new-operators"]], "Definition of forward operator and noise model": [[22, "definition-of-forward-operator-and-noise-model"]], "Dehazing": [[58, "dehazing"]], "Demosaicing": [[13, "demosaicing"], [167, "demosaicing"]], "Denoisers": [[51, "denoisers"]], "Denoising": [[13, "denoising"], [21, "denoising"], [168, "denoising"]], "Denoising step": [[31, "denoising-step"], [32, "denoising-step"]], "DiffPIR": [[217, "diffpir"]], "DiffUNet": [[109, "diffunet"]], "Diffraction blur generators": [[4, "diffraction-blur-generators"]], "DiffractionBlurGenerator": [[207, "diffractionblurgenerator"]], "Diffusion": [[59, "diffusion"]], "Diffusion Algorithms": [[59, "diffusion-algorithms"]], "Diffusion model loading": [[32, "diffusion-model-loading"]], "DiffusionSampler": [[218, "diffusionsampler"]], "DiscriminatorLoss": [[92, "discriminatorloss"]], "DiscriminatorMetric": [[93, "discriminatormetric"]], "DnCNN": [[110, "dncnn"]], "Downsampling": [[169, "downsampling"]], "DynamicMRI": [[170, "dynamicmri"]], "EILoss": [[73, "eiloss"]], "EPLL": [[132, "epll"]], "EPLLDenoiser": [[111, "eplldenoiser"]], "ESRGANDiscriminator": [[112, "esrgandiscriminator"]], "EquispacedMaskGenerator": [[208, "equispacedmaskgenerator"]], "Equivariant Denoisers": [[51, "equivariant-denoisers"]], "EquivariantDenoiser": [[113, "equivariantdenoiser"]], "Euclidean": [[231, "euclidean"]], "Evaluate the model on the problem and plot the results.": [[18, "evaluate-the-model-on-the-problem-and-plot-the-results"], [19, "evaluate-the-model-on-the-problem-and-plot-the-results"], [25, "evaluate-the-model-on-the-problem-and-plot-the-results"], [27, "evaluate-the-model-on-the-problem-and-plot-the-results"]], "Evaluate the model on the problem.": [[24, "evaluate-the-model-on-the-problem"], [26, "evaluate-the-model-on-the-problem"]], "Evaluate the reconstruction algorithm on the problem.": [[5, "evaluate-the-reconstruction-algorithm-on-the-problem"]], "Examples": [[16, "examples"]], "Examples using AdversarialTrainer:": [[224, "examples-using-adversarialtrainer"]], "Examples using Affine:": [[230, "examples-using-affine"]], "Examples using ArtifactRemoval:": [[100, "examples-using-artifactremoval"]], "Examples using BaseDEQ:": [[234, "examples-using-basedeq"]], "Examples using BaseOptim:": [[129, "examples-using-baseoptim"]], "Examples using BaseUnfold:": [[235, "examples-using-baseunfold"]], "Examples using Blur:": [[162, "examples-using-blur"]], "Examples using BlurFFT:": [[163, "examples-using-blurfft"]], "Examples using CPIteration:": [[152, "examples-using-cpiteration"]], "Examples using CSGMGenerator:": [[103, "examples-using-csgmgenerator"]], "Examples using CompressedSensing:": [[164, "examples-using-compressedsensing"]], "Examples using ConvDecoder:": [[104, "examples-using-convdecoder"]], "Examples using DCGANDiscriminator:": [[105, "examples-using-dcgandiscriminator"]], "Examples using DCGANGenerator:": [[106, "examples-using-dcgangenerator"]], "Examples using DDRM:": [[215, "examples-using-ddrm"]], "Examples using DEQ_builder:": [[236, "examples-using-deq-builder"]], "Examples using DPIR:": [[130, "examples-using-dpir"]], "Examples using DPS:": [[216, "examples-using-dps"]], "Examples using DRUNet:": [[107, "examples-using-drunet"]], "Examples using DataFidelity:": [[131, "examples-using-datafidelity"]], "Examples using Decolorize:": [[165, "examples-using-decolorize"]], "Examples using DecomposablePhysics:": [[166, "examples-using-decomposablephysics"]], "Examples using DeepImagePrior:": [[108, "examples-using-deepimageprior"]], "Examples using Demosaicing:": [[167, "examples-using-demosaicing"]], "Examples using Denoising:": [[168, "examples-using-denoising"]], "Examples using DiffPIR:": [[217, "examples-using-diffpir"]], "Examples using DiffUNet:": [[109, "examples-using-diffunet"]], "Examples using DiffractionBlurGenerator:": [[207, "examples-using-diffractionblurgenerator"]], "Examples using DiffusionSampler:": [[218, "examples-using-diffusionsampler"]], "Examples using DiscriminatorLoss:": [[92, "examples-using-discriminatorloss"]], "Examples using DnCNN:": [[110, "examples-using-dncnn"]], "Examples using Downsampling:": [[169, "examples-using-downsampling"]], "Examples using EILoss:": [[73, "examples-using-eiloss"]], "Examples using EPLL:": [[132, "examples-using-epll"]], "Examples using EquispacedMaskGenerator:": [[208, "examples-using-equispacedmaskgenerator"]], "Examples using Euclidean:": [[231, "examples-using-euclidean"]], "Examples using FNEJacobianSpectralNorm:": [[74, "examples-using-fnejacobianspectralnorm"]], "Examples using GSDRUNet:": [[114, "examples-using-gsdrunet"]], "Examples using GaussianMaskGenerator:": [[209, "examples-using-gaussianmaskgenerator"]], "Examples using GaussianNoise:": [[171, "examples-using-gaussiannoise"]], "Examples using GeneratorLoss:": [[94, "examples-using-generatorloss"]], "Examples using GeneratorMixture:": [[210, "examples-using-generatormixture"]], "Examples using HDF5Dataset:": [[68, "examples-using-hdf5dataset"]], "Examples using Homography:": [[225, "examples-using-homography"]], "Examples using IndicatorL2:": [[134, "examples-using-indicatorl2"]], "Examples using Inpainting:": [[173, "examples-using-inpainting"]], "Examples using L2:": [[137, "examples-using-l2"]], "Examples using LPIPS:": [[76, "examples-using-lpips"]], "Examples using LinearPhysics:": [[174, "examples-using-linearphysics"]], "Examples using LogPoissonLikelihood:": [[138, "examples-using-logpoissonlikelihood"]], "Examples using LogPoissonNoise:": [[175, "examples-using-logpoissonnoise"]], "Examples using Loss:": [[77, "examples-using-loss"]], "Examples using MCLoss:": [[79, "examples-using-mcloss"]], "Examples using MOILoss:": [[80, "examples-using-moiloss"]], "Examples using MRI:": [[176, "examples-using-mri"]], "Examples using MedianFilter:": [[115, "examples-using-medianfilter"]], "Examples using MonteCarlo:": [[219, "examples-using-montecarlo"]], "Examples using MotionBlurGenerator:": [[211, "examples-using-motionblurgenerator"]], "Examples using Neighbor2Neighbor:": [[82, "examples-using-neighbor2neighbor"]], "Examples using OptimIterator:": [[139, "examples-using-optimiterator"]], "Examples using PDNet_DualBlock:": [[116, "examples-using-pdnet-dualblock"]], "Examples using PDNet_PrimalBlock:": [[117, "examples-using-pdnet-primalblock"]], "Examples using PGDIteration:": [[157, "examples-using-pgditeration"]], "Examples using PSNR:": [[83, "examples-using-psnr"]], "Examples using PanTiltRotate:": [[232, "examples-using-pantiltrotate"]], "Examples using Pansharpen:": [[177, "examples-using-pansharpen"]], "Examples using PatchDataset:": [[69, "examples-using-patchdataset"]], "Examples using PatchGANDiscriminator:": [[118, "examples-using-patchgandiscriminator"]], "Examples using PatchNR:": [[140, "examples-using-patchnr"]], "Examples using PatchPrior:": [[141, "examples-using-patchprior"]], "Examples using PhaseRetrieval:": [[178, "examples-using-phaseretrieval"]], "Examples using Physics:": [[179, "examples-using-physics"]], "Examples using PhysicsGenerator:": [[212, "examples-using-physicsgenerator"]], "Examples using PnP:": [[142, "examples-using-pnp"]], "Examples using PoissonGaussianNoise:": [[180, "examples-using-poissongaussiannoise"]], "Examples using PoissonLikelihood:": [[143, "examples-using-poissonlikelihood"]], "Examples using PoissonNoise:": [[181, "examples-using-poissonnoise"]], "Examples using Prior:": [[144, "examples-using-prior"]], "Examples using RED:": [[145, "examples-using-red"]], "Examples using RadioInterferometry:": [[182, "examples-using-radiointerferometry"]], "Examples using RandomMaskGenerator:": [[213, "examples-using-randommaskgenerator"]], "Examples using RandomPhaseRetrieval:": [[183, "examples-using-randomphaseretrieval"]], "Examples using Rotate:": [[226, "examples-using-rotate"]], "Examples using Scale:": [[227, "examples-using-scale"]], "Examples using ScorePrior:": [[146, "examples-using-scoreprior"]], "Examples using Shift:": [[228, "examples-using-shift"]], "Examples using Similarity:": [[233, "examples-using-similarity"]], "Examples using SinglePhotonLidar:": [[184, "examples-using-singlephotonlidar"]], "Examples using SinglePixelCamera:": [[185, "examples-using-singlepixelcamera"]], "Examples using SpaceVaryingBlur:": [[186, "examples-using-spacevaryingblur"]], "Examples using SupAdversarialDiscriminatorLoss:": [[95, "examples-using-supadversarialdiscriminatorloss"]], "Examples using SupAdversarialGeneratorLoss:": [[96, "examples-using-supadversarialgeneratorloss"]], "Examples using SupLoss:": [[87, "examples-using-suploss"]], "Examples using SureGaussianLoss:": [[88, "examples-using-suregaussianloss"]], "Examples using SurePGLoss:": [[89, "examples-using-surepgloss"]], "Examples using SurePoissonLoss:": [[90, "examples-using-surepoissonloss"]], "Examples using TVPrior:": [[147, "examples-using-tvprior"]], "Examples using TensorList:": [[238, "examples-using-tensorlist"]], "Examples using Tomography:": [[187, "examples-using-tomography"]], "Examples using Trainer:": [[64, "examples-using-trainer"]], "Examples using Transform:": [[229, "examples-using-transform"]], "Examples using UAIRGeneratorLoss:": [[97, "examples-using-uairgeneratorloss"]], "Examples using ULA:": [[221, "examples-using-ula"]], "Examples using UNet:": [[124, "examples-using-unet"]], "Examples using UniformNoise:": [[189, "examples-using-uniformnoise"]], "Examples using UnsupAdversarialDiscriminatorLoss:": [[98, "examples-using-unsupadversarialdiscriminatorloss"]], "Examples using UnsupAdversarialGeneratorLoss:": [[99, "examples-using-unsupadversarialgeneratorloss"]], "Examples using Urban100HR:": [[71, "examples-using-urban100hr"]], "Examples using WaveletDenoiser:": [[125, "examples-using-waveletdenoiser"]], "Examples using WaveletDictDenoiser:": [[126, "examples-using-waveletdictdenoiser"]], "Examples using WaveletPrior:": [[149, "examples-using-waveletprior"]], "Examples using cal_psnr:": [[239, "examples-using-cal-psnr"]], "Examples using gaussian_blur:": [[193, "examples-using-gaussian-blur"]], "Examples using generate_dataset:": [[72, "examples-using-generate-dataset"]], "Examples using get_freer_gpu:": [[240, "examples-using-get-freer-gpu"]], "Examples using load_url_image:": [[242, "examples-using-load-url-image"]], "Examples using optim_builder:": [[150, "examples-using-optim-builder"]], "Examples using plot:": [[244, "examples-using-plot"]], "Examples using plot_curves:": [[245, "examples-using-plot-curves"]], "Examples using plot_inset:": [[246, "examples-using-plot-inset"]], "Examples using plot_parameters:": [[247, "examples-using-plot-parameters"]], "Examples using test:": [[222, "examples-using-test"]], "Examples using unfolded_builder:": [[237, "examples-using-unfolded-builder"]], "Expected Patch Log Likelihood (EPLL) for Denoising and Inpainting": [[21, "expected-patch-log-likelihood-epll-for-denoising-and-inpainting"]], "Exploring the total variation prior.": [[18, "exploring-the-total-variation-prior"]], "Exploring the wavelet prior.": [[19, "exploring-the-wavelet-prior"]], "Extension to multiple wavelet bases.": [[17, "extension-to-multiple-wavelet-bases"]], "FISTAIteration": [[154, "fistaiteration"]], "FNEJacobianSpectralNorm": [[74, "fnejacobianspectralnorm"]], "FastMRISliceDataset": [[67, "fastmrislicedataset"]], "Featuring": [[62, "featuring"]], "Finding Help": [[62, "finding-help"]], "FixedPoint": [[133, "fixedpoint"]], "Forward operators": [[58, "forward-operators"]], "Functional": [[58, "functional"]], "GDIteration": [[155, "gditeration"]], "GSDRUNet": [[114, "gsdrunet"]], "GaussianMaskGenerator": [[209, "gaussianmaskgenerator"]], "GaussianMixtureModel": [[159, "gaussianmixturemodel"]], "GaussianNoise": [[171, "gaussiannoise"]], "General setup": [[11, "general-setup"]], "Generate a dataset of blurred images": [[5, "generate-a-dataset-of-blurred-images"]], "Generate a dataset of blurred images and load it.": [[18, "generate-a-dataset-of-blurred-images-and-load-it"], [24, "generate-a-dataset-of-blurred-images-and-load-it"]], "Generate a dataset of compressed measurements and load it.": [[43, "generate-a-dataset-of-compressed-measurements-and-load-it"], [44, "generate-a-dataset-of-compressed-measurements-and-load-it"]], "Generate a dataset of degraded images and load it.": [[6, "generate-a-dataset-of-degraded-images-and-load-it"]], "Generate a dataset of knee images and load it.": [[36, "generate-a-dataset-of-knee-images-and-load-it"]], "Generate a dataset of low resolution images and load it.": [[42, "generate-a-dataset-of-low-resolution-images-and-load-it"], [47, "generate-a-dataset-of-low-resolution-images-and-load-it"]], "Generate a dataset of noisy images": [[38, "generate-a-dataset-of-noisy-images"], [39, "generate-a-dataset-of-noisy-images"]], "Generate a dataset of subsampled images and load it.": [[37, "generate-a-dataset-of-subsampled-images-and-load-it"]], "Generate an inpainting problem": [[19, "generate-an-inpainting-problem"]], "Generate an inverse problem": [[31, "generate-an-inverse-problem"]], "Generate dataset": [[2, "generate-dataset"]], "Generate the measurement": [[7, "generate-the-measurement"], [29, "generate-the-measurement"], [30, "generate-the-measurement"], [33, "generate-the-measurement"]], "Generate toy image": [[10, "generate-toy-image"], [12, "generate-toy-image"]], "Generate toy signal and measurement": [[8, "generate-toy-signal-and-measurement"]], "GeneratorLoss": [[94, "generatorloss"]], "GeneratorMixture": [[210, "generatormixture"]], "Generic Optimizers": [[56, "generic-optimizers"]], "Getting Started": [[62, "getting-started"]], "Groundtruth image": [[0, "groundtruth-image"]], "HD5Dataset": [[50, "hd5dataset"]], "HDF5Dataset": [[68, "hdf5dataset"]], "HQSIteration": [[156, "hqsiteration"]], "Haze": [[172, "haze"]], "Homography": [[225, "homography"]], "How to Contribute": [[49, "how-to-contribute"]], "IRadon": [[194, "iradon"]], "Image Datasets": [[50, "image-datasets"]], "Image deblurring with Total-Variation (TV) prior": [[18, "image-deblurring-with-total-variation-tv-prior"]], "Image deblurring with custom deep explicit prior.": [[5, "image-deblurring-with-custom-deep-explicit-prior"]], "Image inpainting with wavelet prior": [[19, "image-inpainting-with-wavelet-prior"]], "Image reconstruction with a diffusion model": [[30, "image-reconstruction-with-a-diffusion-model"]], "Image transformations for Equivariant Imaging": [[35, "image-transformations-for-equivariant-imaging"]], "Imaging inverse problems with adversarial networks": [[2, "imaging-inverse-problems-with-adversarial-networks"]], "Implementing DPS": [[32, "implementing-dps"]], "Implementing DiffPIR": [[31, "implementing-diffpir"]], "Implementing an Algorithm": [[52, "implementing-an-algorithm"]], "Import required packages": [[0, "import-required-packages"]], "IndicatorL2": [[134, "indicatorl2"]], "Inpainting": [[13, "inpainting"], [21, "inpainting"], [173, "inpainting"]], "Installation": [[62, "installation"]], "Introduction": [[53, "introduction"], [58, "introduction"]], "Iterating the Dykstra-like algorithm.": [[17, "iterating-the-dykstra-like-algorithm"]], "Iterative Reconstruction (PnP, RED, etc.)": [[52, "iterative-reconstruction-pnp-red-etc"]], "Iterators": [[56, "iterators"]], "JacobianSpectralNorm": [[75, "jacobianspectralnorm"]], "L1": [[135, "l1"]], "L1Prior": [[136, "l1prior"]], "L2": [[137, "l2"]], "LPIPS": [[76, "lpips"]], "Lead Developers": [[62, "lead-developers"]], "Learned Filtered Back-Projection": [[57, "learned-filtered-back-projection"]], "Learned Iterative Soft-Thresholding Algorithm (LISTA) for compressed sensing": [[43, "learned-iterative-soft-thresholding-algorithm-lista-for-compressed-sensing"]], "Learned Primal-Dual algorithm for CT scan.": [[45, "learned-primal-dual-algorithm-for-ct-scan"]], "Learned iterative custom prior": [[44, "learned-iterative-custom-prior"]], "Linear operators": [[58, "linear-operators"]], "LinearPhysics": [[174, "linearphysics"]], "List of mathematical symbols": [[55, "id1"]], "Load base image datasets": [[6, "load-base-image-datasets"], [38, "load-base-image-datasets"], [39, "load-base-image-datasets"]], "Load base image datasets and degradation operators.": [[5, "load-base-image-datasets-and-degradation-operators"], [14, "load-base-image-datasets-and-degradation-operators"], [18, "load-base-image-datasets-and-degradation-operators"], [19, "load-base-image-datasets-and-degradation-operators"], [24, "load-base-image-datasets-and-degradation-operators"], [25, "load-base-image-datasets-and-degradation-operators"], [26, "load-base-image-datasets-and-degradation-operators"], [36, "load-base-image-datasets-and-degradation-operators"], [37, "load-base-image-datasets-and-degradation-operators"], [42, "load-base-image-datasets-and-degradation-operators"], [43, "load-base-image-datasets-and-degradation-operators"], [44, "load-base-image-datasets-and-degradation-operators"], [46, "load-base-image-datasets-and-degradation-operators"], [47, "load-base-image-datasets-and-degradation-operators"]], "Load base volume image and denoising operators.": [[17, "load-base-volume-image-and-denoising-operators"]], "Load degradation operator.": [[45, "load-degradation-operator"]], "Load example image from the internet": [[30, "load-example-image-from-the-internet"]], "Load image and parameters": [[27, "load-image-and-parameters"]], "Load image from the internet": [[7, "load-image-from-the-internet"], [11, "load-image-from-the-internet"], [13, "load-image-from-the-internet"], [29, "load-image-from-the-internet"], [33, "load-image-from-the-internet"]], "Load test image and model": [[21, "load-test-image-and-model"]], "Load test images": [[4, "load-test-images"]], "Load training and test images": [[22, "load-training-and-test-images"]], "Loading the model": [[46, "loading-the-model"]], "LogPoissonLikelihood": [[138, "logpoissonlikelihood"]], "LogPoissonNoise": [[175, "logpoissonnoise"]], "Loss": [[53, "loss"], [77, "loss"]], "LpNorm": [[78, "lpnorm"]], "MCLoss": [[79, "mcloss"]], "MOILoss": [[80, "moiloss"]], "MRI": [[13, "mri"], [176, "mri"]], "Magnetic Resonance Imaging": [[58, "magnetic-resonance-imaging"]], "Markov Chain Monte Carlo Langevin": [[59, "markov-chain-monte-carlo-langevin"]], "Math Notation": [[55, "math-notation"]], "Measurements generation": [[11, "measurements-generation"]], "MedianFilter": [[115, "medianfilter"]], "Metrics": [[53, "metrics"]], "MonteCarlo": [[219, "montecarlo"]], "Motion blur generators": [[4, "motion-blur-generators"]], "MotionBlurGenerator": [[211, "motionblurgenerator"]], "NIQE": [[81, "niqe"]], "Natural weighting and Briggs weighting": [[0, "natural-weighting-and-briggs-weighting"]], "Neighbor2Neighbor": [[82, "neighbor2neighbor"]], "Network Regularization": [[53, "network-regularization"]], "Noise distributions": [[58, "noise-distributions"]], "Optim": [[56, "optim"]], "OptimIterator": [[139, "optimiterator"]], "Optimization": [[16, "optimization"]], "Other": [[61, "other"]], "Other Reconstruction Methods": [[57, "other-reconstruction-methods"]], "Overall comparison": [[11, "overall-comparison"]], "PDNet_DualBlock": [[116, "pdnet-dualblock"]], "PDNet_PrimalBlock": [[117, "pdnet-primalblock"]], "PGDIteration": [[157, "pgditeration"]], "PSNR": [[83, "psnr"]], "Pan-sharpening": [[13, "pan-sharpening"]], "PanTiltRotate": [[232, "pantiltrotate"]], "Pansharpen": [[177, "pansharpen"]], "Parameter-dependent operators": [[58, "parameter-dependent-operators"]], "Parameters": [[56, "parameters"]], "Patch Priors": [[16, "patch-priors"]], "Patch priors for limited-angle computed tomography": [[22, "patch-priors-for-limited-angle-computed-tomography"]], "PatchDataset": [[50, "patchdataset"], [69, "patchdataset"]], "PatchGANDiscriminator": [[118, "patchgandiscriminator"]], "PatchNR": [[140, "patchnr"]], "PatchPrior": [[141, "patchprior"]], "Phase correction and signal reconstruction": [[11, "phase-correction-and-signal-reconstruction"], [11, "id1"], [11, "id2"], [11, "id3"]], "Phase retrieval": [[58, "phase-retrieval"]], "PhaseRetrieval": [[178, "phaseretrieval"]], "Physics": [[58, "physics"], [179, "physics"]], "Physics Generators": [[58, "physics-generators"]], "PhysicsGenerator": [[212, "physicsgenerator"]], "Pixelwise operators": [[58, "pixelwise-operators"]], "Plotting": [[61, "plotting"]], "Plotting the learned parameters.": [[43, "plotting-the-learned-parameters"]], "Plotting the trained parameters.": [[47, "plotting-the-trained-parameters"]], "Plotting the weights of the network.": [[44, "plotting-the-weights-of-the-network"]], "Plug-and-Play": [[16, "plug-and-play"]], "PnP": [[142, "pnp"]], "PnP with custom optimization algorithm (Condat-Vu Primal-Dual)": [[25, "pnp-with-custom-optimization-algorithm-condat-vu-primal-dual"]], "PoissonGaussianNoise": [[180, "poissongaussiannoise"]], "PoissonLikelihood": [[143, "poissonlikelihood"]], "PoissonNoise": [[181, "poissonnoise"]], "Predefined Iterative Algorithms": [[52, "predefined-iterative-algorithms"]], "Pretrained Weights": [[51, "pretrained-weights"]], "Prior": [[144, "prior"]], "Priors": [[56, "priors"]], "Putting it all together: the DiffPIR algorithm": [[31, "putting-it-all-together-the-diffpir-algorithm"]], "R2RLoss": [[84, "r2rloss"]], "RED": [[145, "red"]], "Radio interferometric imaging": [[58, "radio-interferometric-imaging"]], "Radio interferometric imaging with deepinverse": [[0, "radio-interferometric-imaging-with-deepinverse"]], "RadioInterferometry": [[182, "radiointerferometry"]], "Radon": [[195, "radon"]], "Random phase retrieval and reconstruction methods.": [[11, "random-phase-retrieval-and-reconstruction-methods"]], "RandomMaskGenerator": [[213, "randommaskgenerator"]], "RandomPhaseRetrieval": [[183, "randomphaseretrieval"]], "Reconstructing an image using the deep image prior.": [[7, "reconstructing-an-image-using-the-deep-image-prior"]], "Reconstruction loop": [[22, "reconstruction-loop"]], "Reconstruction with gradient descent and PnP denoisers": [[11, "reconstruction-with-gradient-descent-and-pnp-denoisers"]], "Reconstruction with gradient descent and random initialization": [[11, "reconstruction-with-gradient-descent-and-random-initialization"]], "Reconstruction with gradient descent and spectral methods initialization": [[11, "reconstruction-with-gradient-descent-and-spectral-methods-initialization"]], "Reconstruction with spectral methods": [[11, "reconstruction-with-spectral-methods"]], "Regularization by Denoising (RED) for Super-Resolution.": [[26, "regularization-by-denoising-red-for-super-resolution"]], "Remote Sensing": [[58, "remote-sensing"]], "Restormer": [[119, "restormer"]], "Rotate": [[226, "rotate"]], "Run DIP algorithm and plot results": [[7, "run-dip-algorithm-and-plot-results"]], "Run and plot": [[22, "run-and-plot"]], "Run sampling algorithm and plot results": [[30, "run-sampling-algorithm-and-plot-results"], [33, "run-sampling-algorithm-and-plot-results"]], "Run sampling algorithms and plot results": [[29, "run-sampling-algorithms-and-plot-results"]], "Run the diffusion algorithm and plot results": [[30, "run-the-diffusion-algorithm-and-plot-results"]], "SCUNet": [[120, "scunet"]], "SKRock": [[220, "skrock"]], "SMIteration": [[158, "smiteration"]], "SSIM": [[85, "ssim"]], "Sampling": [[16, "sampling"]], "Sampling pattern": [[0, "sampling-pattern"]], "Sampling step": [[31, "sampling-step"]], "Saving and loading models": [[9, "saving-and-loading-models"]], "Saving the model": [[46, "saving-the-model"]], "Scale": [[227, "scale"]], "ScorePrior": [[146, "scoreprior"]], "Self-Supervised Learning": [[16, "self-supervised-learning"], [53, "self-supervised-learning"]], "Self-supervised denoising with the Neighbor2Neighbor loss.": [[38, "self-supervised-denoising-with-the-neighbor2neighbor-loss"]], "Self-supervised denoising with the SURE loss.": [[39, "self-supervised-denoising-with-the-sure-loss"]], "Self-supervised learning from incomplete measurements of multiple operators.": [[37, "self-supervised-learning-from-incomplete-measurements-of-multiple-operators"]], "Self-supervised learning with Equivariant Imaging for MRI.": [[36, "self-supervised-learning-with-equivariant-imaging-for-mri"]], "Set parameters for EPLL and PatchNR": [[22, "set-parameters-for-epll-and-patchnr"]], "Set the forward operator": [[25, "set-the-forward-operator"], [27, "set-the-forward-operator"]], "Set up the DPIR algorithm to solve the inverse problem.": [[24, "set-up-the-dpir-algorithm-to-solve-the-inverse-problem"]], "Set up the PnP algorithm to solve the inverse problem.": [[25, "set-up-the-pnp-algorithm-to-solve-the-inverse-problem"], [27, "set-up-the-pnp-algorithm-to-solve-the-inverse-problem"]], "Set up the denoiser network": [[38, "set-up-the-denoiser-network"], [39, "set-up-the-denoiser-network"]], "Set up the optimization algorithm to solve the inverse problem.": [[5, "set-up-the-optimization-algorithm-to-solve-the-inverse-problem"], [18, "set-up-the-optimization-algorithm-to-solve-the-inverse-problem"], [19, "set-up-the-optimization-algorithm-to-solve-the-inverse-problem"]], "Set up the reconstruction network": [[14, "set-up-the-reconstruction-network"], [36, "set-up-the-reconstruction-network"], [37, "set-up-the-reconstruction-network"], [46, "set-up-the-reconstruction-network"]], "Set up the training parameters": [[36, "set-up-the-training-parameters"], [37, "set-up-the-training-parameters"], [38, "set-up-the-training-parameters"], [39, "set-up-the-training-parameters"]], "Set14HR": [[70, "set14hr"]], "Setup paths for data loading and results.": [[5, "setup-paths-for-data-loading-and-results"], [6, "setup-paths-for-data-loading-and-results"], [9, "setup-paths-for-data-loading-and-results"], [14, "setup-paths-for-data-loading-and-results"], [17, "setup-paths-for-data-loading-and-results"], [18, "setup-paths-for-data-loading-and-results"], [19, "setup-paths-for-data-loading-and-results"], [24, "setup-paths-for-data-loading-and-results"], [25, "setup-paths-for-data-loading-and-results"], [26, "setup-paths-for-data-loading-and-results"], [27, "setup-paths-for-data-loading-and-results"], [36, "setup-paths-for-data-loading-and-results"], [37, "setup-paths-for-data-loading-and-results"], [38, "setup-paths-for-data-loading-and-results"], [39, "setup-paths-for-data-loading-and-results"], [42, "setup-paths-for-data-loading-and-results"], [43, "setup-paths-for-data-loading-and-results"], [44, "setup-paths-for-data-loading-and-results"], [45, "setup-paths-for-data-loading-and-results"], [46, "setup-paths-for-data-loading-and-results"], [47, "setup-paths-for-data-loading-and-results"]], "Setup the PnP algorithm. This involves in particular the definition of a custom prior class.": [[26, "setup-the-pnp-algorithm-this-involves-in-particular-the-definition-of-a-custom-prior-class"]], "Shift": [[228, "shift"]], "SigmaGenerator": [[214, "sigmagenerator"]], "Signal construction": [[11, "signal-construction"]], "Similarity": [[233, "similarity"]], "Simulating the measurements": [[0, "simulating-the-measurements"]], "Single photon lidar operator for depth ranging.": [[8, "single-photon-lidar-operator-for-depth-ranging"]], "Single-Pixel Camera": [[13, "single-pixel-camera"]], "Single-photon lidar": [[58, "single-photon-lidar"]], "SinglePhotonLidar": [[184, "singlephotonlidar"]], "SinglePixelCamera": [[185, "singlepixelcamera"]], "Solving the problem with a wavelet prior": [[0, "solving-the-problem-with-a-wavelet-prior"]], "SpaceVaryingBlur": [[186, "spacevaryingblur"]], "SplittingLoss": [[86, "splittingloss"]], "Stacking and concatenating forward operators.": [[10, "stacking-and-concatenating-forward-operators"]], "Stacking forward operators.": [[10, "stacking-forward-operators"]], "Summary of pretrained weights": [[51, "id14"]], "SupAdversarialDiscriminatorLoss": [[95, "supadversarialdiscriminatorloss"]], "SupAdversarialGeneratorLoss": [[96, "supadversarialgeneratorloss"]], "SupLoss": [[87, "suploss"]], "Super-Resolution": [[13, "super-resolution"]], "Supervised Learning": [[53, "supervised-learning"]], "SureGaussianLoss": [[88, "suregaussianloss"]], "SurePGLoss": [[89, "surepgloss"]], "SurePoissonLoss": [[90, "surepoissonloss"]], "SwinIR": [[121, "swinir"]], "TGVDenoiser": [[122, "tgvdenoiser"]], "TVDenoiser": [[123, "tvdenoiser"]], "TVLoss": [[91, "tvloss"]], "TVPrior": [[147, "tvprior"]], "TensorList": [[61, "tensorlist"], [238, "tensorlist"]], "Test the network": [[14, "test-the-network"], [36, "test-the-network"], [37, "test-the-network"], [38, "test-the-network"], [39, "test-the-network"], [42, "test-the-network"], [45, "test-the-network"], [46, "test-the-network"], [47, "test-the-network"]], "Test the network.": [[43, "test-the-network"], [44, "test-the-network"]], "The DPS algorithm": [[32, "the-dps-algorithm"]], "The DiffPIR algorithm": [[31, "the-diffpir-algorithm"]], "The RI measurement operator": [[0, "the-ri-measurement-operator"]], "Tikhonov": [[148, "tikhonov"]], "Tomography": [[58, "tomography"], [187, "tomography"]], "Train the model": [[14, "train-the-model"], [46, "train-the-model"]], "Train the network": [[36, "train-the-network"], [37, "train-the-network"], [38, "train-the-network"], [39, "train-the-network"], [42, "train-the-network"], [45, "train-the-network"], [47, "train-the-network"]], "Train the network.": [[43, "train-the-network"], [44, "train-the-network"]], "Trainer": [[64, "trainer"]], "Training / EM algorithm": [[22, "training-em-algorithm"]], "Training a reconstruction network.": [[14, "training-a-reconstruction-network"]], "Training and Testing": [[61, "training-and-testing"]], "Training dataset of random phantoms.": [[45, "training-dataset-of-random-phantoms"]], "Transform": [[229, "transform"]], "Transforms": [[53, "transforms"]], "UAIR training": [[2, "uair-training"]], "UAIRGeneratorLoss": [[97, "uairgeneratorloss"]], "ULA": [[221, "ula"]], "UNet": [[124, "unet"]], "Uncertainty quantification with PnP-ULA.": [[33, "uncertainty-quantification-with-pnp-ula"]], "Unfolded": [[16, "unfolded"], [60, "id1"]], "Unfolded Algorithms": [[60, "unfolded-algorithms"]], "Unfolded Chambolle-Pock for constrained image inpainting": [[46, "unfolded-chambolle-pock-for-constrained-image-inpainting"]], "UniformGaussianNoise": [[188, "uniformgaussiannoise"]], "UniformNoise": [[189, "uniformnoise"]], "UnsupAdversarialDiscriminatorLoss": [[98, "unsupadversarialdiscriminatorloss"]], "UnsupAdversarialGeneratorLoss": [[99, "unsupadversarialgeneratorloss"]], "Urban100HR": [[71, "urban100hr"]], "Using DPS in your inverse problem": [[32, "using-dps-in-your-inverse-problem"]], "Using multiple GPUs": [[54, "using-multiple-gpus"]], "Using the DiffPIR algorithm in your inverse problem": [[31, "using-the-diffpir-algorithm-in-your-inverse-problem"]], "Using the Dykstra-like algorithm for wavelet denoising.": [[17, "using-the-dykstra-like-algorithm-for-wavelet-denoising"]], "Utils": [[53, "utils"], [56, "utils"], [60, "utils"], [61, "utils"]], "Vanilla PnP for computed tomography (CT).": [[27, "vanilla-pnp-for-computed-tomography-ct"]], "Vanilla Unfolded algorithm for super-resolution": [[47, "vanilla-unfolded-algorithm-for-super-resolution"]], "Verifying our linear operator": [[12, "verifying-our-linear-operator"]], "Verifying the concatenated operator": [[10, "verifying-the-concatenated-operator"]], "Verifying the stacked operator": [[10, "verifying-the-stacked-operator"]], "Visualization": [[11, "visualization"]], "WaveletDenoiser": [[125, "waveletdenoiser"]], "WaveletDictDenoiser": [[126, "waveletdictdenoiser"]], "WaveletPrior": [[149, "waveletprior"]], "adjoint_function": [[190, "adjoint-function"]], "bicubic_filter": [[191, "bicubic-filter"]], "bilinear_filter": [[192, "bilinear-filter"]], "cal_psnr": [[239, "cal-psnr"]], "conjugate_gradient": [[160, "conjugate-gradient"]], "conv2d": [[196, "conv2d"]], "conv2d_fft": [[197, "conv2d-fft"]], "conv3d": [[198, "conv3d"]], "conv_transpose2d": [[199, "conv-transpose2d"]], "conv_transpose2d_fft": [[200, "conv-transpose2d-fft"]], "conv_transpose3d": [[201, "conv-transpose3d"]], "gaussian_blur": [[193, "gaussian-blur"]], "generate_dataset": [[72, "generate-dataset"]], "get_freer_gpu": [[240, "get-freer-gpu"]], "gradient_descent": [[161, "gradient-descent"]], "histogram": [[202, "histogram"]], "histogramdd": [[203, "histogramdd"]], "load_image": [[241, "load-image"]], "load_url_image": [[242, "load-url-image"]], "multiplier": [[204, "multiplier"]], "multiplier_adjoint": [[205, "multiplier-adjoint"]], "ones_like": [[243, "ones-like"]], "optim_builder": [[150, "optim-builder"]], "plot": [[244, "plot"]], "plot_curves": [[245, "plot-curves"]], "plot_inset": [[246, "plot-inset"]], "plot_parameters": [[247, "plot-parameters"]], "plot_videos": [[248, "plot-videos"]], "product_convolution2d": [[206, "product-convolution2d"]], "rand_like": [[249, "rand-like"]], "randn_like": [[250, "randn-like"]], "test": [[222, "test"]], "to_complex_denoiser": [[127, "to-complex-denoiser"]], "train": [[223, "train"]], "unfolded_builder": [[237, "unfolded-builder"]], "zeros_like": [[251, "zeros-like"]]}, "docnames": ["auto_examples/advanced/demo_ri_basic", "auto_examples/advanced/sg_execution_times", "auto_examples/adversarial-learning/demo_gan_imaging", "auto_examples/adversarial-learning/sg_execution_times", "auto_examples/basics/demo_blur_tour", "auto_examples/basics/demo_custom_prior", "auto_examples/basics/demo_dataset", "auto_examples/basics/demo_dip", "auto_examples/basics/demo_lidar", "auto_examples/basics/demo_loading", "auto_examples/basics/demo_pansharpening", "auto_examples/basics/demo_phase_retrieval", "auto_examples/basics/demo_physics", "auto_examples/basics/demo_physics_tour", "auto_examples/basics/demo_train_inpainting", "auto_examples/basics/sg_execution_times", "auto_examples/index", "auto_examples/optimization/demo_3D_wavelets", "auto_examples/optimization/demo_TV_minimisation", "auto_examples/optimization/demo_wavelet_prior", "auto_examples/optimization/sg_execution_times", "auto_examples/patch-priors/demo_epll", "auto_examples/patch-priors/demo_patch_priors_CT", "auto_examples/patch-priors/sg_execution_times", "auto_examples/plug-and-play/demo_PnP_DPIR_deblur", "auto_examples/plug-and-play/demo_PnP_custom_optim", "auto_examples/plug-and-play/demo_RED_GSPnP_SR", "auto_examples/plug-and-play/demo_vanilla_PnP", "auto_examples/plug-and-play/sg_execution_times", "auto_examples/sampling/demo_custom_kernel", "auto_examples/sampling/demo_ddrm", "auto_examples/sampling/demo_diffpir", "auto_examples/sampling/demo_dps", "auto_examples/sampling/demo_sampling", "auto_examples/sampling/sg_execution_times", "auto_examples/self-supervised-learning/demo_ei_transforms", "auto_examples/self-supervised-learning/demo_equivariant_imaging", "auto_examples/self-supervised-learning/demo_multioperator_imaging", "auto_examples/self-supervised-learning/demo_n2n_denoising", "auto_examples/self-supervised-learning/demo_sure_denoising", "auto_examples/self-supervised-learning/sg_execution_times", "auto_examples/sg_execution_times", "auto_examples/unfolded/demo_DEQ", "auto_examples/unfolded/demo_LISTA", "auto_examples/unfolded/demo_custom_prior_unfolded", "auto_examples/unfolded/demo_learned_primal_dual", "auto_examples/unfolded/demo_unfolded_constrained_LISTA", "auto_examples/unfolded/demo_vanilla_unfolded", "auto_examples/unfolded/sg_execution_times", "deepinv.contributing", "deepinv.datasets", "deepinv.denoisers", "deepinv.iterative", "deepinv.loss", "deepinv.multigpu", "deepinv.notation", "deepinv.optim", "deepinv.other_models", "deepinv.physics", "deepinv.sampling", "deepinv.unfolded", "deepinv.utils", "index", "sg_execution_times", "stubs/deepinv.Trainer", "stubs/deepinv.datasets.CBSD68", "stubs/deepinv.datasets.DIV2K", "stubs/deepinv.datasets.FastMRISliceDataset", "stubs/deepinv.datasets.HDF5Dataset", "stubs/deepinv.datasets.PatchDataset", "stubs/deepinv.datasets.Set14HR", "stubs/deepinv.datasets.Urban100HR", "stubs/deepinv.datasets.generate_dataset", "stubs/deepinv.loss.EILoss", "stubs/deepinv.loss.FNEJacobianSpectralNorm", "stubs/deepinv.loss.JacobianSpectralNorm", "stubs/deepinv.loss.LPIPS", "stubs/deepinv.loss.Loss", "stubs/deepinv.loss.LpNorm", "stubs/deepinv.loss.MCLoss", "stubs/deepinv.loss.MOILoss", "stubs/deepinv.loss.NIQE", "stubs/deepinv.loss.Neighbor2Neighbor", "stubs/deepinv.loss.PSNR", "stubs/deepinv.loss.R2RLoss", "stubs/deepinv.loss.SSIM", "stubs/deepinv.loss.SplittingLoss", "stubs/deepinv.loss.SupLoss", "stubs/deepinv.loss.SureGaussianLoss", "stubs/deepinv.loss.SurePGLoss", "stubs/deepinv.loss.SurePoissonLoss", "stubs/deepinv.loss.TVLoss", "stubs/deepinv.loss.adversarial.DiscriminatorLoss", "stubs/deepinv.loss.adversarial.DiscriminatorMetric", "stubs/deepinv.loss.adversarial.GeneratorLoss", "stubs/deepinv.loss.adversarial.SupAdversarialDiscriminatorLoss", "stubs/deepinv.loss.adversarial.SupAdversarialGeneratorLoss", "stubs/deepinv.loss.adversarial.UAIRGeneratorLoss", "stubs/deepinv.loss.adversarial.UnsupAdversarialDiscriminatorLoss", "stubs/deepinv.loss.adversarial.UnsupAdversarialGeneratorLoss", "stubs/deepinv.models.ArtifactRemoval", "stubs/deepinv.models.AutoEncoder", "stubs/deepinv.models.BM3D", "stubs/deepinv.models.CSGMGenerator", "stubs/deepinv.models.ConvDecoder", "stubs/deepinv.models.DCGANDiscriminator", "stubs/deepinv.models.DCGANGenerator", "stubs/deepinv.models.DRUNet", "stubs/deepinv.models.DeepImagePrior", "stubs/deepinv.models.DiffUNet", "stubs/deepinv.models.DnCNN", "stubs/deepinv.models.EPLLDenoiser", "stubs/deepinv.models.ESRGANDiscriminator", "stubs/deepinv.models.EquivariantDenoiser", "stubs/deepinv.models.GSDRUNet", "stubs/deepinv.models.MedianFilter", "stubs/deepinv.models.PDNet_DualBlock", "stubs/deepinv.models.PDNet_PrimalBlock", "stubs/deepinv.models.PatchGANDiscriminator", "stubs/deepinv.models.Restormer", "stubs/deepinv.models.SCUNet", "stubs/deepinv.models.SwinIR", "stubs/deepinv.models.TGVDenoiser", "stubs/deepinv.models.TVDenoiser", "stubs/deepinv.models.UNet", "stubs/deepinv.models.WaveletDenoiser", "stubs/deepinv.models.WaveletDictDenoiser", "stubs/deepinv.models.complex.to_complex_denoiser", "stubs/deepinv.optim.AmplitudeLoss", "stubs/deepinv.optim.BaseOptim", "stubs/deepinv.optim.DPIR", "stubs/deepinv.optim.DataFidelity", "stubs/deepinv.optim.EPLL", "stubs/deepinv.optim.FixedPoint", "stubs/deepinv.optim.IndicatorL2", "stubs/deepinv.optim.L1", "stubs/deepinv.optim.L1Prior", "stubs/deepinv.optim.L2", "stubs/deepinv.optim.LogPoissonLikelihood", "stubs/deepinv.optim.OptimIterator", "stubs/deepinv.optim.PatchNR", "stubs/deepinv.optim.PatchPrior", "stubs/deepinv.optim.PnP", "stubs/deepinv.optim.PoissonLikelihood", "stubs/deepinv.optim.Prior", "stubs/deepinv.optim.RED", "stubs/deepinv.optim.ScorePrior", "stubs/deepinv.optim.TVPrior", "stubs/deepinv.optim.Tikhonov", "stubs/deepinv.optim.WaveletPrior", "stubs/deepinv.optim.optim_builder", "stubs/deepinv.optim.optim_iterators.ADMMIteration", "stubs/deepinv.optim.optim_iterators.CPIteration", "stubs/deepinv.optim.optim_iterators.DRSIteration", "stubs/deepinv.optim.optim_iterators.FISTAIteration", "stubs/deepinv.optim.optim_iterators.GDIteration", "stubs/deepinv.optim.optim_iterators.HQSIteration", "stubs/deepinv.optim.optim_iterators.PGDIteration", "stubs/deepinv.optim.optim_iterators.SMIteration", "stubs/deepinv.optim.utils.GaussianMixtureModel", "stubs/deepinv.optim.utils.conjugate_gradient", "stubs/deepinv.optim.utils.gradient_descent", "stubs/deepinv.physics.Blur", "stubs/deepinv.physics.BlurFFT", "stubs/deepinv.physics.CompressedSensing", "stubs/deepinv.physics.Decolorize", "stubs/deepinv.physics.DecomposablePhysics", "stubs/deepinv.physics.Demosaicing", "stubs/deepinv.physics.Denoising", "stubs/deepinv.physics.Downsampling", "stubs/deepinv.physics.DynamicMRI", "stubs/deepinv.physics.GaussianNoise", "stubs/deepinv.physics.Haze", "stubs/deepinv.physics.Inpainting", "stubs/deepinv.physics.LinearPhysics", "stubs/deepinv.physics.LogPoissonNoise", "stubs/deepinv.physics.MRI", "stubs/deepinv.physics.Pansharpen", "stubs/deepinv.physics.PhaseRetrieval", "stubs/deepinv.physics.Physics", "stubs/deepinv.physics.PoissonGaussianNoise", "stubs/deepinv.physics.PoissonNoise", "stubs/deepinv.physics.RadioInterferometry", "stubs/deepinv.physics.RandomPhaseRetrieval", "stubs/deepinv.physics.SinglePhotonLidar", "stubs/deepinv.physics.SinglePixelCamera", "stubs/deepinv.physics.SpaceVaryingBlur", "stubs/deepinv.physics.Tomography", "stubs/deepinv.physics.UniformGaussianNoise", "stubs/deepinv.physics.UniformNoise", "stubs/deepinv.physics.adjoint_function", "stubs/deepinv.physics.blur.bicubic_filter", "stubs/deepinv.physics.blur.bilinear_filter", "stubs/deepinv.physics.blur.gaussian_blur", "stubs/deepinv.physics.functional.IRadon", "stubs/deepinv.physics.functional.Radon", "stubs/deepinv.physics.functional.conv2d", "stubs/deepinv.physics.functional.conv2d_fft", "stubs/deepinv.physics.functional.conv3d", "stubs/deepinv.physics.functional.conv_transpose2d", "stubs/deepinv.physics.functional.conv_transpose2d_fft", "stubs/deepinv.physics.functional.conv_transpose3d", "stubs/deepinv.physics.functional.histogram", "stubs/deepinv.physics.functional.histogramdd", "stubs/deepinv.physics.functional.multiplier", "stubs/deepinv.physics.functional.multiplier_adjoint", "stubs/deepinv.physics.functional.product_convolution2d", "stubs/deepinv.physics.generator.DiffractionBlurGenerator", "stubs/deepinv.physics.generator.EquispacedMaskGenerator", "stubs/deepinv.physics.generator.GaussianMaskGenerator", "stubs/deepinv.physics.generator.GeneratorMixture", "stubs/deepinv.physics.generator.MotionBlurGenerator", "stubs/deepinv.physics.generator.PhysicsGenerator", "stubs/deepinv.physics.generator.RandomMaskGenerator", "stubs/deepinv.physics.generator.SigmaGenerator", "stubs/deepinv.sampling.DDRM", "stubs/deepinv.sampling.DPS", "stubs/deepinv.sampling.DiffPIR", "stubs/deepinv.sampling.DiffusionSampler", "stubs/deepinv.sampling.MonteCarlo", "stubs/deepinv.sampling.SKRock", "stubs/deepinv.sampling.ULA", "stubs/deepinv.test", "stubs/deepinv.train", "stubs/deepinv.training.AdversarialTrainer", "stubs/deepinv.transform.Homography", "stubs/deepinv.transform.Rotate", "stubs/deepinv.transform.Scale", "stubs/deepinv.transform.Shift", "stubs/deepinv.transform.Transform", "stubs/deepinv.transform.projective.Affine", "stubs/deepinv.transform.projective.Euclidean", "stubs/deepinv.transform.projective.PanTiltRotate", "stubs/deepinv.transform.projective.Similarity", "stubs/deepinv.unfolded.BaseDEQ", "stubs/deepinv.unfolded.BaseUnfold", "stubs/deepinv.unfolded.DEQ_builder", "stubs/deepinv.unfolded.unfolded_builder", "stubs/deepinv.utils.TensorList", "stubs/deepinv.utils.cal_psnr", "stubs/deepinv.utils.get_freer_gpu", "stubs/deepinv.utils.load_image", "stubs/deepinv.utils.load_url_image", "stubs/deepinv.utils.ones_like", "stubs/deepinv.utils.plot", "stubs/deepinv.utils.plot_curves", "stubs/deepinv.utils.plot_inset", "stubs/deepinv.utils.plot_parameters", "stubs/deepinv.utils.plot_videos", "stubs/deepinv.utils.rand_like", "stubs/deepinv.utils.randn_like", "stubs/deepinv.utils.zeros_like"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["auto_examples/advanced/demo_ri_basic.rst", "auto_examples/advanced/sg_execution_times.rst", "auto_examples/adversarial-learning/demo_gan_imaging.rst", "auto_examples/adversarial-learning/sg_execution_times.rst", "auto_examples/basics/demo_blur_tour.rst", "auto_examples/basics/demo_custom_prior.rst", "auto_examples/basics/demo_dataset.rst", "auto_examples/basics/demo_dip.rst", "auto_examples/basics/demo_lidar.rst", "auto_examples/basics/demo_loading.rst", "auto_examples/basics/demo_pansharpening.rst", "auto_examples/basics/demo_phase_retrieval.rst", "auto_examples/basics/demo_physics.rst", "auto_examples/basics/demo_physics_tour.rst", "auto_examples/basics/demo_train_inpainting.rst", "auto_examples/basics/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/optimization/demo_3D_wavelets.rst", "auto_examples/optimization/demo_TV_minimisation.rst", "auto_examples/optimization/demo_wavelet_prior.rst", "auto_examples/optimization/sg_execution_times.rst", "auto_examples/patch-priors/demo_epll.rst", "auto_examples/patch-priors/demo_patch_priors_CT.rst", "auto_examples/patch-priors/sg_execution_times.rst", "auto_examples/plug-and-play/demo_PnP_DPIR_deblur.rst", "auto_examples/plug-and-play/demo_PnP_custom_optim.rst", "auto_examples/plug-and-play/demo_RED_GSPnP_SR.rst", "auto_examples/plug-and-play/demo_vanilla_PnP.rst", "auto_examples/plug-and-play/sg_execution_times.rst", "auto_examples/sampling/demo_custom_kernel.rst", "auto_examples/sampling/demo_ddrm.rst", "auto_examples/sampling/demo_diffpir.rst", "auto_examples/sampling/demo_dps.rst", "auto_examples/sampling/demo_sampling.rst", "auto_examples/sampling/sg_execution_times.rst", "auto_examples/self-supervised-learning/demo_ei_transforms.rst", "auto_examples/self-supervised-learning/demo_equivariant_imaging.rst", "auto_examples/self-supervised-learning/demo_multioperator_imaging.rst", "auto_examples/self-supervised-learning/demo_n2n_denoising.rst", "auto_examples/self-supervised-learning/demo_sure_denoising.rst", "auto_examples/self-supervised-learning/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "auto_examples/unfolded/demo_DEQ.rst", "auto_examples/unfolded/demo_LISTA.rst", "auto_examples/unfolded/demo_custom_prior_unfolded.rst", "auto_examples/unfolded/demo_learned_primal_dual.rst", "auto_examples/unfolded/demo_unfolded_constrained_LISTA.rst", "auto_examples/unfolded/demo_vanilla_unfolded.rst", "auto_examples/unfolded/sg_execution_times.rst", "deepinv.contributing.rst", "deepinv.datasets.rst", "deepinv.denoisers.rst", "deepinv.iterative.rst", "deepinv.loss.rst", "deepinv.multigpu.rst", "deepinv.notation.rst", "deepinv.optim.rst", "deepinv.other_models.rst", "deepinv.physics.rst", "deepinv.sampling.rst", "deepinv.unfolded.rst", "deepinv.utils.rst", "index.rst", "sg_execution_times.rst", "stubs/deepinv.Trainer.rst", "stubs/deepinv.datasets.CBSD68.rst", "stubs/deepinv.datasets.DIV2K.rst", "stubs/deepinv.datasets.FastMRISliceDataset.rst", "stubs/deepinv.datasets.HDF5Dataset.rst", "stubs/deepinv.datasets.PatchDataset.rst", "stubs/deepinv.datasets.Set14HR.rst", "stubs/deepinv.datasets.Urban100HR.rst", "stubs/deepinv.datasets.generate_dataset.rst", "stubs/deepinv.loss.EILoss.rst", "stubs/deepinv.loss.FNEJacobianSpectralNorm.rst", "stubs/deepinv.loss.JacobianSpectralNorm.rst", "stubs/deepinv.loss.LPIPS.rst", "stubs/deepinv.loss.Loss.rst", "stubs/deepinv.loss.LpNorm.rst", "stubs/deepinv.loss.MCLoss.rst", "stubs/deepinv.loss.MOILoss.rst", "stubs/deepinv.loss.NIQE.rst", "stubs/deepinv.loss.Neighbor2Neighbor.rst", "stubs/deepinv.loss.PSNR.rst", "stubs/deepinv.loss.R2RLoss.rst", "stubs/deepinv.loss.SSIM.rst", "stubs/deepinv.loss.SplittingLoss.rst", "stubs/deepinv.loss.SupLoss.rst", "stubs/deepinv.loss.SureGaussianLoss.rst", "stubs/deepinv.loss.SurePGLoss.rst", "stubs/deepinv.loss.SurePoissonLoss.rst", "stubs/deepinv.loss.TVLoss.rst", "stubs/deepinv.loss.adversarial.DiscriminatorLoss.rst", "stubs/deepinv.loss.adversarial.DiscriminatorMetric.rst", "stubs/deepinv.loss.adversarial.GeneratorLoss.rst", "stubs/deepinv.loss.adversarial.SupAdversarialDiscriminatorLoss.rst", "stubs/deepinv.loss.adversarial.SupAdversarialGeneratorLoss.rst", "stubs/deepinv.loss.adversarial.UAIRGeneratorLoss.rst", "stubs/deepinv.loss.adversarial.UnsupAdversarialDiscriminatorLoss.rst", "stubs/deepinv.loss.adversarial.UnsupAdversarialGeneratorLoss.rst", "stubs/deepinv.models.ArtifactRemoval.rst", "stubs/deepinv.models.AutoEncoder.rst", "stubs/deepinv.models.BM3D.rst", "stubs/deepinv.models.CSGMGenerator.rst", "stubs/deepinv.models.ConvDecoder.rst", "stubs/deepinv.models.DCGANDiscriminator.rst", "stubs/deepinv.models.DCGANGenerator.rst", "stubs/deepinv.models.DRUNet.rst", "stubs/deepinv.models.DeepImagePrior.rst", "stubs/deepinv.models.DiffUNet.rst", "stubs/deepinv.models.DnCNN.rst", "stubs/deepinv.models.EPLLDenoiser.rst", "stubs/deepinv.models.ESRGANDiscriminator.rst", "stubs/deepinv.models.EquivariantDenoiser.rst", "stubs/deepinv.models.GSDRUNet.rst", "stubs/deepinv.models.MedianFilter.rst", "stubs/deepinv.models.PDNet_DualBlock.rst", "stubs/deepinv.models.PDNet_PrimalBlock.rst", "stubs/deepinv.models.PatchGANDiscriminator.rst", "stubs/deepinv.models.Restormer.rst", "stubs/deepinv.models.SCUNet.rst", "stubs/deepinv.models.SwinIR.rst", "stubs/deepinv.models.TGVDenoiser.rst", "stubs/deepinv.models.TVDenoiser.rst", "stubs/deepinv.models.UNet.rst", "stubs/deepinv.models.WaveletDenoiser.rst", "stubs/deepinv.models.WaveletDictDenoiser.rst", "stubs/deepinv.models.complex.to_complex_denoiser.rst", "stubs/deepinv.optim.AmplitudeLoss.rst", "stubs/deepinv.optim.BaseOptim.rst", "stubs/deepinv.optim.DPIR.rst", "stubs/deepinv.optim.DataFidelity.rst", "stubs/deepinv.optim.EPLL.rst", "stubs/deepinv.optim.FixedPoint.rst", "stubs/deepinv.optim.IndicatorL2.rst", "stubs/deepinv.optim.L1.rst", "stubs/deepinv.optim.L1Prior.rst", "stubs/deepinv.optim.L2.rst", "stubs/deepinv.optim.LogPoissonLikelihood.rst", "stubs/deepinv.optim.OptimIterator.rst", "stubs/deepinv.optim.PatchNR.rst", "stubs/deepinv.optim.PatchPrior.rst", "stubs/deepinv.optim.PnP.rst", "stubs/deepinv.optim.PoissonLikelihood.rst", "stubs/deepinv.optim.Prior.rst", "stubs/deepinv.optim.RED.rst", "stubs/deepinv.optim.ScorePrior.rst", "stubs/deepinv.optim.TVPrior.rst", "stubs/deepinv.optim.Tikhonov.rst", "stubs/deepinv.optim.WaveletPrior.rst", "stubs/deepinv.optim.optim_builder.rst", "stubs/deepinv.optim.optim_iterators.ADMMIteration.rst", "stubs/deepinv.optim.optim_iterators.CPIteration.rst", "stubs/deepinv.optim.optim_iterators.DRSIteration.rst", "stubs/deepinv.optim.optim_iterators.FISTAIteration.rst", "stubs/deepinv.optim.optim_iterators.GDIteration.rst", "stubs/deepinv.optim.optim_iterators.HQSIteration.rst", "stubs/deepinv.optim.optim_iterators.PGDIteration.rst", "stubs/deepinv.optim.optim_iterators.SMIteration.rst", "stubs/deepinv.optim.utils.GaussianMixtureModel.rst", "stubs/deepinv.optim.utils.conjugate_gradient.rst", "stubs/deepinv.optim.utils.gradient_descent.rst", "stubs/deepinv.physics.Blur.rst", "stubs/deepinv.physics.BlurFFT.rst", "stubs/deepinv.physics.CompressedSensing.rst", "stubs/deepinv.physics.Decolorize.rst", "stubs/deepinv.physics.DecomposablePhysics.rst", "stubs/deepinv.physics.Demosaicing.rst", "stubs/deepinv.physics.Denoising.rst", "stubs/deepinv.physics.Downsampling.rst", "stubs/deepinv.physics.DynamicMRI.rst", "stubs/deepinv.physics.GaussianNoise.rst", "stubs/deepinv.physics.Haze.rst", "stubs/deepinv.physics.Inpainting.rst", "stubs/deepinv.physics.LinearPhysics.rst", "stubs/deepinv.physics.LogPoissonNoise.rst", "stubs/deepinv.physics.MRI.rst", "stubs/deepinv.physics.Pansharpen.rst", "stubs/deepinv.physics.PhaseRetrieval.rst", "stubs/deepinv.physics.Physics.rst", "stubs/deepinv.physics.PoissonGaussianNoise.rst", "stubs/deepinv.physics.PoissonNoise.rst", "stubs/deepinv.physics.RadioInterferometry.rst", "stubs/deepinv.physics.RandomPhaseRetrieval.rst", "stubs/deepinv.physics.SinglePhotonLidar.rst", "stubs/deepinv.physics.SinglePixelCamera.rst", "stubs/deepinv.physics.SpaceVaryingBlur.rst", "stubs/deepinv.physics.Tomography.rst", "stubs/deepinv.physics.UniformGaussianNoise.rst", "stubs/deepinv.physics.UniformNoise.rst", "stubs/deepinv.physics.adjoint_function.rst", "stubs/deepinv.physics.blur.bicubic_filter.rst", "stubs/deepinv.physics.blur.bilinear_filter.rst", "stubs/deepinv.physics.blur.gaussian_blur.rst", "stubs/deepinv.physics.functional.IRadon.rst", "stubs/deepinv.physics.functional.Radon.rst", "stubs/deepinv.physics.functional.conv2d.rst", "stubs/deepinv.physics.functional.conv2d_fft.rst", "stubs/deepinv.physics.functional.conv3d.rst", "stubs/deepinv.physics.functional.conv_transpose2d.rst", "stubs/deepinv.physics.functional.conv_transpose2d_fft.rst", "stubs/deepinv.physics.functional.conv_transpose3d.rst", "stubs/deepinv.physics.functional.histogram.rst", "stubs/deepinv.physics.functional.histogramdd.rst", "stubs/deepinv.physics.functional.multiplier.rst", "stubs/deepinv.physics.functional.multiplier_adjoint.rst", "stubs/deepinv.physics.functional.product_convolution2d.rst", "stubs/deepinv.physics.generator.DiffractionBlurGenerator.rst", "stubs/deepinv.physics.generator.EquispacedMaskGenerator.rst", "stubs/deepinv.physics.generator.GaussianMaskGenerator.rst", "stubs/deepinv.physics.generator.GeneratorMixture.rst", "stubs/deepinv.physics.generator.MotionBlurGenerator.rst", "stubs/deepinv.physics.generator.PhysicsGenerator.rst", "stubs/deepinv.physics.generator.RandomMaskGenerator.rst", "stubs/deepinv.physics.generator.SigmaGenerator.rst", "stubs/deepinv.sampling.DDRM.rst", "stubs/deepinv.sampling.DPS.rst", "stubs/deepinv.sampling.DiffPIR.rst", "stubs/deepinv.sampling.DiffusionSampler.rst", "stubs/deepinv.sampling.MonteCarlo.rst", "stubs/deepinv.sampling.SKRock.rst", "stubs/deepinv.sampling.ULA.rst", "stubs/deepinv.test.rst", "stubs/deepinv.train.rst", "stubs/deepinv.training.AdversarialTrainer.rst", "stubs/deepinv.transform.Homography.rst", "stubs/deepinv.transform.Rotate.rst", "stubs/deepinv.transform.Scale.rst", "stubs/deepinv.transform.Shift.rst", "stubs/deepinv.transform.Transform.rst", "stubs/deepinv.transform.projective.Affine.rst", "stubs/deepinv.transform.projective.Euclidean.rst", "stubs/deepinv.transform.projective.PanTiltRotate.rst", "stubs/deepinv.transform.projective.Similarity.rst", "stubs/deepinv.unfolded.BaseDEQ.rst", "stubs/deepinv.unfolded.BaseUnfold.rst", "stubs/deepinv.unfolded.DEQ_builder.rst", "stubs/deepinv.unfolded.unfolded_builder.rst", "stubs/deepinv.utils.TensorList.rst", "stubs/deepinv.utils.cal_psnr.rst", "stubs/deepinv.utils.get_freer_gpu.rst", "stubs/deepinv.utils.load_image.rst", "stubs/deepinv.utils.load_url_image.rst", "stubs/deepinv.utils.ones_like.rst", "stubs/deepinv.utils.plot.rst", "stubs/deepinv.utils.plot_curves.rst", "stubs/deepinv.utils.plot_inset.rst", "stubs/deepinv.utils.plot_parameters.rst", "stubs/deepinv.utils.plot_videos.rst", "stubs/deepinv.utils.rand_like.rst", "stubs/deepinv.utils.randn_like.rst", "stubs/deepinv.utils.zeros_like.rst"], "indexentries": {"__add__() (deepinv.physics.generator.physicsgenerator method)": [[212, "deepinv.physics.generator.PhysicsGenerator.__add__", false]], "__add__() (deepinv.physics.linearphysics method)": [[174, "deepinv.physics.LinearPhysics.__add__", false]], "__add__() (deepinv.physics.physics method)": [[179, "deepinv.physics.Physics.__add__", false]], "__add__() (deepinv.transform.transform method)": [[229, "deepinv.transform.Transform.__add__", false]], "__add__() (deepinv.utils.tensorlist method)": [[238, "deepinv.utils.TensorList.__add__", false]], "__mul__() (deepinv.physics.inpainting method)": [[173, "deepinv.physics.Inpainting.__mul__", false]], "__mul__() (deepinv.physics.linearphysics method)": [[174, "deepinv.physics.LinearPhysics.__mul__", false]], "__mul__() (deepinv.physics.physics method)": [[179, "deepinv.physics.Physics.__mul__", false]], "__mul__() (deepinv.transform.transform method)": [[229, "deepinv.transform.Transform.__mul__", false]], "__mul__() (deepinv.utils.tensorlist method)": [[238, "deepinv.utils.TensorList.__mul__", false]], "__neg__() (deepinv.utils.tensorlist method)": [[238, "deepinv.utils.TensorList.__neg__", false]], "__sub__() (deepinv.utils.tensorlist method)": [[238, "deepinv.utils.TensorList.__sub__", false]], "__truediv__() (deepinv.utils.tensorlist method)": [[238, "deepinv.utils.TensorList.__truediv__", false]], "a() (deepinv.physics.blur method)": [[162, "deepinv.physics.Blur.A", false]], "a() (deepinv.physics.blurfft method)": [[163, "deepinv.physics.BlurFFT.A", false]], "a() (deepinv.physics.compressedsensing method)": [[164, "deepinv.physics.CompressedSensing.A", false]], "a() (deepinv.physics.decomposablephysics method)": [[166, "deepinv.physics.DecomposablePhysics.A", false]], "a() (deepinv.physics.downsampling method)": [[169, "deepinv.physics.Downsampling.A", false]], "a() (deepinv.physics.dynamicmri method)": [[170, "deepinv.physics.DynamicMRI.A", false]], "a() (deepinv.physics.haze method)": [[172, "deepinv.physics.Haze.A", false]], "a() (deepinv.physics.pansharpen method)": [[177, "deepinv.physics.Pansharpen.A", false]], "a() (deepinv.physics.phaseretrieval method)": [[178, "deepinv.physics.PhaseRetrieval.A", false]], "a() (deepinv.physics.physics method)": [[179, "deepinv.physics.Physics.A", false]], "a() (deepinv.physics.radiointerferometry method)": [[182, "deepinv.physics.RadioInterferometry.A", false]], "a() (deepinv.physics.singlephotonlidar method)": [[184, "deepinv.physics.SinglePhotonLidar.A", false]], "a() (deepinv.physics.spacevaryingblur method)": [[186, "deepinv.physics.SpaceVaryingBlur.A", false]], "a() (deepinv.physics.tomography method)": [[187, "deepinv.physics.Tomography.A", false]], "a_adjoint() (deepinv.physics.blur method)": [[162, "deepinv.physics.Blur.A_adjoint", false]], "a_adjoint() (deepinv.physics.blurfft method)": [[163, "deepinv.physics.BlurFFT.A_adjoint", false]], "a_adjoint() (deepinv.physics.compressedsensing method)": [[164, "deepinv.physics.CompressedSensing.A_adjoint", false]], "a_adjoint() (deepinv.physics.decomposablephysics method)": [[166, "deepinv.physics.DecomposablePhysics.A_adjoint", false]], "a_adjoint() (deepinv.physics.downsampling method)": [[169, "deepinv.physics.Downsampling.A_adjoint", false]], "a_adjoint() (deepinv.physics.dynamicmri method)": [[170, "deepinv.physics.DynamicMRI.A_adjoint", false]], "a_adjoint() (deepinv.physics.linearphysics method)": [[174, "deepinv.physics.LinearPhysics.A_adjoint", false]], "a_adjoint() (deepinv.physics.pansharpen method)": [[177, "deepinv.physics.Pansharpen.A_adjoint", false]], "a_adjoint() (deepinv.physics.radiointerferometry method)": [[182, "deepinv.physics.RadioInterferometry.A_adjoint", false]], "a_adjoint() (deepinv.physics.spacevaryingblur method)": [[186, "deepinv.physics.SpaceVaryingBlur.A_adjoint", false]], "a_adjoint() (deepinv.physics.tomography method)": [[187, "deepinv.physics.Tomography.A_adjoint", false]], "a_dagger() (deepinv.physics.compressedsensing method)": [[164, "deepinv.physics.CompressedSensing.A_dagger", false]], "a_dagger() (deepinv.physics.decomposablephysics method)": [[166, "deepinv.physics.DecomposablePhysics.A_dagger", false]], "a_dagger() (deepinv.physics.dynamicmri method)": [[170, "deepinv.physics.DynamicMRI.A_dagger", false]], "a_dagger() (deepinv.physics.haze method)": [[172, "deepinv.physics.Haze.A_dagger", false]], "a_dagger() (deepinv.physics.linearphysics method)": [[174, "deepinv.physics.LinearPhysics.A_dagger", false]], "a_dagger() (deepinv.physics.phaseretrieval method)": [[178, "deepinv.physics.PhaseRetrieval.A_dagger", false]], "a_dagger() (deepinv.physics.physics method)": [[179, "deepinv.physics.Physics.A_dagger", false]], "a_dagger() (deepinv.physics.singlephotonlidar method)": [[184, "deepinv.physics.SinglePhotonLidar.A_dagger", false]], "a_dagger() (deepinv.physics.tomography method)": [[187, "deepinv.physics.Tomography.A_dagger", false]], "a_vjp() (deepinv.physics.linearphysics method)": [[174, "deepinv.physics.LinearPhysics.A_vjp", false]], "a_vjp() (deepinv.physics.phaseretrieval method)": [[178, "deepinv.physics.PhaseRetrieval.A_vjp", false]], "a_vjp() (deepinv.physics.physics method)": [[179, "deepinv.physics.Physics.A_vjp", false]], "adapt_model() (deepinv.loss.loss method)": [[77, "deepinv.loss.Loss.adapt_model", false]], "adapt_model() (deepinv.loss.r2rloss method)": [[84, "deepinv.loss.R2RLoss.adapt_model", false]], "adapt_model() (deepinv.loss.splittingloss method)": [[86, "deepinv.loss.SplittingLoss.adapt_model", false]], "adjoint_function (class in deepinv.physics)": [[190, "deepinv.physics.adjoint_function", false]], "adjointness_test() (deepinv.physics.linearphysics method)": [[174, "deepinv.physics.LinearPhysics.adjointness_test", false]], "admmiteration (class in deepinv.optim.optim_iterators)": [[151, "deepinv.optim.optim_iterators.ADMMIteration", false]], "adversarial_loss() (deepinv.loss.adversarial.discriminatorloss method)": [[92, "deepinv.loss.adversarial.DiscriminatorLoss.adversarial_loss", false]], "adversarial_loss() (deepinv.loss.adversarial.generatorloss method)": [[94, "deepinv.loss.adversarial.GeneratorLoss.adversarial_loss", false]], "adversarialtrainer (class in deepinv.training)": [[224, "deepinv.training.AdversarialTrainer", false]], "affine (class in deepinv.transform.projective)": [[230, "deepinv.transform.projective.Affine", false]], "amplitudeloss (class in deepinv.optim)": [[128, "deepinv.optim.AmplitudeLoss", false]], "anderson_acceleration_step() (deepinv.optim.fixedpoint method)": [[133, "deepinv.optim.FixedPoint.anderson_acceleration_step", false]], "append() (deepinv.utils.tensorlist method)": [[238, "deepinv.utils.TensorList.append", false]], "artifactremoval (class in deepinv.models)": [[100, "deepinv.models.ArtifactRemoval", false]], "autoencoder (class in deepinv.models)": [[101, "deepinv.models.AutoEncoder", false]], "b_dagger() (deepinv.physics.phaseretrieval method)": [[178, "deepinv.physics.PhaseRetrieval.B_dagger", false]], "basedeq (class in deepinv.unfolded)": [[234, "deepinv.unfolded.BaseDEQ", false]], "baseoptim (class in deepinv.optim)": [[129, "deepinv.optim.BaseOptim", false]], "baseunfold (class in deepinv.unfolded)": [[235, "deepinv.unfolded.BaseUnfold", false]], "bicubic_filter() (in module deepinv.physics.blur)": [[191, "deepinv.physics.blur.bicubic_filter", false]], "bilinear_filter() (in module deepinv.physics.blur)": [[192, "deepinv.physics.blur.bilinear_filter", false]], "blur (class in deepinv.physics)": [[162, "deepinv.physics.Blur", false]], "blurfft (class in deepinv.physics)": [[163, "deepinv.physics.BlurFFT", false]], "bm3d (class in deepinv.models)": [[102, "deepinv.models.BM3D", false]], "cal_psnr() (in module deepinv.utils)": [[239, "deepinv.utils.cal_psnr", false]], "cbsd68 (class in deepinv.datasets)": [[65, "deepinv.datasets.CBSD68", false]], "check_clip_grad() (deepinv.trainer method)": [[64, "deepinv.Trainer.check_clip_grad", false]], "check_clip_grad_d() (deepinv.training.adversarialtrainer method)": [[224, "deepinv.training.AdversarialTrainer.check_clip_grad_D", false]], "check_conv_fn() (deepinv.optim.baseoptim method)": [[129, "deepinv.optim.BaseOptim.check_conv_fn", false]], "check_dataset_exists() (deepinv.datasets.cbsd68 method)": [[65, "deepinv.datasets.CBSD68.check_dataset_exists", false]], "check_dataset_exists() (deepinv.datasets.set14hr method)": [[70, "deepinv.datasets.Set14HR.check_dataset_exists", false]], "check_dataset_exists() (deepinv.datasets.urban100hr method)": [[71, "deepinv.datasets.Urban100HR.check_dataset_exists", false]], "check_iteration_fn() (deepinv.optim.baseoptim method)": [[129, "deepinv.optim.BaseOptim.check_iteration_fn", false]], "check_mask() (deepinv.physics.dynamicmri method)": [[170, "deepinv.physics.DynamicMRI.check_mask", false]], "check_mask() (deepinv.physics.mri method)": [[176, "deepinv.physics.MRI.check_mask", false]], "classify() (deepinv.optim.utils.gaussianmixturemodel method)": [[159, "deepinv.optim.utils.GaussianMixtureModel.classify", false]], "component_log_likelihoods() (deepinv.optim.utils.gaussianmixturemodel method)": [[159, "deepinv.optim.utils.GaussianMixtureModel.component_log_likelihoods", false]], "compressedsensing (class in deepinv.physics)": [[164, "deepinv.physics.CompressedSensing", false]], "compute_alpha_betas() (deepinv.sampling.dps method)": [[216, "deepinv.sampling.DPS.compute_alpha_betas", false]], "compute_loss() (deepinv.trainer method)": [[64, "deepinv.Trainer.compute_loss", false]], "compute_loss() (deepinv.training.adversarialtrainer method)": [[224, "deepinv.training.AdversarialTrainer.compute_loss", false]], "compute_metrics() (deepinv.trainer method)": [[64, "deepinv.Trainer.compute_metrics", false]], "compute_norm() (deepinv.physics.linearphysics method)": [[174, "deepinv.physics.LinearPhysics.compute_norm", false]], "conj() (deepinv.utils.tensorlist method)": [[238, "deepinv.utils.TensorList.conj", false]], "conjugate_gradient (class in deepinv.optim.utils)": [[160, "deepinv.optim.utils.conjugate_gradient", false]], "conv2d (class in deepinv.physics.functional)": [[196, "deepinv.physics.functional.conv2d", false]], "conv2d_fft (class in deepinv.physics.functional)": [[197, "deepinv.physics.functional.conv2d_fft", false]], "conv3d (class in deepinv.physics.functional)": [[198, "deepinv.physics.functional.conv3d", false]], "conv_transpose2d (class in deepinv.physics.functional)": [[199, "deepinv.physics.functional.conv_transpose2d", false]], "conv_transpose2d_fft (class in deepinv.physics.functional)": [[200, "deepinv.physics.functional.conv_transpose2d_fft", false]], "conv_transpose3d (class in deepinv.physics.functional)": [[201, "deepinv.physics.functional.conv_transpose3d", false]], "convdecoder (class in deepinv.models)": [[104, "deepinv.models.ConvDecoder", false]], "convert_to_fp16() (deepinv.models.diffunet method)": [[109, "deepinv.models.DiffUNet.convert_to_fp16", false]], "convert_to_fp32() (deepinv.models.diffunet method)": [[109, "deepinv.models.DiffUNet.convert_to_fp32", false]], "cpiteration (class in deepinv.optim.optim_iterators)": [[152, "deepinv.optim.optim_iterators.CPIteration", false]], "crop_output() (deepinv.models.waveletdenoiser method)": [[125, "deepinv.models.WaveletDenoiser.crop_output", false]], "csgmgenerator (class in deepinv.models)": [[103, "deepinv.models.CSGMGenerator", false]], "d() (deepinv.optim.amplitudeloss method)": [[128, "deepinv.optim.AmplitudeLoss.d", false]], "d() (deepinv.optim.datafidelity method)": [[131, "deepinv.optim.DataFidelity.d", false]], "d() (deepinv.optim.indicatorl2 method)": [[134, "deepinv.optim.IndicatorL2.d", false]], "d() (deepinv.optim.l1 method)": [[135, "deepinv.optim.L1.d", false]], "d() (deepinv.optim.l2 method)": [[137, "deepinv.optim.L2.d", false]], "d() (deepinv.optim.logpoissonlikelihood method)": [[138, "deepinv.optim.LogPoissonLikelihood.d", false]], "d() (deepinv.optim.poissonlikelihood method)": [[143, "deepinv.optim.PoissonLikelihood.d", false]], "datafidelity (class in deepinv.optim)": [[131, "deepinv.optim.DataFidelity", false]], "dcgandiscriminator (class in deepinv.models)": [[105, "deepinv.models.DCGANDiscriminator", false]], "dcgangenerator (class in deepinv.models)": [[106, "deepinv.models.DCGANGenerator", false]], "ddrm (class in deepinv.sampling)": [[215, "deepinv.sampling.DDRM", false]], "decolorize (class in deepinv.physics)": [[165, "deepinv.physics.Decolorize", false]], "decomposablephysics (class in deepinv.physics)": [[166, "deepinv.physics.DecomposablePhysics", false]], "deepimageprior (class in deepinv.models)": [[108, "deepinv.models.DeepImagePrior", false]], "demosaicing (class in deepinv.physics)": [[167, "deepinv.physics.Demosaicing", false]], "denoising (class in deepinv.physics)": [[168, "deepinv.physics.Denoising", false]], "deq_builder() (in module deepinv.unfolded)": [[236, "deepinv.unfolded.DEQ_builder", false]], "diffpir (class in deepinv.sampling)": [[217, "deepinv.sampling.DiffPIR", false]], "diffractionblurgenerator (class in deepinv.physics.generator)": [[207, "deepinv.physics.generator.DiffractionBlurGenerator", false]], "diffunet (class in deepinv.models)": [[109, "deepinv.models.DiffUNet", false]], "diffusionsampler (class in deepinv.sampling)": [[218, "deepinv.sampling.DiffusionSampler", false]], "discriminatorloss (class in deepinv.loss.adversarial)": [[92, "deepinv.loss.adversarial.DiscriminatorLoss", false]], "discriminatormetric (class in deepinv.loss.adversarial)": [[93, "deepinv.loss.adversarial.DiscriminatorMetric", false]], "div2k (class in deepinv.datasets)": [[66, "deepinv.datasets.DIV2K", false]], "dncnn (class in deepinv.models)": [[110, "deepinv.models.DnCNN", false]], "downsampling (class in deepinv.physics)": [[169, "deepinv.physics.Downsampling", false]], "dpir (class in deepinv.optim)": [[130, "deepinv.optim.DPIR", false]], "dps (class in deepinv.sampling)": [[216, "deepinv.sampling.DPS", false]], "drsiteration (class in deepinv.optim.optim_iterators)": [[153, "deepinv.optim.optim_iterators.DRSIteration", false]], "drunet (class in deepinv.models)": [[107, "deepinv.models.DRUNet", false]], "dwt() (deepinv.models.waveletdenoiser method)": [[125, "deepinv.models.WaveletDenoiser.dwt", false]], "dynamicmri (class in deepinv.physics)": [[170, "deepinv.physics.DynamicMRI", false]], "eiloss (class in deepinv.loss)": [[73, "deepinv.loss.EILoss", false]], "epll (class in deepinv.optim)": [[132, "deepinv.optim.EPLL", false]], "eplldenoiser (class in deepinv.models)": [[111, "deepinv.models.EPLLDenoiser", false]], "epsilon() (deepinv.models.tgvdenoiser static method)": [[122, "deepinv.models.TGVDenoiser.epsilon", false]], "epsilon_adjoint() (deepinv.models.tgvdenoiser static method)": [[122, "deepinv.models.TGVDenoiser.epsilon_adjoint", false]], "equispacedmaskgenerator (class in deepinv.physics.generator)": [[208, "deepinv.physics.generator.EquispacedMaskGenerator", false]], "equivariantdenoiser (class in deepinv.models)": [[113, "deepinv.models.EquivariantDenoiser", false]], "esrgandiscriminator (class in deepinv.models)": [[112, "deepinv.models.ESRGANDiscriminator", false]], "euclidean (class in deepinv.transform.projective)": [[231, "deepinv.transform.projective.Euclidean", false]], "f_matern() (deepinv.physics.generator.motionblurgenerator method)": [[211, "deepinv.physics.generator.MotionBlurGenerator.f_matern", false]], "fastmrislicedataset (class in deepinv.datasets)": [[67, "deepinv.datasets.FastMRISliceDataset", false]], "fastmrislicedataset.slicesamplefileidentifier (class in deepinv.datasets)": [[67, "deepinv.datasets.FastMRISliceDataset.SliceSampleFileIdentifier", false]], "find_nearest() (deepinv.models.diffunet method)": [[109, "deepinv.models.DiffUNet.find_nearest", false]], "find_nearest() (deepinv.sampling.diffpir method)": [[217, "deepinv.sampling.DiffPIR.find_nearest", false]], "fistaiteration (class in deepinv.optim.optim_iterators)": [[154, "deepinv.optim.optim_iterators.FISTAIteration", false]], "fit() (deepinv.optim.utils.gaussianmixturemodel method)": [[159, "deepinv.optim.utils.GaussianMixtureModel.fit", false]], "fixedpoint (class in deepinv.optim)": [[133, "deepinv.optim.FixedPoint", false]], "flatten() (deepinv.utils.tensorlist method)": [[238, "deepinv.utils.TensorList.flatten", false]], "flatten_coeffs() (deepinv.models.waveletdenoiser method)": [[125, "deepinv.models.WaveletDenoiser.flatten_coeffs", false]], "fname (deepinv.datasets.fastmrislicedataset.slicesamplefileidentifier attribute)": [[67, "deepinv.datasets.FastMRISliceDataset.SliceSampleFileIdentifier.fname", false]], "fnejacobianspectralnorm (class in deepinv.loss)": [[74, "deepinv.loss.FNEJacobianSpectralNorm", false]], "forward() (deepinv.loss.adversarial.discriminatorloss method)": [[92, "deepinv.loss.adversarial.DiscriminatorLoss.forward", false]], "forward() (deepinv.loss.adversarial.generatorloss method)": [[94, "deepinv.loss.adversarial.GeneratorLoss.forward", false]], "forward() (deepinv.loss.adversarial.supadversarialdiscriminatorloss method)": [[95, "deepinv.loss.adversarial.SupAdversarialDiscriminatorLoss.forward", false]], "forward() (deepinv.loss.adversarial.supadversarialgeneratorloss method)": [[96, "deepinv.loss.adversarial.SupAdversarialGeneratorLoss.forward", false]], "forward() (deepinv.loss.adversarial.uairgeneratorloss method)": [[97, "deepinv.loss.adversarial.UAIRGeneratorLoss.forward", false]], "forward() (deepinv.loss.adversarial.unsupadversarialdiscriminatorloss method)": [[98, "deepinv.loss.adversarial.UnsupAdversarialDiscriminatorLoss.forward", false]], "forward() (deepinv.loss.adversarial.unsupadversarialgeneratorloss method)": [[99, "deepinv.loss.adversarial.UnsupAdversarialGeneratorLoss.forward", false]], "forward() (deepinv.loss.eiloss method)": [[73, "deepinv.loss.EILoss.forward", false]], "forward() (deepinv.loss.fnejacobianspectralnorm method)": [[74, "deepinv.loss.FNEJacobianSpectralNorm.forward", false]], "forward() (deepinv.loss.jacobianspectralnorm method)": [[75, "deepinv.loss.JacobianSpectralNorm.forward", false]], "forward() (deepinv.loss.loss method)": [[77, "deepinv.loss.Loss.forward", false]], "forward() (deepinv.loss.lpips method)": [[76, "deepinv.loss.LPIPS.forward", false]], "forward() (deepinv.loss.lpnorm method)": [[78, "deepinv.loss.LpNorm.forward", false]], "forward() (deepinv.loss.mcloss method)": [[79, "deepinv.loss.MCLoss.forward", false]], "forward() (deepinv.loss.moiloss method)": [[80, "deepinv.loss.MOILoss.forward", false]], "forward() (deepinv.loss.neighbor2neighbor method)": [[82, "deepinv.loss.Neighbor2Neighbor.forward", false]], "forward() (deepinv.loss.niqe method)": [[81, "deepinv.loss.NIQE.forward", false]], "forward() (deepinv.loss.psnr method)": [[83, "deepinv.loss.PSNR.forward", false]], "forward() (deepinv.loss.r2rloss method)": [[84, "deepinv.loss.R2RLoss.forward", false]], "forward() (deepinv.loss.splittingloss method)": [[86, "deepinv.loss.SplittingLoss.forward", false]], "forward() (deepinv.loss.ssim method)": [[85, "deepinv.loss.SSIM.forward", false]], "forward() (deepinv.loss.suploss method)": [[87, "deepinv.loss.SupLoss.forward", false]], "forward() (deepinv.loss.suregaussianloss method)": [[88, "deepinv.loss.SureGaussianLoss.forward", false]], "forward() (deepinv.loss.surepgloss method)": [[89, "deepinv.loss.SurePGLoss.forward", false]], "forward() (deepinv.loss.surepoissonloss method)": [[90, "deepinv.loss.SurePoissonLoss.forward", false]], "forward() (deepinv.loss.tvloss method)": [[91, "deepinv.loss.TVLoss.forward", false]], "forward() (deepinv.models.artifactremoval method)": [[100, "deepinv.models.ArtifactRemoval.forward", false]], "forward() (deepinv.models.autoencoder method)": [[101, "deepinv.models.AutoEncoder.forward", false]], "forward() (deepinv.models.bm3d method)": [[102, "deepinv.models.BM3D.forward", false]], "forward() (deepinv.models.convdecoder method)": [[104, "deepinv.models.ConvDecoder.forward", false]], "forward() (deepinv.models.csgmgenerator method)": [[103, "deepinv.models.CSGMGenerator.forward", false]], "forward() (deepinv.models.dcgandiscriminator method)": [[105, "deepinv.models.DCGANDiscriminator.forward", false]], "forward() (deepinv.models.dcgangenerator method)": [[106, "deepinv.models.DCGANGenerator.forward", false]], "forward() (deepinv.models.deepimageprior method)": [[108, "deepinv.models.DeepImagePrior.forward", false]], "forward() (deepinv.models.diffunet method)": [[109, "deepinv.models.DiffUNet.forward", false]], "forward() (deepinv.models.dncnn method)": [[110, "deepinv.models.DnCNN.forward", false]], "forward() (deepinv.models.drunet method)": [[107, "deepinv.models.DRUNet.forward", false]], "forward() (deepinv.models.eplldenoiser method)": [[111, "deepinv.models.EPLLDenoiser.forward", false]], "forward() (deepinv.models.equivariantdenoiser method)": [[113, "deepinv.models.EquivariantDenoiser.forward", false]], "forward() (deepinv.models.esrgandiscriminator method)": [[112, "deepinv.models.ESRGANDiscriminator.forward", false]], "forward() (deepinv.models.medianfilter method)": [[115, "deepinv.models.MedianFilter.forward", false]], "forward() (deepinv.models.patchgandiscriminator method)": [[118, "deepinv.models.PatchGANDiscriminator.forward", false]], "forward() (deepinv.models.pdnet_dualblock method)": [[116, "deepinv.models.PDNet_DualBlock.forward", false]], "forward() (deepinv.models.pdnet_primalblock method)": [[117, "deepinv.models.PDNet_PrimalBlock.forward", false]], "forward() (deepinv.models.restormer method)": [[119, "deepinv.models.Restormer.forward", false]], "forward() (deepinv.models.scunet method)": [[120, "deepinv.models.SCUNet.forward", false]], "forward() (deepinv.models.swinir method)": [[121, "deepinv.models.SwinIR.forward", false]], "forward() (deepinv.models.tgvdenoiser method)": [[122, "deepinv.models.TGVDenoiser.forward", false]], "forward() (deepinv.models.tvdenoiser method)": [[123, "deepinv.models.TVDenoiser.forward", false]], "forward() (deepinv.models.unet method)": [[124, "deepinv.models.UNet.forward", false]], "forward() (deepinv.models.waveletdenoiser method)": [[125, "deepinv.models.WaveletDenoiser.forward", false]], "forward() (deepinv.models.waveletdictdenoiser method)": [[126, "deepinv.models.WaveletDictDenoiser.forward", false]], "forward() (deepinv.optim.baseoptim method)": [[129, "deepinv.optim.BaseOptim.forward", false]], "forward() (deepinv.optim.datafidelity method)": [[131, "deepinv.optim.DataFidelity.forward", false]], "forward() (deepinv.optim.epll method)": [[132, "deepinv.optim.EPLL.forward", false]], "forward() (deepinv.optim.fixedpoint method)": [[133, "deepinv.optim.FixedPoint.forward", false]], "forward() (deepinv.optim.optim_iterators.admmiteration method)": [[151, "deepinv.optim.optim_iterators.ADMMIteration.forward", false]], "forward() (deepinv.optim.optim_iterators.cpiteration method)": [[152, "deepinv.optim.optim_iterators.CPIteration.forward", false]], "forward() (deepinv.optim.optim_iterators.drsiteration method)": [[153, "deepinv.optim.optim_iterators.DRSIteration.forward", false]], "forward() (deepinv.optim.optim_iterators.fistaiteration method)": [[154, "deepinv.optim.optim_iterators.FISTAIteration.forward", false]], "forward() (deepinv.optim.optim_iterators.gditeration method)": [[155, "deepinv.optim.optim_iterators.GDIteration.forward", false]], "forward() (deepinv.optim.optim_iterators.smiteration method)": [[158, "deepinv.optim.optim_iterators.SMIteration.forward", false]], "forward() (deepinv.optim.optimiterator method)": [[139, "deepinv.optim.OptimIterator.forward", false]], "forward() (deepinv.optim.patchnr method)": [[140, "deepinv.optim.PatchNR.forward", false]], "forward() (deepinv.optim.prior method)": [[144, "deepinv.optim.Prior.forward", false]], "forward() (deepinv.optim.utils.gaussianmixturemodel method)": [[159, "deepinv.optim.utils.GaussianMixtureModel.forward", false]], "forward() (deepinv.physics.functional.iradon method)": [[194, "deepinv.physics.functional.IRadon.forward", false]], "forward() (deepinv.physics.functional.radon method)": [[195, "deepinv.physics.functional.Radon.forward", false]], "forward() (deepinv.physics.gaussiannoise method)": [[171, "deepinv.physics.GaussianNoise.forward", false]], "forward() (deepinv.physics.logpoissonnoise method)": [[175, "deepinv.physics.LogPoissonNoise.forward", false]], "forward() (deepinv.physics.pansharpen method)": [[177, "deepinv.physics.Pansharpen.forward", false]], "forward() (deepinv.physics.phaseretrieval method)": [[178, "deepinv.physics.PhaseRetrieval.forward", false]], "forward() (deepinv.physics.physics method)": [[179, "deepinv.physics.Physics.forward", false]], "forward() (deepinv.physics.poissongaussiannoise method)": [[180, "deepinv.physics.PoissonGaussianNoise.forward", false]], "forward() (deepinv.physics.poissonnoise method)": [[181, "deepinv.physics.PoissonNoise.forward", false]], "forward() (deepinv.physics.uniformgaussiannoise method)": [[188, "deepinv.physics.UniformGaussianNoise.forward", false]], "forward() (deepinv.physics.uniformnoise method)": [[189, "deepinv.physics.UniformNoise.forward", false]], "forward() (deepinv.sampling.ddrm method)": [[215, "deepinv.sampling.DDRM.forward", false]], "forward() (deepinv.sampling.diffpir method)": [[217, "deepinv.sampling.DiffPIR.forward", false]], "forward() (deepinv.sampling.dps method)": [[216, "deepinv.sampling.DPS.forward", false]], "forward() (deepinv.sampling.montecarlo method)": [[219, "deepinv.sampling.MonteCarlo.forward", false]], "forward() (deepinv.transform.homography method)": [[225, "deepinv.transform.Homography.forward", false]], "forward() (deepinv.transform.projective.affine method)": [[230, "deepinv.transform.projective.Affine.forward", false]], "forward() (deepinv.transform.projective.euclidean method)": [[231, "deepinv.transform.projective.Euclidean.forward", false]], "forward() (deepinv.transform.projective.pantiltrotate method)": [[232, "deepinv.transform.projective.PanTiltRotate.forward", false]], "forward() (deepinv.transform.projective.similarity method)": [[233, "deepinv.transform.projective.Similarity.forward", false]], "forward() (deepinv.transform.rotate method)": [[226, "deepinv.transform.Rotate.forward", false]], "forward() (deepinv.transform.scale method)": [[227, "deepinv.transform.Scale.forward", false]], "forward() (deepinv.transform.shift method)": [[228, "deepinv.transform.Shift.forward", false]], "forward() (deepinv.transform.transform method)": [[229, "deepinv.transform.Transform.forward", false]], "forward() (deepinv.unfolded.basedeq method)": [[234, "deepinv.unfolded.BaseDEQ.forward", false]], "forward_denoise() (deepinv.models.diffunet method)": [[109, "deepinv.models.DiffUNet.forward_denoise", false]], "forward_diffusion() (deepinv.models.diffunet method)": [[109, "deepinv.models.DiffUNet.forward_diffusion", false]], "forward_restormer() (deepinv.models.restormer method)": [[119, "deepinv.models.Restormer.forward_restormer", false]], "g() (deepinv.optim.l1prior method)": [[136, "deepinv.optim.L1Prior.g", false]], "g() (deepinv.optim.patchprior method)": [[141, "deepinv.optim.PatchPrior.g", false]], "g() (deepinv.optim.prior method)": [[144, "deepinv.optim.Prior.g", false]], "g() (deepinv.optim.tikhonov method)": [[148, "deepinv.optim.Tikhonov.g", false]], "g() (deepinv.optim.tvprior method)": [[147, "deepinv.optim.TVPrior.g", false]], "g() (deepinv.optim.waveletprior method)": [[149, "deepinv.optim.WaveletPrior.g", false]], "gaussian_blur() (in module deepinv.physics.blur)": [[193, "deepinv.physics.blur.gaussian_blur", false]], "gaussianmaskgenerator (class in deepinv.physics.generator)": [[209, "deepinv.physics.generator.GaussianMaskGenerator", false]], "gaussianmixturemodel (class in deepinv.optim.utils)": [[159, "deepinv.optim.utils.GaussianMixtureModel", false]], "gaussiannoise (class in deepinv.physics)": [[171, "deepinv.physics.GaussianNoise", false]], "gditeration (class in deepinv.optim.optim_iterators)": [[155, "deepinv.optim.optim_iterators.GDIteration", false]], "generate_coeff() (deepinv.physics.generator.diffractionblurgenerator method)": [[207, "deepinv.physics.generator.DiffractionBlurGenerator.generate_coeff", false]], "generate_dataset (class in deepinv.datasets)": [[72, "deepinv.datasets.generate_dataset", false]], "generatorloss (class in deepinv.loss.adversarial)": [[94, "deepinv.loss.adversarial.GeneratorLoss", false]], "generatormixture (class in deepinv.physics.generator)": [[210, "deepinv.physics.generator.GeneratorMixture", false]], "get_alpha_beta() (deepinv.sampling.diffpir method)": [[217, "deepinv.sampling.DiffPIR.get_alpha_beta", false]], "get_alpha_prod() (deepinv.models.diffunet method)": [[109, "deepinv.models.DiffUNet.get_alpha_prod", false]], "get_alpha_prod() (deepinv.sampling.diffpir method)": [[217, "deepinv.sampling.DiffPIR.get_alpha_prod", false]], "get_chain() (deepinv.sampling.montecarlo method)": [[219, "deepinv.sampling.MonteCarlo.get_chain", false]], "get_cov() (deepinv.optim.utils.gaussianmixturemodel method)": [[159, "deepinv.optim.utils.GaussianMixtureModel.get_cov", false]], "get_cov_inv_reg() (deepinv.optim.utils.gaussianmixturemodel method)": [[159, "deepinv.optim.utils.GaussianMixtureModel.get_cov_inv_reg", false]], "get_freer_gpu() (in module deepinv.utils)": [[240, "deepinv.utils.get_freer_gpu", false]], "get_noise_schedule() (deepinv.sampling.diffpir method)": [[217, "deepinv.sampling.DiffPIR.get_noise_schedule", false]], "get_pdf() (deepinv.physics.generator.gaussianmaskgenerator method)": [[209, "deepinv.physics.generator.GaussianMaskGenerator.get_pdf", false]], "get_pdf() (deepinv.physics.generator.randommaskgenerator method)": [[213, "deepinv.physics.generator.RandomMaskGenerator.get_pdf", false]], "get_samples() (deepinv.trainer method)": [[64, "deepinv.Trainer.get_samples", false]], "get_samples_offline() (deepinv.trainer method)": [[64, "deepinv.Trainer.get_samples_offline", false]], "get_samples_online() (deepinv.trainer method)": [[64, "deepinv.Trainer.get_samples_online", false]], "get_weights() (deepinv.optim.utils.gaussianmixturemodel method)": [[159, "deepinv.optim.utils.GaussianMixtureModel.get_weights", false]], "grad() (deepinv.optim.datafidelity method)": [[131, "deepinv.optim.DataFidelity.grad", false]], "grad() (deepinv.optim.prior method)": [[144, "deepinv.optim.Prior.grad", false]], "grad() (deepinv.optim.red method)": [[145, "deepinv.optim.RED.grad", false]], "grad() (deepinv.optim.scoreprior method)": [[146, "deepinv.optim.ScorePrior.grad", false]], "grad() (deepinv.optim.tikhonov method)": [[148, "deepinv.optim.Tikhonov.grad", false]], "grad_d() (deepinv.optim.amplitudeloss method)": [[128, "deepinv.optim.AmplitudeLoss.grad_d", false]], "grad_d() (deepinv.optim.datafidelity method)": [[131, "deepinv.optim.DataFidelity.grad_d", false]], "grad_d() (deepinv.optim.l1 method)": [[135, "deepinv.optim.L1.grad_d", false]], "grad_d() (deepinv.optim.l2 method)": [[137, "deepinv.optim.L2.grad_d", false]], "grad_d() (deepinv.optim.poissonlikelihood method)": [[143, "deepinv.optim.PoissonLikelihood.grad_d", false]], "gradient_descent (class in deepinv.optim.utils)": [[161, "deepinv.optim.utils.gradient_descent", false]], "gsdrunet (class in deepinv.models)": [[114, "deepinv.models.GSDRUNet", false]], "hard_threshold_topk() (deepinv.models.waveletdenoiser method)": [[125, "deepinv.models.WaveletDenoiser.hard_threshold_topk", false]], "haze (class in deepinv.physics)": [[172, "deepinv.physics.Haze", false]], "hdf5dataset (class in deepinv.datasets)": [[68, "deepinv.datasets.HDF5Dataset", false]], "histogram (class in deepinv.physics.functional)": [[202, "deepinv.physics.functional.histogram", false]], "histogramdd (class in deepinv.physics.functional)": [[203, "deepinv.physics.functional.histogramdd", false]], "homography (class in deepinv.transform)": [[225, "deepinv.transform.Homography", false]], "hqsiteration (class in deepinv.optim.optim_iterators)": [[156, "deepinv.optim.optim_iterators.HQSIteration", false]], "indicatorl2 (class in deepinv.optim)": [[134, "deepinv.optim.IndicatorL2", false]], "init_anderson_acceleration() (deepinv.optim.fixedpoint method)": [[133, "deepinv.optim.FixedPoint.init_anderson_acceleration", false]], "init_iterate_fn() (deepinv.optim.baseoptim method)": [[129, "deepinv.optim.BaseOptim.init_iterate_fn", false]], "init_metrics_fn() (deepinv.optim.baseoptim method)": [[129, "deepinv.optim.BaseOptim.init_metrics_fn", false]], "inpainting (class in deepinv.physics)": [[173, "deepinv.physics.Inpainting", false]], "iradon (class in deepinv.physics.functional)": [[194, "deepinv.physics.functional.IRadon", false]], "is_standard_deblurring_network() (deepinv.models.restormer method)": [[119, "deepinv.models.Restormer.is_standard_deblurring_network", false]], "is_standard_denoising_network() (deepinv.models.restormer method)": [[119, "deepinv.models.Restormer.is_standard_denoising_network", false]], "is_standard_deraining_network() (deepinv.models.restormer method)": [[119, "deepinv.models.Restormer.is_standard_deraining_network", false]], "iwt() (deepinv.models.waveletdenoiser method)": [[125, "deepinv.models.WaveletDenoiser.iwt", false]], "jacobianspectralnorm (class in deepinv.loss)": [[75, "deepinv.loss.JacobianSpectralNorm", false]], "l1 (class in deepinv.optim)": [[135, "deepinv.optim.L1", false]], "l1prior (class in deepinv.optim)": [[136, "deepinv.optim.L1Prior", false]], "l2 (class in deepinv.optim)": [[137, "deepinv.optim.L2", false]], "linearphysics (class in deepinv.physics)": [[174, "deepinv.physics.LinearPhysics", false]], "load_image() (in module deepinv.utils)": [[241, "deepinv.utils.load_image", false]], "load_state_dict() (deepinv.optim.utils.gaussianmixturemodel method)": [[159, "deepinv.optim.utils.GaussianMixtureModel.load_state_dict", false]], "load_url_image() (in module deepinv.utils)": [[242, "deepinv.utils.load_url_image", false]], "log_metrics_wandb() (deepinv.trainer method)": [[64, "deepinv.Trainer.log_metrics_wandb", false]], "logpoissonlikelihood (class in deepinv.optim)": [[138, "deepinv.optim.LogPoissonLikelihood", false]], "logpoissonnoise (class in deepinv.physics)": [[175, "deepinv.physics.LogPoissonNoise", false]], "loss (class in deepinv.loss)": [[77, "deepinv.loss.Loss", false]], "lpips (class in deepinv.loss)": [[76, "deepinv.loss.LPIPS", false]], "lpnorm (class in deepinv.loss)": [[78, "deepinv.loss.LpNorm", false]], "matern_kernel() (deepinv.physics.generator.motionblurgenerator method)": [[211, "deepinv.physics.generator.MotionBlurGenerator.matern_kernel", false]], "mcloss (class in deepinv.loss)": [[79, "deepinv.loss.MCLoss", false]], "mean_has_converged() (deepinv.sampling.montecarlo method)": [[219, "deepinv.sampling.MonteCarlo.mean_has_converged", false]], "medianfilter (class in deepinv.models)": [[115, "deepinv.models.MedianFilter", false]], "model_inference() (deepinv.trainer method)": [[64, "deepinv.Trainer.model_inference", false]], "moiloss (class in deepinv.loss)": [[80, "deepinv.loss.MOILoss", false]], "montecarlo (class in deepinv.sampling)": [[219, "deepinv.sampling.MonteCarlo", false]], "motionblurgenerator (class in deepinv.physics.generator)": [[211, "deepinv.physics.generator.MotionBlurGenerator", false]], "mri (class in deepinv.physics)": [[176, "deepinv.physics.MRI", false]], "multiplier (class in deepinv.physics.functional)": [[204, "deepinv.physics.functional.multiplier", false]], "multiplier_adjoint (class in deepinv.physics.functional)": [[205, "deepinv.physics.functional.multiplier_adjoint", false]], "nabla() (deepinv.models.tgvdenoiser static method)": [[122, "deepinv.models.TGVDenoiser.nabla", false]], "nabla() (deepinv.models.tvdenoiser static method)": [[123, "deepinv.models.TVDenoiser.nabla", false]], "nabla() (deepinv.optim.tvprior method)": [[147, "deepinv.optim.TVPrior.nabla", false]], "nabla_adjoint() (deepinv.models.tgvdenoiser static method)": [[122, "deepinv.models.TGVDenoiser.nabla_adjoint", false]], "nabla_adjoint() (deepinv.models.tvdenoiser static method)": [[123, "deepinv.models.TVDenoiser.nabla_adjoint", false]], "nabla_adjoint() (deepinv.optim.tvprior method)": [[147, "deepinv.optim.TVPrior.nabla_adjoint", false]], "negative_log_likelihood() (deepinv.optim.epll method)": [[132, "deepinv.optim.EPLL.negative_log_likelihood", false]], "neighbor2neighbor (class in deepinv.loss)": [[82, "deepinv.loss.Neighbor2Neighbor", false]], "niqe (class in deepinv.loss)": [[81, "deepinv.loss.NIQE", false]], "noise() (deepinv.physics.dynamicmri method)": [[170, "deepinv.physics.DynamicMRI.noise", false]], "noise() (deepinv.physics.inpainting method)": [[173, "deepinv.physics.Inpainting.noise", false]], "noise() (deepinv.physics.physics method)": [[179, "deepinv.physics.Physics.noise", false]], "ones_like() (in module deepinv.utils)": [[243, "deepinv.utils.ones_like", false]], "optim_builder() (in module deepinv.optim)": [[150, "deepinv.optim.optim_builder", false]], "optimiterator (class in deepinv.optim)": [[139, "deepinv.optim.OptimIterator", false]], "optimize_z() (deepinv.models.csgmgenerator method)": [[103, "deepinv.models.CSGMGenerator.optimize_z", false]], "pad_input() (deepinv.models.waveletdenoiser method)": [[125, "deepinv.models.WaveletDenoiser.pad_input", false]], "pansharpen (class in deepinv.physics)": [[177, "deepinv.physics.Pansharpen", false]], "pantiltrotate (class in deepinv.transform.projective)": [[232, "deepinv.transform.projective.PanTiltRotate", false]], "patchdataset (class in deepinv.datasets)": [[69, "deepinv.datasets.PatchDataset", false]], "patchgandiscriminator (class in deepinv.models)": [[118, "deepinv.models.PatchGANDiscriminator", false]], "patchnr (class in deepinv.optim)": [[140, "deepinv.optim.PatchNR", false]], "patchprior (class in deepinv.optim)": [[141, "deepinv.optim.PatchPrior", false]], "pdnet_dualblock (class in deepinv.models)": [[116, "deepinv.models.PDNet_DualBlock", false]], "pdnet_primalblock (class in deepinv.models)": [[117, "deepinv.models.PDNet_PrimalBlock", false]], "pgditeration (class in deepinv.optim.optim_iterators)": [[157, "deepinv.optim.optim_iterators.PGDIteration", false]], "phaseretrieval (class in deepinv.physics)": [[178, "deepinv.physics.PhaseRetrieval", false]], "physics (class in deepinv.physics)": [[179, "deepinv.physics.Physics", false]], "physicsgenerator (class in deepinv.physics.generator)": [[212, "deepinv.physics.generator.PhysicsGenerator", false]], "plot() (deepinv.trainer method)": [[64, "deepinv.Trainer.plot", false]], "plot() (in module deepinv.utils)": [[244, "deepinv.utils.plot", false]], "plot_curves() (in module deepinv.utils)": [[245, "deepinv.utils.plot_curves", false]], "plot_inset() (in module deepinv.utils)": [[246, "deepinv.utils.plot_inset", false]], "plot_parameters() (in module deepinv.utils)": [[247, "deepinv.utils.plot_parameters", false]], "plot_videos() (in module deepinv.utils)": [[248, "deepinv.utils.plot_videos", false]], "pnp (class in deepinv.optim)": [[142, "deepinv.optim.PnP", false]], "poissongaussiannoise (class in deepinv.physics)": [[180, "deepinv.physics.PoissonGaussianNoise", false]], "poissonlikelihood (class in deepinv.optim)": [[143, "deepinv.optim.PoissonLikelihood", false]], "poissonnoise (class in deepinv.physics)": [[181, "deepinv.physics.PoissonNoise", false]], "prepare_images() (deepinv.trainer method)": [[64, "deepinv.Trainer.prepare_images", false]], "prior (class in deepinv.optim)": [[144, "deepinv.optim.Prior", false]], "product_convolution2d (class in deepinv.physics.functional)": [[206, "deepinv.physics.functional.product_convolution2d", false]], "prox() (deepinv.optim.datafidelity method)": [[131, "deepinv.optim.DataFidelity.prox", false]], "prox() (deepinv.optim.indicatorl2 method)": [[134, "deepinv.optim.IndicatorL2.prox", false]], "prox() (deepinv.optim.l1 method)": [[135, "deepinv.optim.L1.prox", false]], "prox() (deepinv.optim.l1prior method)": [[136, "deepinv.optim.L1Prior.prox", false]], "prox() (deepinv.optim.l2 method)": [[137, "deepinv.optim.L2.prox", false]], "prox() (deepinv.optim.pnp method)": [[142, "deepinv.optim.PnP.prox", false]], "prox() (deepinv.optim.prior method)": [[144, "deepinv.optim.Prior.prox", false]], "prox() (deepinv.optim.tikhonov method)": [[148, "deepinv.optim.Tikhonov.prox", false]], "prox() (deepinv.optim.tvprior method)": [[147, "deepinv.optim.TVPrior.prox", false]], "prox() (deepinv.optim.waveletprior method)": [[149, "deepinv.optim.WaveletPrior.prox", false]], "prox_conjugate() (deepinv.optim.datafidelity method)": [[131, "deepinv.optim.DataFidelity.prox_conjugate", false]], "prox_conjugate() (deepinv.optim.prior method)": [[144, "deepinv.optim.Prior.prox_conjugate", false]], "prox_d() (deepinv.optim.datafidelity method)": [[131, "deepinv.optim.DataFidelity.prox_d", false]], "prox_d() (deepinv.optim.indicatorl2 method)": [[134, "deepinv.optim.IndicatorL2.prox_d", false]], "prox_d() (deepinv.optim.l1 method)": [[135, "deepinv.optim.L1.prox_d", false]], "prox_d() (deepinv.optim.l2 method)": [[137, "deepinv.optim.L2.prox_d", false]], "prox_d() (deepinv.optim.poissonlikelihood method)": [[143, "deepinv.optim.PoissonLikelihood.prox_d", false]], "prox_d_conjugate() (deepinv.optim.datafidelity method)": [[131, "deepinv.optim.DataFidelity.prox_d_conjugate", false]], "prox_l0() (deepinv.models.waveletdenoiser method)": [[125, "deepinv.models.WaveletDenoiser.prox_l0", false]], "prox_l1() (deepinv.models.waveletdenoiser method)": [[125, "deepinv.models.WaveletDenoiser.prox_l1", false]], "prox_l2() (deepinv.physics.decomposablephysics method)": [[166, "deepinv.physics.DecomposablePhysics.prox_l2", false]], "prox_l2() (deepinv.physics.downsampling method)": [[169, "deepinv.physics.Downsampling.prox_l2", false]], "prox_l2() (deepinv.physics.linearphysics method)": [[174, "deepinv.physics.LinearPhysics.prox_l2", false]], "prox_tau_fx() (deepinv.models.tvdenoiser method)": [[123, "deepinv.models.TVDenoiser.prox_tau_fx", false]], "psi() (deepinv.models.waveletdenoiser static method)": [[125, "deepinv.models.WaveletDenoiser.psi", false]], "psi() (deepinv.models.waveletdictdenoiser method)": [[126, "deepinv.models.WaveletDictDenoiser.psi", false]], "psi() (deepinv.optim.waveletprior method)": [[149, "deepinv.optim.WaveletPrior.psi", false]], "psnr (class in deepinv.loss)": [[83, "deepinv.loss.PSNR", false]], "r2rloss (class in deepinv.loss)": [[84, "deepinv.loss.R2RLoss", false]], "radiointerferometry (class in deepinv.physics)": [[182, "deepinv.physics.RadioInterferometry", false]], "radon (class in deepinv.physics.functional)": [[195, "deepinv.physics.functional.Radon", false]], "rand_like() (in module deepinv.utils)": [[249, "deepinv.utils.rand_like", false]], "randn_like() (in module deepinv.utils)": [[250, "deepinv.utils.randn_like", false]], "random_latent() (deepinv.models.csgmgenerator method)": [[103, "deepinv.models.CSGMGenerator.random_latent", false]], "randommaskgenerator (class in deepinv.physics.generator)": [[213, "deepinv.physics.generator.RandomMaskGenerator", false]], "randomphaseretrieval (class in deepinv.physics)": [[183, "deepinv.physics.RandomPhaseRetrieval", false]], "red (class in deepinv.optim)": [[145, "deepinv.optim.RED", false]], "relaxation_step() (deepinv.optim.optimiterator method)": [[139, "deepinv.optim.OptimIterator.relaxation_step", false]], "reset() (deepinv.sampling.montecarlo method)": [[219, "deepinv.sampling.MonteCarlo.reset", false]], "reset_metrics() (deepinv.trainer method)": [[64, "deepinv.Trainer.reset_metrics", false]], "reshape() (deepinv.utils.tensorlist method)": [[238, "deepinv.utils.TensorList.reshape", false]], "reshape_ths() (deepinv.models.waveletdenoiser method)": [[125, "deepinv.models.WaveletDenoiser.reshape_ths", false]], "restormer (class in deepinv.models)": [[119, "deepinv.models.Restormer", false]], "rotate (class in deepinv.transform)": [[226, "deepinv.transform.Rotate", false]], "sample_mask() (deepinv.physics.generator.equispacedmaskgenerator method)": [[208, "deepinv.physics.generator.EquispacedMaskGenerator.sample_mask", false]], "sample_mask() (deepinv.physics.generator.randommaskgenerator method)": [[213, "deepinv.physics.generator.RandomMaskGenerator.sample_mask", false]], "save_model() (deepinv.trainer method)": [[64, "deepinv.Trainer.save_model", false]], "save_model() (deepinv.training.adversarialtrainer method)": [[224, "deepinv.training.AdversarialTrainer.save_model", false]], "scale (class in deepinv.transform)": [[227, "deepinv.transform.Scale", false]], "scoreprior (class in deepinv.optim)": [[146, "deepinv.optim.ScorePrior", false]], "scunet (class in deepinv.models)": [[120, "deepinv.models.SCUNet", false]], "sensor() (deepinv.physics.physics method)": [[179, "deepinv.physics.Physics.sensor", false]], "set14hr (class in deepinv.datasets)": [[70, "deepinv.datasets.Set14HR", false]], "set_cov() (deepinv.optim.utils.gaussianmixturemodel method)": [[159, "deepinv.optim.utils.GaussianMixtureModel.set_cov", false]], "set_cov_reg() (deepinv.optim.utils.gaussianmixturemodel method)": [[159, "deepinv.optim.utils.GaussianMixtureModel.set_cov_reg", false]], "set_weights() (deepinv.optim.utils.gaussianmixturemodel method)": [[159, "deepinv.optim.utils.GaussianMixtureModel.set_weights", false]], "setup_train() (deepinv.trainer method)": [[64, "deepinv.Trainer.setup_train", false]], "setup_train() (deepinv.training.adversarialtrainer method)": [[224, "deepinv.training.AdversarialTrainer.setup_train", false]], "shift (class in deepinv.transform)": [[228, "deepinv.transform.Shift", false]], "sigmagenerator (class in deepinv.physics.generator)": [[214, "deepinv.physics.generator.SigmaGenerator", false]], "similarity (class in deepinv.transform.projective)": [[233, "deepinv.transform.projective.Similarity", false]], "singlephotonlidar (class in deepinv.physics)": [[184, "deepinv.physics.SinglePhotonLidar", false]], "singlepixelcamera (class in deepinv.physics)": [[185, "deepinv.physics.SinglePixelCamera", false]], "skrock (class in deepinv.sampling)": [[220, "deepinv.sampling.SKRock", false]], "slice_ind (deepinv.datasets.fastmrislicedataset.slicesamplefileidentifier attribute)": [[67, "deepinv.datasets.FastMRISliceDataset.SliceSampleFileIdentifier.slice_ind", false]], "smiteration (class in deepinv.optim.optim_iterators)": [[158, "deepinv.optim.optim_iterators.SMIteration", false]], "spacevaryingblur (class in deepinv.physics)": [[186, "deepinv.physics.SpaceVaryingBlur", false]], "splittingloss (class in deepinv.loss)": [[86, "deepinv.loss.SplittingLoss", false]], "ssim (class in deepinv.loss)": [[85, "deepinv.loss.SSIM", false]], "step() (deepinv.physics.generator.diffractionblurgenerator method)": [[207, "deepinv.physics.generator.DiffractionBlurGenerator.step", false]], "step() (deepinv.physics.generator.generatormixture method)": [[210, "deepinv.physics.generator.GeneratorMixture.step", false]], "step() (deepinv.physics.generator.motionblurgenerator method)": [[211, "deepinv.physics.generator.MotionBlurGenerator.step", false]], "step() (deepinv.physics.generator.physicsgenerator method)": [[212, "deepinv.physics.generator.PhysicsGenerator.step", false]], "step() (deepinv.physics.generator.sigmagenerator method)": [[214, "deepinv.physics.generator.SigmaGenerator.step", false]], "step() (deepinv.trainer method)": [[64, "deepinv.Trainer.step", false]], "sum() (deepinv.utils.tensorlist method)": [[238, "deepinv.utils.TensorList.sum", false]], "supadversarialdiscriminatorloss (class in deepinv.loss.adversarial)": [[95, "deepinv.loss.adversarial.SupAdversarialDiscriminatorLoss", false]], "supadversarialgeneratorloss (class in deepinv.loss.adversarial)": [[96, "deepinv.loss.adversarial.SupAdversarialGeneratorLoss", false]], "suploss (class in deepinv.loss)": [[87, "deepinv.loss.SupLoss", false]], "suregaussianloss (class in deepinv.loss)": [[88, "deepinv.loss.SureGaussianLoss", false]], "surepgloss (class in deepinv.loss)": [[89, "deepinv.loss.SurePGLoss", false]], "surepoissonloss (class in deepinv.loss)": [[90, "deepinv.loss.SurePoissonLoss", false]], "swinir (class in deepinv.models)": [[121, "deepinv.models.SwinIR", false]], "tensorlist (class in deepinv.utils)": [[238, "deepinv.utils.TensorList", false]], "test() (deepinv.trainer method)": [[64, "deepinv.Trainer.test", false]], "test() (in module deepinv)": [[222, "deepinv.test", false]], "tgvdenoiser (class in deepinv.models)": [[122, "deepinv.models.TGVDenoiser", false]], "threshold_3d() (deepinv.models.waveletdenoiser method)": [[125, "deepinv.models.WaveletDenoiser.threshold_3D", false]], "threshold_nd() (deepinv.models.waveletdenoiser method)": [[125, "deepinv.models.WaveletDenoiser.threshold_ND", false]], "thresold_2d() (deepinv.models.waveletdenoiser method)": [[125, "deepinv.models.WaveletDenoiser.thresold_2D", false]], "thresold_func() (deepinv.models.waveletdenoiser method)": [[125, "deepinv.models.WaveletDenoiser.thresold_func", false]], "tikhonov (class in deepinv.optim)": [[148, "deepinv.optim.Tikhonov", false]], "to_complex_denoiser (class in deepinv.models.complex)": [[127, "deepinv.models.complex.to_complex_denoiser", false]], "tomography (class in deepinv.physics)": [[187, "deepinv.physics.Tomography", false]], "train() (deepinv.trainer method)": [[64, "deepinv.Trainer.train", false]], "train() (in module deepinv)": [[223, "deepinv.train", false]], "trainer (class in deepinv)": [[64, "deepinv.Trainer", false]], "transform (class in deepinv.transform)": [[229, "deepinv.transform.Transform", false]], "tvdenoiser (class in deepinv.models)": [[123, "deepinv.models.TVDenoiser", false]], "tvloss (class in deepinv.loss)": [[91, "deepinv.loss.TVLoss", false]], "tvprior (class in deepinv.optim)": [[147, "deepinv.optim.TVPrior", false]], "uairgeneratorloss (class in deepinv.loss.adversarial)": [[97, "deepinv.loss.adversarial.UAIRGeneratorLoss", false]], "ula (class in deepinv.sampling)": [[221, "deepinv.sampling.ULA", false]], "unet (class in deepinv.models)": [[124, "deepinv.models.UNet", false]], "unfolded_builder() (in module deepinv.unfolded)": [[237, "deepinv.unfolded.unfolded_builder", false]], "uniformgaussiannoise (class in deepinv.physics)": [[188, "deepinv.physics.UniformGaussianNoise", false]], "uniformnoise (class in deepinv.physics)": [[189, "deepinv.physics.UniformNoise", false]], "unsupadversarialdiscriminatorloss (class in deepinv.loss.adversarial)": [[98, "deepinv.loss.adversarial.UnsupAdversarialDiscriminatorLoss", false]], "unsupadversarialgeneratorloss (class in deepinv.loss.adversarial)": [[99, "deepinv.loss.adversarial.UnsupAdversarialGeneratorLoss", false]], "update() (deepinv.physics.physics method)": [[179, "deepinv.physics.Physics.update", false]], "update_data_fidelity_fn() (deepinv.optim.baseoptim method)": [[129, "deepinv.optim.BaseOptim.update_data_fidelity_fn", false]], "update_metrics_fn() (deepinv.optim.baseoptim method)": [[129, "deepinv.optim.BaseOptim.update_metrics_fn", false]], "update_parameters() (deepinv.physics.blur method)": [[162, "deepinv.physics.Blur.update_parameters", false]], "update_parameters() (deepinv.physics.blurfft method)": [[163, "deepinv.physics.BlurFFT.update_parameters", false]], "update_parameters() (deepinv.physics.decomposablephysics method)": [[166, "deepinv.physics.DecomposablePhysics.update_parameters", false]], "update_parameters() (deepinv.physics.gaussiannoise method)": [[171, "deepinv.physics.GaussianNoise.update_parameters", false]], "update_parameters() (deepinv.physics.logpoissonnoise method)": [[175, "deepinv.physics.LogPoissonNoise.update_parameters", false]], "update_parameters() (deepinv.physics.mri method)": [[176, "deepinv.physics.MRI.update_parameters", false]], "update_parameters() (deepinv.physics.poissongaussiannoise method)": [[180, "deepinv.physics.PoissonGaussianNoise.update_parameters", false]], "update_parameters() (deepinv.physics.poissonnoise method)": [[181, "deepinv.physics.PoissonNoise.update_parameters", false]], "update_parameters() (deepinv.physics.spacevaryingblur method)": [[186, "deepinv.physics.SpaceVaryingBlur.update_parameters", false]], "update_parameters() (deepinv.physics.uniformnoise method)": [[189, "deepinv.physics.UniformNoise.update_parameters", false]], "update_params_fn() (deepinv.optim.baseoptim method)": [[129, "deepinv.optim.BaseOptim.update_params_fn", false]], "update_prior_fn() (deepinv.optim.baseoptim method)": [[129, "deepinv.optim.BaseOptim.update_prior_fn", false]], "urban100hr (class in deepinv.datasets)": [[71, "deepinv.datasets.Urban100HR", false]], "var_has_converged() (deepinv.sampling.montecarlo method)": [[219, "deepinv.sampling.MonteCarlo.var_has_converged", false]], "verify_split_dataset_integrity() (deepinv.datasets.div2k method)": [[66, "deepinv.datasets.DIV2K.verify_split_dataset_integrity", false]], "waveletdenoiser (class in deepinv.models)": [[125, "deepinv.models.WaveletDenoiser", false]], "waveletdictdenoiser (class in deepinv.models)": [[126, "deepinv.models.WaveletDictDenoiser", false]], "waveletprior (class in deepinv.optim)": [[149, "deepinv.optim.WaveletPrior", false]], "zeros_like() (in module deepinv.utils)": [[251, "deepinv.utils.zeros_like", false]]}, "objects": {"deepinv": [[64, 0, 1, "", "Trainer"], [222, 3, 1, "", "test"], [223, 3, 1, "", "train"]], "deepinv.Trainer": [[64, 1, 1, "", "check_clip_grad"], [64, 1, 1, "", "compute_loss"], [64, 1, 1, "", "compute_metrics"], [64, 1, 1, "", "get_samples"], [64, 1, 1, "", "get_samples_offline"], [64, 1, 1, "", "get_samples_online"], [64, 1, 1, "", "log_metrics_wandb"], [64, 1, 1, "", "model_inference"], [64, 1, 1, "", "plot"], [64, 1, 1, "", "prepare_images"], [64, 1, 1, "", "reset_metrics"], [64, 1, 1, "", "save_model"], [64, 1, 1, "", "setup_train"], [64, 1, 1, "", "step"], [64, 1, 1, "", "test"], [64, 1, 1, "", "train"]], "deepinv.datasets": [[65, 0, 1, "", "CBSD68"], [66, 0, 1, "", "DIV2K"], [67, 0, 1, "", "FastMRISliceDataset"], [68, 0, 1, "", "HDF5Dataset"], [69, 0, 1, "", "PatchDataset"], [70, 0, 1, "", "Set14HR"], [71, 0, 1, "", "Urban100HR"], [72, 0, 1, "", "generate_dataset"]], "deepinv.datasets.CBSD68": [[65, 1, 1, "", "check_dataset_exists"]], "deepinv.datasets.DIV2K": [[66, 1, 1, "", "verify_split_dataset_integrity"]], "deepinv.datasets.FastMRISliceDataset": [[67, 0, 1, "", "SliceSampleFileIdentifier"]], "deepinv.datasets.FastMRISliceDataset.SliceSampleFileIdentifier": [[67, 2, 1, "", "fname"], [67, 2, 1, "", "slice_ind"]], "deepinv.datasets.Set14HR": [[70, 1, 1, "", "check_dataset_exists"]], "deepinv.datasets.Urban100HR": [[71, 1, 1, "", "check_dataset_exists"]], "deepinv.loss": [[73, 0, 1, "", "EILoss"], [74, 0, 1, "", "FNEJacobianSpectralNorm"], [75, 0, 1, "", "JacobianSpectralNorm"], [76, 0, 1, "", "LPIPS"], [77, 0, 1, "", "Loss"], [78, 0, 1, "", "LpNorm"], [79, 0, 1, "", "MCLoss"], [80, 0, 1, "", "MOILoss"], [81, 0, 1, "", "NIQE"], [82, 0, 1, "", "Neighbor2Neighbor"], [83, 0, 1, "", "PSNR"], [84, 0, 1, "", "R2RLoss"], [85, 0, 1, "", "SSIM"], [86, 0, 1, "", "SplittingLoss"], [87, 0, 1, "", "SupLoss"], [88, 0, 1, "", "SureGaussianLoss"], [89, 0, 1, "", "SurePGLoss"], [90, 0, 1, "", "SurePoissonLoss"], [91, 0, 1, "", "TVLoss"]], "deepinv.loss.EILoss": [[73, 1, 1, "", "forward"]], "deepinv.loss.FNEJacobianSpectralNorm": [[74, 1, 1, "", "forward"]], "deepinv.loss.JacobianSpectralNorm": [[75, 1, 1, "", "forward"]], "deepinv.loss.LPIPS": [[76, 1, 1, "", "forward"]], "deepinv.loss.Loss": [[77, 1, 1, "", "adapt_model"], [77, 1, 1, "", "forward"]], "deepinv.loss.LpNorm": [[78, 1, 1, "", "forward"]], "deepinv.loss.MCLoss": [[79, 1, 1, "", "forward"]], "deepinv.loss.MOILoss": [[80, 1, 1, "", "forward"]], "deepinv.loss.NIQE": [[81, 1, 1, "", "forward"]], "deepinv.loss.Neighbor2Neighbor": [[82, 1, 1, "", "forward"]], "deepinv.loss.PSNR": [[83, 1, 1, "", "forward"]], "deepinv.loss.R2RLoss": [[84, 1, 1, "", "adapt_model"], [84, 1, 1, "", "forward"]], "deepinv.loss.SSIM": [[85, 1, 1, "", "forward"]], "deepinv.loss.SplittingLoss": [[86, 1, 1, "", "adapt_model"], [86, 1, 1, "", "forward"]], "deepinv.loss.SupLoss": [[87, 1, 1, "", "forward"]], "deepinv.loss.SureGaussianLoss": [[88, 1, 1, "", "forward"]], "deepinv.loss.SurePGLoss": [[89, 1, 1, "", "forward"]], "deepinv.loss.SurePoissonLoss": [[90, 1, 1, "", "forward"]], "deepinv.loss.TVLoss": [[91, 1, 1, "", "forward"]], "deepinv.loss.adversarial": [[92, 0, 1, "", "DiscriminatorLoss"], [93, 0, 1, "", "DiscriminatorMetric"], [94, 0, 1, "", "GeneratorLoss"], [95, 0, 1, "", "SupAdversarialDiscriminatorLoss"], [96, 0, 1, "", "SupAdversarialGeneratorLoss"], [97, 0, 1, "", "UAIRGeneratorLoss"], [98, 0, 1, "", "UnsupAdversarialDiscriminatorLoss"], [99, 0, 1, "", "UnsupAdversarialGeneratorLoss"]], "deepinv.loss.adversarial.DiscriminatorLoss": [[92, 1, 1, "", "adversarial_loss"], [92, 1, 1, "", "forward"]], "deepinv.loss.adversarial.GeneratorLoss": [[94, 1, 1, "", "adversarial_loss"], [94, 1, 1, "", "forward"]], "deepinv.loss.adversarial.SupAdversarialDiscriminatorLoss": [[95, 1, 1, "", "forward"]], "deepinv.loss.adversarial.SupAdversarialGeneratorLoss": [[96, 1, 1, "", "forward"]], "deepinv.loss.adversarial.UAIRGeneratorLoss": [[97, 1, 1, "", "forward"]], "deepinv.loss.adversarial.UnsupAdversarialDiscriminatorLoss": [[98, 1, 1, "", "forward"]], "deepinv.loss.adversarial.UnsupAdversarialGeneratorLoss": [[99, 1, 1, "", "forward"]], "deepinv.models": [[100, 0, 1, "", "ArtifactRemoval"], [101, 0, 1, "", "AutoEncoder"], [102, 0, 1, "", "BM3D"], [103, 0, 1, "", "CSGMGenerator"], [104, 0, 1, "", "ConvDecoder"], [105, 0, 1, "", "DCGANDiscriminator"], [106, 0, 1, "", "DCGANGenerator"], [107, 0, 1, "", "DRUNet"], [108, 0, 1, "", "DeepImagePrior"], [109, 0, 1, "", "DiffUNet"], [110, 0, 1, "", "DnCNN"], [111, 0, 1, "", "EPLLDenoiser"], [112, 0, 1, "", "ESRGANDiscriminator"], [113, 0, 1, "", "EquivariantDenoiser"], [114, 0, 1, "", "GSDRUNet"], [115, 0, 1, "", "MedianFilter"], [116, 0, 1, "", "PDNet_DualBlock"], [117, 0, 1, "", "PDNet_PrimalBlock"], [118, 0, 1, "", "PatchGANDiscriminator"], [119, 0, 1, "", "Restormer"], [120, 0, 1, "", "SCUNet"], [121, 0, 1, "", "SwinIR"], [122, 0, 1, "", "TGVDenoiser"], [123, 0, 1, "", "TVDenoiser"], [124, 0, 1, "", "UNet"], [125, 0, 1, "", "WaveletDenoiser"], [126, 0, 1, "", "WaveletDictDenoiser"]], "deepinv.models.ArtifactRemoval": [[100, 1, 1, "", "forward"]], "deepinv.models.AutoEncoder": [[101, 1, 1, "", "forward"]], "deepinv.models.BM3D": [[102, 1, 1, "", "forward"]], "deepinv.models.CSGMGenerator": [[103, 1, 1, "", "forward"], [103, 1, 1, "", "optimize_z"], [103, 1, 1, "", "random_latent"]], "deepinv.models.ConvDecoder": [[104, 1, 1, "", "forward"]], "deepinv.models.DCGANDiscriminator": [[105, 1, 1, "", "forward"]], "deepinv.models.DCGANGenerator": [[106, 1, 1, "", "forward"]], "deepinv.models.DRUNet": [[107, 1, 1, "", "forward"]], "deepinv.models.DeepImagePrior": [[108, 1, 1, "", "forward"]], "deepinv.models.DiffUNet": [[109, 1, 1, "", "convert_to_fp16"], [109, 1, 1, "", "convert_to_fp32"], [109, 1, 1, "", "find_nearest"], [109, 1, 1, "", "forward"], [109, 1, 1, "", "forward_denoise"], [109, 1, 1, "", "forward_diffusion"], [109, 1, 1, "", "get_alpha_prod"]], "deepinv.models.DnCNN": [[110, 1, 1, "", "forward"]], "deepinv.models.EPLLDenoiser": [[111, 1, 1, "", "forward"]], "deepinv.models.ESRGANDiscriminator": [[112, 1, 1, "", "forward"]], "deepinv.models.EquivariantDenoiser": [[113, 1, 1, "", "forward"]], "deepinv.models.MedianFilter": [[115, 1, 1, "", "forward"]], "deepinv.models.PDNet_DualBlock": [[116, 1, 1, "", "forward"]], "deepinv.models.PDNet_PrimalBlock": [[117, 1, 1, "", "forward"]], "deepinv.models.PatchGANDiscriminator": [[118, 1, 1, "", "forward"]], "deepinv.models.Restormer": [[119, 1, 1, "", "forward"], [119, 1, 1, "", "forward_restormer"], [119, 1, 1, "", "is_standard_deblurring_network"], [119, 1, 1, "", "is_standard_denoising_network"], [119, 1, 1, "", "is_standard_deraining_network"]], "deepinv.models.SCUNet": [[120, 1, 1, "", "forward"]], "deepinv.models.SwinIR": [[121, 1, 1, "", "forward"]], "deepinv.models.TGVDenoiser": [[122, 1, 1, "", "epsilon"], [122, 1, 1, "", "epsilon_adjoint"], [122, 1, 1, "", "forward"], [122, 1, 1, "", "nabla"], [122, 1, 1, "", "nabla_adjoint"]], "deepinv.models.TVDenoiser": [[123, 1, 1, "", "forward"], [123, 1, 1, "", "nabla"], [123, 1, 1, "", "nabla_adjoint"], [123, 1, 1, "", "prox_tau_fx"]], "deepinv.models.UNet": [[124, 1, 1, "", "forward"]], "deepinv.models.WaveletDenoiser": [[125, 1, 1, "", "crop_output"], [125, 1, 1, "", "dwt"], [125, 1, 1, "", "flatten_coeffs"], [125, 1, 1, "", "forward"], [125, 1, 1, "", "hard_threshold_topk"], [125, 1, 1, "", "iwt"], [125, 1, 1, "", "pad_input"], [125, 1, 1, "", "prox_l0"], [125, 1, 1, "", "prox_l1"], [125, 1, 1, "", "psi"], [125, 1, 1, "", "reshape_ths"], [125, 1, 1, "", "threshold_3D"], [125, 1, 1, "", "threshold_ND"], [125, 1, 1, "", "thresold_2D"], [125, 1, 1, "", "thresold_func"]], "deepinv.models.WaveletDictDenoiser": [[126, 1, 1, "", "forward"], [126, 1, 1, "", "psi"]], "deepinv.models.complex": [[127, 0, 1, "", "to_complex_denoiser"]], "deepinv.optim": [[128, 0, 1, "", "AmplitudeLoss"], [129, 0, 1, "", "BaseOptim"], [130, 0, 1, "", "DPIR"], [131, 0, 1, "", "DataFidelity"], [132, 0, 1, "", "EPLL"], [133, 0, 1, "", "FixedPoint"], [134, 0, 1, "", "IndicatorL2"], [135, 0, 1, "", "L1"], [136, 0, 1, "", "L1Prior"], [137, 0, 1, "", "L2"], [138, 0, 1, "", "LogPoissonLikelihood"], [139, 0, 1, "", "OptimIterator"], [140, 0, 1, "", "PatchNR"], [141, 0, 1, "", "PatchPrior"], [142, 0, 1, "", "PnP"], [143, 0, 1, "", "PoissonLikelihood"], [144, 0, 1, "", "Prior"], [145, 0, 1, "", "RED"], [146, 0, 1, "", "ScorePrior"], [147, 0, 1, "", "TVPrior"], [148, 0, 1, "", "Tikhonov"], [149, 0, 1, "", "WaveletPrior"], [150, 3, 1, "", "optim_builder"]], "deepinv.optim.AmplitudeLoss": [[128, 1, 1, "", "d"], [128, 1, 1, "", "grad_d"]], "deepinv.optim.BaseOptim": [[129, 1, 1, "", "check_conv_fn"], [129, 1, 1, "", "check_iteration_fn"], [129, 1, 1, "", "forward"], [129, 1, 1, "", "init_iterate_fn"], [129, 1, 1, "", "init_metrics_fn"], [129, 1, 1, "", "update_data_fidelity_fn"], [129, 1, 1, "", "update_metrics_fn"], [129, 1, 1, "", "update_params_fn"], [129, 1, 1, "", "update_prior_fn"]], "deepinv.optim.DataFidelity": [[131, 1, 1, "", "d"], [131, 1, 1, "", "forward"], [131, 1, 1, "", "grad"], [131, 1, 1, "", "grad_d"], [131, 1, 1, "", "prox"], [131, 1, 1, "", "prox_conjugate"], [131, 1, 1, "", "prox_d"], [131, 1, 1, "", "prox_d_conjugate"]], "deepinv.optim.EPLL": [[132, 1, 1, "", "forward"], [132, 1, 1, "", "negative_log_likelihood"]], "deepinv.optim.FixedPoint": [[133, 1, 1, "", "anderson_acceleration_step"], [133, 1, 1, "", "forward"], [133, 1, 1, "", "init_anderson_acceleration"]], "deepinv.optim.IndicatorL2": [[134, 1, 1, "", "d"], [134, 1, 1, "", "prox"], [134, 1, 1, "", "prox_d"]], "deepinv.optim.L1": [[135, 1, 1, "", "d"], [135, 1, 1, "", "grad_d"], [135, 1, 1, "", "prox"], [135, 1, 1, "", "prox_d"]], "deepinv.optim.L1Prior": [[136, 1, 1, "", "g"], [136, 1, 1, "", "prox"]], "deepinv.optim.L2": [[137, 1, 1, "", "d"], [137, 1, 1, "", "grad_d"], [137, 1, 1, "", "prox"], [137, 1, 1, "", "prox_d"]], "deepinv.optim.LogPoissonLikelihood": [[138, 1, 1, "", "d"]], "deepinv.optim.OptimIterator": [[139, 1, 1, "", "forward"], [139, 1, 1, "", "relaxation_step"]], "deepinv.optim.PatchNR": [[140, 1, 1, "", "forward"]], "deepinv.optim.PatchPrior": [[141, 1, 1, "", "g"]], "deepinv.optim.PnP": [[142, 1, 1, "", "prox"]], "deepinv.optim.PoissonLikelihood": [[143, 1, 1, "", "d"], [143, 1, 1, "", "grad_d"], [143, 1, 1, "", "prox_d"]], "deepinv.optim.Prior": [[144, 1, 1, "", "forward"], [144, 1, 1, "", "g"], [144, 1, 1, "", "grad"], [144, 1, 1, "", "prox"], [144, 1, 1, "", "prox_conjugate"]], "deepinv.optim.RED": [[145, 1, 1, "", "grad"]], "deepinv.optim.ScorePrior": [[146, 1, 1, "", "grad"]], "deepinv.optim.TVPrior": [[147, 1, 1, "", "g"], [147, 1, 1, "", "nabla"], [147, 1, 1, "", "nabla_adjoint"], [147, 1, 1, "", "prox"]], "deepinv.optim.Tikhonov": [[148, 1, 1, "", "g"], [148, 1, 1, "", "grad"], [148, 1, 1, "", "prox"]], "deepinv.optim.WaveletPrior": [[149, 1, 1, "", "g"], [149, 1, 1, "", "prox"], [149, 1, 1, "", "psi"]], "deepinv.optim.optim_iterators": [[151, 0, 1, "", "ADMMIteration"], [152, 0, 1, "", "CPIteration"], [153, 0, 1, "", "DRSIteration"], [154, 0, 1, "", "FISTAIteration"], [155, 0, 1, "", "GDIteration"], [156, 0, 1, "", "HQSIteration"], [157, 0, 1, "", "PGDIteration"], [158, 0, 1, "", "SMIteration"]], "deepinv.optim.optim_iterators.ADMMIteration": [[151, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.CPIteration": [[152, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.DRSIteration": [[153, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.FISTAIteration": [[154, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.GDIteration": [[155, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.SMIteration": [[158, 1, 1, "", "forward"]], "deepinv.optim.utils": [[159, 0, 1, "", "GaussianMixtureModel"], [160, 0, 1, "", "conjugate_gradient"], [161, 0, 1, "", "gradient_descent"]], "deepinv.optim.utils.GaussianMixtureModel": [[159, 1, 1, "", "classify"], [159, 1, 1, "", "component_log_likelihoods"], [159, 1, 1, "", "fit"], [159, 1, 1, "", "forward"], [159, 1, 1, "", "get_cov"], [159, 1, 1, "", "get_cov_inv_reg"], [159, 1, 1, "", "get_weights"], [159, 1, 1, "", "load_state_dict"], [159, 1, 1, "", "set_cov"], [159, 1, 1, "", "set_cov_reg"], [159, 1, 1, "", "set_weights"]], "deepinv.physics": [[162, 0, 1, "", "Blur"], [163, 0, 1, "", "BlurFFT"], [164, 0, 1, "", "CompressedSensing"], [165, 0, 1, "", "Decolorize"], [166, 0, 1, "", "DecomposablePhysics"], [167, 0, 1, "", "Demosaicing"], [168, 0, 1, "", "Denoising"], [169, 0, 1, "", "Downsampling"], [170, 0, 1, "", "DynamicMRI"], [171, 0, 1, "", "GaussianNoise"], [172, 0, 1, "", "Haze"], [173, 0, 1, "", "Inpainting"], [174, 0, 1, "", "LinearPhysics"], [175, 0, 1, "", "LogPoissonNoise"], [176, 0, 1, "", "MRI"], [177, 0, 1, "", "Pansharpen"], [178, 0, 1, "", "PhaseRetrieval"], [179, 0, 1, "", "Physics"], [180, 0, 1, "", "PoissonGaussianNoise"], [181, 0, 1, "", "PoissonNoise"], [182, 0, 1, "", "RadioInterferometry"], [183, 0, 1, "", "RandomPhaseRetrieval"], [184, 0, 1, "", "SinglePhotonLidar"], [185, 0, 1, "", "SinglePixelCamera"], [186, 0, 1, "", "SpaceVaryingBlur"], [187, 0, 1, "", "Tomography"], [188, 0, 1, "", "UniformGaussianNoise"], [189, 0, 1, "", "UniformNoise"], [190, 0, 1, "", "adjoint_function"]], "deepinv.physics.Blur": [[162, 1, 1, "", "A"], [162, 1, 1, "", "A_adjoint"], [162, 1, 1, "", "update_parameters"]], "deepinv.physics.BlurFFT": [[163, 1, 1, "", "A"], [163, 1, 1, "", "A_adjoint"], [163, 1, 1, "", "update_parameters"]], "deepinv.physics.CompressedSensing": [[164, 1, 1, "", "A"], [164, 1, 1, "", "A_adjoint"], [164, 1, 1, "", "A_dagger"]], "deepinv.physics.DecomposablePhysics": [[166, 1, 1, "", "A"], [166, 1, 1, "", "A_adjoint"], [166, 1, 1, "", "A_dagger"], [166, 1, 1, "", "prox_l2"], [166, 1, 1, "", "update_parameters"]], "deepinv.physics.Downsampling": [[169, 1, 1, "", "A"], [169, 1, 1, "", "A_adjoint"], [169, 1, 1, "", "prox_l2"]], "deepinv.physics.DynamicMRI": [[170, 1, 1, "", "A"], [170, 1, 1, "", "A_adjoint"], [170, 1, 1, "", "A_dagger"], [170, 1, 1, "", "check_mask"], [170, 1, 1, "", "noise"]], "deepinv.physics.GaussianNoise": [[171, 1, 1, "", "forward"], [171, 1, 1, "", "update_parameters"]], "deepinv.physics.Haze": [[172, 1, 1, "", "A"], [172, 1, 1, "", "A_dagger"]], "deepinv.physics.Inpainting": [[173, 1, 1, "", "__mul__"], [173, 1, 1, "", "noise"]], "deepinv.physics.LinearPhysics": [[174, 1, 1, "", "A_adjoint"], [174, 1, 1, "", "A_dagger"], [174, 1, 1, "", "A_vjp"], [174, 1, 1, "", "__add__"], [174, 1, 1, "", "__mul__"], [174, 1, 1, "", "adjointness_test"], [174, 1, 1, "", "compute_norm"], [174, 1, 1, "", "prox_l2"]], "deepinv.physics.LogPoissonNoise": [[175, 1, 1, "", "forward"], [175, 1, 1, "", "update_parameters"]], "deepinv.physics.MRI": [[176, 1, 1, "", "check_mask"], [176, 1, 1, "", "update_parameters"]], "deepinv.physics.Pansharpen": [[177, 1, 1, "", "A"], [177, 1, 1, "", "A_adjoint"], [177, 1, 1, "", "forward"]], "deepinv.physics.PhaseRetrieval": [[178, 1, 1, "", "A"], [178, 1, 1, "", "A_dagger"], [178, 1, 1, "", "A_vjp"], [178, 1, 1, "", "B_dagger"], [178, 1, 1, "", "forward"]], "deepinv.physics.Physics": [[179, 1, 1, "", "A"], [179, 1, 1, "", "A_dagger"], [179, 1, 1, "", "A_vjp"], [179, 1, 1, "", "__add__"], [179, 1, 1, "", "__mul__"], [179, 1, 1, "", "forward"], [179, 1, 1, "", "noise"], [179, 1, 1, "", "sensor"], [179, 1, 1, "", "update"]], "deepinv.physics.PoissonGaussianNoise": [[180, 1, 1, "", "forward"], [180, 1, 1, "", "update_parameters"]], "deepinv.physics.PoissonNoise": [[181, 1, 1, "", "forward"], [181, 1, 1, "", "update_parameters"]], "deepinv.physics.RadioInterferometry": [[182, 1, 1, "", "A"], [182, 1, 1, "", "A_adjoint"]], "deepinv.physics.SinglePhotonLidar": [[184, 1, 1, "", "A"], [184, 1, 1, "", "A_dagger"]], "deepinv.physics.SpaceVaryingBlur": [[186, 1, 1, "", "A"], [186, 1, 1, "", "A_adjoint"], [186, 1, 1, "", "update_parameters"]], "deepinv.physics.Tomography": [[187, 1, 1, "", "A"], [187, 1, 1, "", "A_adjoint"], [187, 1, 1, "", "A_dagger"]], "deepinv.physics.UniformGaussianNoise": [[188, 1, 1, "", "forward"]], "deepinv.physics.UniformNoise": [[189, 1, 1, "", "forward"], [189, 1, 1, "", "update_parameters"]], "deepinv.physics.blur": [[191, 3, 1, "", "bicubic_filter"], [192, 3, 1, "", "bilinear_filter"], [193, 3, 1, "", "gaussian_blur"]], "deepinv.physics.functional": [[194, 0, 1, "", "IRadon"], [195, 0, 1, "", "Radon"], [196, 0, 1, "", "conv2d"], [197, 0, 1, "", "conv2d_fft"], [198, 0, 1, "", "conv3d"], [199, 0, 1, "", "conv_transpose2d"], [200, 0, 1, "", "conv_transpose2d_fft"], [201, 0, 1, "", "conv_transpose3d"], [202, 0, 1, "", "histogram"], [203, 0, 1, "", "histogramdd"], [204, 0, 1, "", "multiplier"], [205, 0, 1, "", "multiplier_adjoint"], [206, 0, 1, "", "product_convolution2d"]], "deepinv.physics.functional.IRadon": [[194, 1, 1, "", "forward"]], "deepinv.physics.functional.Radon": [[195, 1, 1, "", "forward"]], "deepinv.physics.generator": [[207, 0, 1, "", "DiffractionBlurGenerator"], [208, 0, 1, "", "EquispacedMaskGenerator"], [209, 0, 1, "", "GaussianMaskGenerator"], [210, 0, 1, "", "GeneratorMixture"], [211, 0, 1, "", "MotionBlurGenerator"], [212, 0, 1, "", "PhysicsGenerator"], [213, 0, 1, "", "RandomMaskGenerator"], [214, 0, 1, "", "SigmaGenerator"]], "deepinv.physics.generator.DiffractionBlurGenerator": [[207, 1, 1, "", "generate_coeff"], [207, 1, 1, "", "step"]], "deepinv.physics.generator.EquispacedMaskGenerator": [[208, 1, 1, "", "sample_mask"]], "deepinv.physics.generator.GaussianMaskGenerator": [[209, 1, 1, "", "get_pdf"]], "deepinv.physics.generator.GeneratorMixture": [[210, 1, 1, "", "step"]], "deepinv.physics.generator.MotionBlurGenerator": [[211, 1, 1, "", "f_matern"], [211, 1, 1, "", "matern_kernel"], [211, 1, 1, "", "step"]], "deepinv.physics.generator.PhysicsGenerator": [[212, 1, 1, "", "__add__"], [212, 1, 1, "", "step"]], "deepinv.physics.generator.RandomMaskGenerator": [[213, 1, 1, "", "get_pdf"], [213, 1, 1, "", "sample_mask"]], "deepinv.physics.generator.SigmaGenerator": [[214, 1, 1, "", "step"]], "deepinv.sampling": [[215, 0, 1, "", "DDRM"], [216, 0, 1, "", "DPS"], [217, 0, 1, "", "DiffPIR"], [218, 0, 1, "", "DiffusionSampler"], [219, 0, 1, "", "MonteCarlo"], [220, 0, 1, "", "SKRock"], [221, 0, 1, "", "ULA"]], "deepinv.sampling.DDRM": [[215, 1, 1, "", "forward"]], "deepinv.sampling.DPS": [[216, 1, 1, "", "compute_alpha_betas"], [216, 1, 1, "", "forward"]], "deepinv.sampling.DiffPIR": [[217, 1, 1, "", "find_nearest"], [217, 1, 1, "", "forward"], [217, 1, 1, "", "get_alpha_beta"], [217, 1, 1, "", "get_alpha_prod"], [217, 1, 1, "", "get_noise_schedule"]], "deepinv.sampling.MonteCarlo": [[219, 1, 1, "", "forward"], [219, 1, 1, "", "get_chain"], [219, 1, 1, "", "mean_has_converged"], [219, 1, 1, "", "reset"], [219, 1, 1, "", "var_has_converged"]], "deepinv.training": [[224, 0, 1, "", "AdversarialTrainer"]], "deepinv.training.AdversarialTrainer": [[224, 1, 1, "", "check_clip_grad_D"], [224, 1, 1, "", "compute_loss"], [224, 1, 1, "", "save_model"], [224, 1, 1, "", "setup_train"]], "deepinv.transform": [[225, 0, 1, "", "Homography"], [226, 0, 1, "", "Rotate"], [227, 0, 1, "", "Scale"], [228, 0, 1, "", "Shift"], [229, 0, 1, "", "Transform"]], "deepinv.transform.Homography": [[225, 1, 1, "", "forward"]], "deepinv.transform.Rotate": [[226, 1, 1, "", "forward"]], "deepinv.transform.Scale": [[227, 1, 1, "", "forward"]], "deepinv.transform.Shift": [[228, 1, 1, "", "forward"]], "deepinv.transform.Transform": [[229, 1, 1, "", "__add__"], [229, 1, 1, "", "__mul__"], [229, 1, 1, "", "forward"]], "deepinv.transform.projective": [[230, 0, 1, "", "Affine"], [231, 0, 1, "", "Euclidean"], [232, 0, 1, "", "PanTiltRotate"], [233, 0, 1, "", "Similarity"]], "deepinv.transform.projective.Affine": [[230, 1, 1, "", "forward"]], "deepinv.transform.projective.Euclidean": [[231, 1, 1, "", "forward"]], "deepinv.transform.projective.PanTiltRotate": [[232, 1, 1, "", "forward"]], "deepinv.transform.projective.Similarity": [[233, 1, 1, "", "forward"]], "deepinv.unfolded": [[234, 0, 1, "", "BaseDEQ"], [235, 0, 1, "", "BaseUnfold"], [236, 3, 1, "", "DEQ_builder"], [237, 3, 1, "", "unfolded_builder"]], "deepinv.unfolded.BaseDEQ": [[234, 1, 1, "", "forward"]], "deepinv.utils": [[238, 0, 1, "", "TensorList"], [239, 3, 1, "", "cal_psnr"], [240, 3, 1, "", "get_freer_gpu"], [241, 3, 1, "", "load_image"], [242, 3, 1, "", "load_url_image"], [243, 3, 1, "", "ones_like"], [244, 3, 1, "", "plot"], [245, 3, 1, "", "plot_curves"], [246, 3, 1, "", "plot_inset"], [247, 3, 1, "", "plot_parameters"], [248, 3, 1, "", "plot_videos"], [249, 3, 1, "", "rand_like"], [250, 3, 1, "", "randn_like"], [251, 3, 1, "", "zeros_like"]], "deepinv.utils.TensorList": [[238, 1, 1, "", "__add__"], [238, 1, 1, "", "__mul__"], [238, 1, 1, "", "__neg__"], [238, 1, 1, "", "__sub__"], [238, 1, 1, "", "__truediv__"], [238, 1, 1, "", "append"], [238, 1, 1, "", "conj"], [238, 1, 1, "", "flatten"], [238, 1, 1, "", "reshape"], [238, 1, 1, "", "sum"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:function"}, "terms": {"": [0, 2, 4, 5, 6, 7, 9, 11, 14, 16, 17, 18, 21, 22, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 59, 64, 84, 97, 107, 109, 110, 114, 120, 121, 122, 123, 130, 146, 164, 166, 169, 170, 176, 207, 211, 219, 222, 223, 224, 233, 238, 246], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 56, 58, 59, 60, 63, 64, 67, 72, 73, 74, 75, 78, 80, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 108, 109, 114, 115, 119, 120, 121, 123, 125, 126, 129, 130, 131, 133, 134, 135, 136, 137, 138, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 244, 246, 249], "00": [2, 5, 6, 7, 9, 11, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 46, 47, 48, 63], "000": [11, 41, 45], "0000": [56, 131, 162, 163, 165, 166, 170, 173, 176, 212], "00000": 65, "00001": 65, "0001": [66, 103, 109, 129, 133, 217, 234], "0002": 11, "001": [29, 74, 75, 89, 90, 131, 144, 174, 179, 219, 220, 221], "00143": 169, "002": [37, 39, 45], "003": [2, 24, 45], "004": [2, 24, 37, 45], "0045": 4, "0048": 4, "00490826": 152, "005": [2, 42], "006": [2, 37], "007": [2, 35], "0082": 4, "009": [2, 14], "00e": [5, 19, 26, 30], "00it": 22, "01": [1, 5, 9, 11, 15, 18, 21, 22, 24, 25, 27, 29, 30, 31, 32, 33, 34, 36, 40, 43, 46, 47, 48, 52, 63, 88, 89, 90, 96, 103, 108, 123, 214], "010": [24, 28, 63], "0100": 9, "011": 2, "0119": 4, "012": 46, "0129": 4, "013": [14, 46, 48, 63], "014": 42, "0146": 169, "015": 42, "0152": 4, "016": [24, 39, 42, 46], "0164762606121962": 39, "0164941570778203": 24, "017": 45, "01831": 113, "01it": [5, 22], "02": [3, 5, 12, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 36, 40, 47, 48, 63, 109, 138, 175, 217], "0202": 75, "021": 45, "0214": 4, "0216": 4, "022": 35, "0241": 169, "027": 46, "028": 14, "0281620415533268": 14, "029": [25, 28, 35, 63], "02it": [22, 29], "03": [5, 12, 15, 22, 24, 25, 26, 27, 30, 31, 32, 36, 40, 42, 47, 48, 63, 246], "031": [39, 40, 63], "033": 2, "03521": 164, "0355": 4, "03679": 100, "0370": 4, "038": 14, "039": 43, "0398": [4, 169], "03981": 110, "03it": [7, 22], "04": [11, 15, 22, 23, 26, 31, 32, 34, 36, 43, 63, 208, 209, 213], "0402": 4, "041": 2, "0427": 9, "043": 24, "0434": 4, "044": [43, 45], "0463": 4, "0470": 4, "04715": 221, "0479": [4, 164], "0481": 9, "0484": 9, "049": [21, 23, 37, 44, 63], "05": [5, 11, 13, 18, 19, 22, 26, 31, 32, 36, 45, 50, 58, 103, 122, 123, 129, 134, 135, 150, 159, 160, 161, 217, 220, 221], "0512": [4, 9], "052": 46, "0526": 9, "0535": 9, "0539": 4, "0545": 9, "056": 42, "058": [11, 15, 63], "05it": [2, 22], "06": [5, 19, 20, 22, 26, 28, 31, 32, 36, 63], "060": 26, "0600": 4, "0603": 176, "0622": 4, "06474": [116, 117], "065": 14, "0654": 4, "066": 45, "0664": 4, "0676": 4, "0684": 4, "069": [5, 15, 63], "06it": [2, 22], "07": [15, 22, 26, 32, 38, 63], "071": 42, "0712": 168, "0734": 183, "0743": 183, "075": [14, 42], "077": [187, 195], "07it": 22, "08": [0, 22, 28, 30, 32, 34, 40, 58, 63, 147, 160], "0800": 66, "0801": 66, "082": 42, "0845": 173, "086": 2, "08845": 220, "089": 44, "08995": 217, "08it": [35, 39], "09": [32, 48, 63], "0900": 66, "09327": [225, 232], "094": 47, "0995518799995156": 42, "09it": [7, 22], "0m": [24, 36, 47], "0mib": [36, 47], "0x7fa3b2df64a0": [208, 209, 213], "0x7fa4719485d0": [7, 13, 33], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 56, 58, 59, 60, 64, 67, 73, 75, 77, 80, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103, 104, 107, 109, 111, 113, 114, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 244, 246, 248, 249], "10": [4, 8, 11, 12, 14, 17, 21, 22, 26, 29, 30, 31, 32, 33, 35, 36, 37, 39, 42, 43, 44, 45, 46, 47, 58, 74, 75, 83, 103, 110, 126, 158, 162, 163, 164, 169, 183, 187, 195, 202, 203, 215, 219, 220, 239], "100": [2, 5, 6, 7, 8, 9, 11, 14, 18, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 45, 46, 47, 64, 66, 71, 103, 106, 129, 134, 135, 150, 159, 160, 161, 164, 174, 215, 217, 218, 223, 224], "1000": [11, 14, 31, 32, 42, 43, 44, 47, 101, 109, 122, 123, 147, 211, 216, 217, 219, 220, 221], "10000": 22, "1006": 212, "100m": 36, "101": [2, 22, 32, 35], "102": [22, 32], "1024": [22, 138, 175], "102mb": [21, 32], "103": [22, 32], "1031": 8, "10337": 93, "103664588928222": 37, "104": [22, 32, 37], "105": [7, 19, 20, 22, 32, 63], "105m": 24, "106": [22, 32], "1068": 187, "107": [7, 22, 32], "107m": 36, "108": [17, 22, 32], "109": [7, 22, 32], "109m": [2, 11], "10it": [32, 39], "10x": [43, 44], "11": [2, 7, 10, 15, 22, 27, 31, 32, 33, 35, 42, 43, 44, 103, 123], "110": [7, 22, 32], "110m": 32, "111": [22, 32], "112": [22, 32], "11232": 73, "113": [22, 32], "113144733": 43, "1135": 170, "1137": 110, "114": [22, 32], "1140": 12, "1145": 18, "115": [22, 32], "115m": 36, "116": [22, 32], "117": [22, 32], "11793": 215, "117m": 35, "118": [22, 32], "11888": 30, "119": [22, 32], "11it": 32, "12": [14, 17, 22, 26, 28, 31, 32, 36, 44, 46, 63, 103, 128], "120": [22, 32], "121": [22, 31, 32], "12151": 80, "122": [22, 31, 32, 34, 63], "122m": 36, "123": [22, 32], "1231": 183, "124": [22, 32], "124675642": 39, "124956766764324": 42, "125": [4, 22, 31, 32, 42], "125m": 11, "126": [22, 32], "127": [22, 32], "128": [2, 12, 14, 22, 32, 36, 43, 45, 46, 51, 103, 106, 107, 109, 114, 121], "128m": 24, "128x128": [2, 14, 36, 46], "129": [22, 32], "129m": [2, 35], "12it": [32, 35], "12m": 37, "13": [5, 11, 22, 23, 26, 31, 32, 35, 37, 40, 42, 43, 47, 63, 103], "130": [22, 32], "130m": 36, "131": [22, 32, 42], "132": [22, 32], "1322": 45, "13247v2": [74, 75], "133": [22, 32], "1332": 45, "134": [22, 32], "135": [22, 32], "135388067": [2, 35], "135m": 32, "136": [15, 22, 32], "137": [22, 32], "137m": 36, "138": [22, 32], "139": [22, 32], "13it": 32, "14": [19, 22, 24, 31, 32, 36, 43, 63, 70], "140": [22, 32, 47], "1406": 211, "141": [22, 32], "142": [22, 32], "143": [22, 32], "14344166": 39, "144": [22, 32], "1441792": 39, "145": [22, 32], "145m": 36, "146": [2, 22, 32, 44], "14687": 216, "147": [22, 32, 35, 44, 47], "1472759246826172": 47, "14756": 73, "148": [22, 32, 44], "149": [22, 32, 44], "149mb": 26, "14it": [22, 32], "14m": [38, 39], "15": [5, 14, 18, 22, 29, 31, 32, 44, 46, 51, 121, 207], "150": [22, 32, 36], "1506": 164, "151": [22, 32], "1510": 169, "152": [2, 22, 32, 44], "152m": 36, "152mb": 26, "153": [22, 32], "15344165": 39, "15350949": 39, "153m": 24, "154": [22, 32, 35, 44], "155": [2, 22, 32], "156": [2, 22, 32, 35, 44], "157": [2, 22, 32, 45], "157384872436523": 45, "1577": 212, "157mb": 37, "158": [22, 32, 122, 123], "159": [22, 32], "15it": [5, 7, 32], "16": [0, 1, 2, 4, 5, 10, 14, 21, 22, 24, 27, 31, 32, 35, 36, 46, 53, 58, 60, 63, 111, 132, 162, 163, 169, 174, 185, 186, 225, 230, 231, 232, 233, 237, 248], "160": [21, 22, 32], "1608": 110, "160m": [32, 36], "161": [2, 22, 32, 35], "1610": 11, "1611": 100, "162": [22, 32], "163": [22, 32], "164": [11, 22, 32], "164634704589844": 24, "1648877": [39, 43], "165": [22, 24, 32], "1650": 187, "166": [22, 32], "1666": 187, "167": [22, 32], "167m": 36, "168": [22, 32], "169": [22, 32], "16it": [30, 32], "16x16": [58, 162, 163, 174, 225, 230, 231, 232, 233], "17": [2, 5, 11, 14, 15, 22, 23, 29, 31, 32, 44, 46, 47, 48, 63, 244], "170": [22, 32], "1707": [116, 117], "171": [22, 32, 43], "1711": 93, "172": [2, 22, 32], "173": [4, 22, 32, 35], "173828125": 0, "173mb": 26, "174": [22, 32], "175": [22, 32], "175m": 36, "176": [12, 15, 22, 32, 63], "177": [22, 32], "178": [22, 32], "1788": [166, 173], "178m": 24, "179": [22, 32], "179mb": 21, "17it": 32, "17m": [36, 47], "18": [2, 5, 7, 22, 26, 31, 32, 36, 123], "180": [22, 32, 42, 48, 63, 121, 187, 194, 195, 225, 230, 231, 232, 233], "181": [14, 22, 32, 46], "1811429737324528": 14, "1811447654924281": 46, "1814": 176, "182": [22, 32, 36], "182m": 36, "183": [22, 32], "1830": 19, "184": [22, 26, 32, 46], "184494018554688": 46, "184m": 32, "185": [22, 32], "1858": 183, "186": [22, 32], "187": [22, 32], "187019": 36, "188": [22, 32, 47], "188165": 42, "188174": 47, "1883849960402073": 47, "188mb": 24, "189": [22, 32], "189mb": 21, "18it": 32, "19": [4, 14, 22, 24, 30, 31, 32, 36, 37, 38, 39, 40, 46, 63, 224], "190": [22, 32, 34, 63], "1901": 183, "1908": 220, "190m": 36, "191": [22, 32], "192": [22, 32], "193": [22, 32], "194": [22, 32], "195": [22, 32], "195mb": 11, "196": [22, 32], "197": [7, 15, 22, 32, 63], "197m": 36, "198": [2, 22, 32], "1985": 168, "199": [22, 32], "19e": 26, "19it": 32, "19m": 36, "1_alex": 24, "1conv": 121, "1d": [209, 213], "1e": [0, 2, 5, 7, 10, 12, 14, 17, 18, 22, 26, 35, 36, 37, 38, 39, 42, 45, 46, 47, 56, 75, 103, 122, 123, 128, 129, 133, 134, 135, 147, 159, 160, 161, 163, 234], "1e16": 134, "1e2": 29, "1e3": [29, 219], "1e4": 45, "1f": 156, "1j": [0, 11], "1mb": [9, 24, 25], "1mib": [14, 36, 46], "1z2us9zhjdgolu6r1jee0s2bbej2xv5": 22, "2": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 51, 52, 53, 56, 58, 59, 67, 73, 78, 79, 80, 82, 84, 86, 87, 88, 89, 90, 91, 103, 107, 108, 109, 111, 113, 114, 115, 119, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 137, 139, 146, 147, 148, 149, 152, 153, 157, 158, 162, 163, 164, 166, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 193, 207, 208, 209, 211, 213, 216, 217, 218, 219, 220, 221, 224, 231, 233, 244, 246, 248], "20": [0, 2, 3, 9, 13, 14, 18, 21, 22, 30, 31, 32, 35, 36, 37, 42, 44, 45, 46, 51, 56, 63, 83, 110, 239], "200": [22, 25, 32, 43, 44, 46, 111, 132], "2000": 18, "2007": 102, "2009": [5, 17, 18, 19, 24, 26, 123], "2010": 122, "2011": 132, "2012": [74, 75], "2013": [122, 123], "2017": [5, 24, 130, 206], "2018": [7, 45, 108], "201mb": 32, "202": 19, "2020": 45, "2022": [7, 29, 30, 33], "2024": 0, "202m": 24, "203": 42, "2040": 66, "2048": 13, "205m": 36, "2064": 168, "2067533657179195": 42, "2067779": 14, "2069441": 37, "206m": 32, "206mb": 32, "207": 42, "20it": [32, 43], "20m1387961": 110, "21": [2, 10, 14, 18, 22, 25, 31, 32, 36, 37, 42, 44, 46], "2103": [73, 221], "210mb": 32, "2133": 164, "2139": 168, "213m": 36, "214": 2, "215mb": [32, 35], "217": [11, 39], "218mb": 32, "219mb": 24, "21it": [7, 32, 33], "22": [2, 7, 9, 11, 22, 26, 31, 32, 46], "2201": [80, 215], "2209": [30, 216], "221": [44, 46, 48, 63], "221m": 36, "224mb": 32, "225mb": [2, 11], "226m": 32, "226mb": 32, "228m": 24, "22980131": 43, "22e": 30, "22it": [22, 32], "23": [2, 22, 25, 29, 31, 32, 36, 37, 39, 45], "2305": 217, "230m": 36, "231": 43, "2312": [73, 113], "231mb": 32, "233m": 24, "233mb": [11, 24], "236mb": 24, "237": 24, "237mb": [24, 32], "238m": 36, "238mb": 24, "23it": 32, "24": [19, 22, 31, 32, 38, 39, 42, 45, 48, 63], "2403": [225, 232], "241": [9, 15, 63], "2419": 123, "241mb": [11, 32], "243": 45, "2434": 123, "244": 46, "244mb": [24, 32], "246m": 36, "246mb": 11, "247m": 32, "247mb": 24, "248": 2, "24it": [32, 35], "25": [0, 21, 22, 24, 29, 31, 32, 36, 45, 47, 51, 121, 182, 207, 211, 217], "2500": [58, 103, 108, 162, 163], "250mb": 32, "252mb": [24, 32], "2532": 214, "254m": 36, "255": [21, 22, 31, 32, 33, 51, 121], "2550": 12, "256": [2, 4, 5, 6, 13, 18, 19, 24, 26, 35, 42, 43, 51, 67, 103, 104, 107, 109, 114, 120, 140, 186, 207, 244], "256mb": 24, "256x256": [31, 32], "258": [8, 15, 63, 187, 195], "25it": [22, 32], "25m": 26, "26": [2, 22, 26, 30, 31, 32, 45], "260": 26, "262m": 36, "263": 2, "263515028235034": 36, "264": 36, "2640": 187, "265mb": 2, "2674": 187, "26it": [22, 32], "27": [21, 22, 30, 31, 32, 36, 45], "270m": 36, "271m": 32, "273": [47, 48, 63], "274mb": 2, "275": 42, "276": [47, 70], "278m": 36, "28": [11, 21, 22, 30, 31, 32, 37, 43, 44, 50, 58], "281": [35, 43], "283": 44, "285": 44, "28690": 0, "287m": 36, "288": 42, "28881": [39, 43], "288mb": 35, "289": [35, 40, 63], "28crop": [7, 29, 30, 33], "28e": 26, "28it": 30, "29": [7, 13, 22, 26, 28, 29, 30, 31, 32, 33, 36], "2908": 176, "292m": 32, "292mb": 2, "293": 42, "294": [5, 42], "2942931049347548": 5, "295m": 36, "2989": 12, "298mb": 2, "2_2": [2, 83, 97, 239], "2a": 89, "2ax_": 25, "2cm": 133, "2d": [0, 4, 13, 35, 58, 67, 125, 170, 176, 182, 185, 196, 197, 199, 200, 206, 207, 211, 225, 226, 227, 228, 233], "2e": [0, 2, 12], "2f": [0, 7, 10, 11, 12, 17, 18, 19, 21, 22, 25, 27, 29, 30, 33, 74], "2m": [24, 26, 36, 164, 183], "2mb": [22, 36, 39], "2mib": [36, 47], "2nd": 122, "2x2": [58, 162, 163, 176], "2x_": [25, 46], "3": [0, 2, 4, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 39, 42, 43, 44, 45, 46, 47, 51, 53, 58, 60, 67, 75, 103, 105, 106, 107, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 132, 137, 149, 154, 164, 165, 166, 168, 173, 174, 177, 183, 184, 185, 187, 190, 191, 207, 210, 211, 212, 215, 217, 224, 225, 230, 231, 232, 233, 244, 248], "30": [11, 21, 22, 24, 27, 30, 31, 32, 43, 45, 46], "300": [11, 18, 19, 50, 58], "303m": 36, "305mb": 35, "307": 28, "3089625249060759": 47, "309": 47, "30e": 5, "31": [4, 18, 22, 32, 36, 47], "310": [29, 34, 63], "311": 0, "311m": 36, "311mb": 35, "312": 42, "313": [14, 15, 63], "3132": 12, "316m": 32, "317mb": 35, "3197": 183, "32": [2, 4, 6, 7, 9, 11, 12, 14, 21, 22, 24, 26, 27, 29, 30, 32, 33, 35, 36, 38, 39, 42, 45, 46, 47, 51, 58, 101, 111, 116, 117, 132, 164, 169, 174, 177, 185, 186, 215, 217], "320": [21, 170, 176], "320m": 36, "320x320": 36, "3223": 168, "323": 44, "325": 14, "32614100": 86, "328": 42, "328m": 36, "32x32": [14, 46, 169, 174, 177, 185, 215, 217], "33": [5, 7, 21, 22, 24, 26, 30, 31, 32, 33, 36, 47], "333": 206, "334": 5, "334139506022137": 5, "336m": 36, "3372": 11, "34": [11, 22, 32, 33, 34, 36, 63], "342m": 32, "344": 45, "344m": 36, "346": [38, 39], "346022415161134": [38, 39], "348": 206, "35": [21, 22, 24, 32, 36], "352m": 36, "357": [47, 109], "357m": 32, "3587": 4, "35it": 5, "36": [22, 32, 36, 47], "360": [187, 226], "3608000": 2, "361m": 36, "362": 22, "3624": 168, "369m": 36, "37": [14, 22, 25, 31, 32, 45], "3744": 176, "377m": 36, "38": [2, 11, 22, 32, 36, 37, 63], "385": 44, "3856": 187, "385k": [6, 18, 24, 47], "385m": 36, "3864": 183, "388": 2, "388799536718082": 36, "389": 36, "38e": 5, "39": [22, 32, 48], "392": [43, 48, 63], "3929": [24, 130], "3938": [24, 130], "393m": 36, "3986": [166, 173], "399": [10, 15, 63], "399m": 36, "39it": 22, "3c353_gdth": 0, "3conv": 121, "3d": [16, 20, 35, 63, 67, 102, 125, 126, 149, 171, 198, 201, 232, 239, 240, 244], "3f": 11, "3k": 9, "3m": [14, 35, 36], "3mb": 26, "3mib": 36, "3x3": [164, 165, 168, 173, 174, 183, 187], "4": [0, 2, 4, 5, 6, 8, 11, 13, 14, 17, 19, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 56, 58, 67, 72, 103, 104, 107, 111, 113, 115, 119, 120, 121, 124, 129, 131, 132, 133, 162, 163, 174, 177, 183, 187, 190, 191, 208, 209, 213, 234, 244, 246], "40": [21, 22, 30, 31, 32, 33, 35, 36], "400": 11, "401": 42, "403": [39, 43], "4033": [166, 173], "404": 63, "4099398": 88, "41": [7, 22, 30, 32, 35, 45], "411": 36, "4114185158882959": 36, "412": 29, "41it": 22, "42": [17, 20, 22, 32, 36, 47, 63], "422": [6, 15, 63], "4238": 164, "424": 44, "428": [45, 48, 63], "4290": 176, "42it": [7, 22], "43": [18, 22, 26, 31, 32, 43, 48, 63], "4322": 168, "433": 20, "4375": 0, "438": 2, "439": [13, 15, 63], "43it": [2, 22], "44": [22, 32, 36, 46], "440": [0, 1, 63], "442": 45, "4422": 164, "444737": [38, 39], "444867": [2, 35], "4453": 170, "447": 12, "44m": 46, "45": [7, 11, 12, 13, 22, 24, 32, 187], "450": [2, 3, 63], "454": 44, "4542": [39, 43], "4557": 183, "4564": 176, "458": 2, "45827312": 43, "45it": 2, "46": [0, 22, 32, 36, 40, 63], "460": [122, 123], "47": [22, 29, 31, 32, 34, 36], "470": 29, "471": 42, "4710702896118164": 42, "474": 45, "476": 44, "478": 44, "479": [46, 122, 123], "48": [10, 11, 22, 32, 36, 47, 119, 185], "4860": 187, "488": [26, 28, 63], "4882": 187, "48it": 35, "49": [2, 22, 32, 36, 75], "492": [44, 122], "49it": 22, "4a": 191, "4e": 2, "4m": [2, 11, 32, 36], "4mb": 37, "4mib": [36, 46], "4x": 170, "4x4": 187, "5": [0, 2, 4, 5, 7, 9, 10, 11, 12, 13, 14, 17, 21, 22, 24, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 51, 52, 56, 58, 60, 67, 84, 86, 89, 90, 97, 103, 109, 116, 117, 121, 122, 123, 124, 129, 131, 133, 140, 163, 164, 168, 174, 187, 188, 190, 191, 192, 195, 207, 210, 211, 214, 215, 217, 221, 225, 227, 230, 231, 232, 233, 234, 235, 237, 246, 248], "50": [0, 2, 8, 9, 13, 14, 21, 22, 26, 30, 31, 32, 37, 38, 46, 47, 51, 58, 75, 121, 131, 133, 144, 158, 174, 179, 184, 225, 230, 231, 232, 233, 234], "500": 5, "5000": [0, 21], "501": 38, "5013128598076784": 38, "507": [44, 48], "508": 45, "50it": [2, 22, 33], "50th": 8, "51": [2, 19, 20, 22, 32, 35, 36, 75], "511": 45, "512": [4, 52, 70, 103, 107, 114], "516": 44, "51it": 22, "52": [2, 14, 22, 32, 35], "523": 44, "524": 44, "526": [42, 122], "5281": [187, 195], "5284": 164, "529": 44, "53": [22, 31, 32], "534": [22, 23, 63], "5346265": 43, "538730812072753": 37, "539": 37, "53mib": 24, "54": [0, 14, 22, 32, 36], "541": [18, 20, 63], "5410": [166, 173], "542": 45, "544": 44, "55": [14, 22, 24, 26, 32, 36, 38], "553": 42, "555": 47, "5567108": 172, "558": [38, 39], "559": 44, "55m": [25, 47], "56": [22, 32, 36], "5600096": 39, "561": 44, "564": [4, 15, 63], "566": 44, "5684": 166, "56e": 12, "56m": 33, "57": [0, 7, 11, 22, 24, 26, 31, 32, 36, 42, 187, 195], "5720": 187, "574": 2, "576": 26, "58": [11, 15, 22, 32, 36, 47, 63, 206], "583": 23, "5870": 12, "58it": 43, "59": [2, 11, 22, 32, 47], "594": 14, "596": 38, "5976": 0, "59e": 30, "5a": 191, "5e": [14, 36, 37, 38, 39, 42, 44, 47], "5e3": 33, "5j": 11, "5m": [26, 47], "5mb": [2, 22, 38], "5mib": 36, "5x5": [29, 31], "6": [0, 4, 14, 17, 18, 21, 22, 24, 26, 30, 31, 32, 35, 36, 42, 44, 45, 46, 47, 48, 69, 103, 111, 117, 119, 121, 132, 140, 141], "60": [14, 19, 22, 26, 30, 31, 32, 36], "60it": 22, "61": [22, 32, 45, 46], "610797882080078": 45, "611": 45, "613": 45, "616": 47, "619": 2, "61it": [7, 22], "62": [5, 11, 22, 32, 36, 39], "6209": 176, "623": 36, "6233009603086459": 36, "624": 44, "62it": [22, 30], "62m": 24, "63": [14, 22, 31, 32], "631": [30, 34, 63], "633": 38, "633205032348634": 38, "638": 40, "64": [4, 7, 10, 12, 13, 18, 19, 22, 25, 26, 31, 32, 36, 37, 43, 44, 46, 47, 103, 105, 106, 107, 110, 114, 118, 120, 208, 209, 213], "6418031": 78, "647": 24, "64718074966313777": 24, "649": 35, "64it": 43, "64x64": [13, 31, 32], "65": [22, 32, 47], "6536": 187, "655": [33, 34, 63], "657": [14, 46], "6573867797851562": 46, "6573870976765948": 14, "6597": 183, "65it": [22, 31], "66": [22, 24, 29, 32, 35, 36, 46, 119], "661": 45, "6687": 12, "669": 37, "6694281686677082": 37, "67": [5, 22, 26, 30, 31, 32], "6714502": [89, 90], "68": [10, 11, 22, 32, 36, 65], "686": 45, "689632394247482": 46, "68it": [22, 30], "69": [2, 7, 22, 32, 35, 46], "690": 46, "6995": 187, "69it": [22, 30, 35, 39], "6m": [2, 24, 26, 32, 35, 36, 46], "6mib": [14, 36, 47], "7": [0, 10, 11, 14, 21, 22, 30, 31, 32, 35, 36, 42, 44, 45, 47, 58, 103, 104, 116, 162, 163, 169, 173, 182, 217], "70": [2, 22, 30, 31, 32, 35, 36, 47, 173], "702": 2, "703": 43, "70e": 5, "70it": [7, 30, 31], "70m": 2, "71": [22, 32, 36, 47], "7137": 187, "714": [38, 40, 63], "7193": [166, 173], "71it": [22, 30], "72": [22, 32, 36, 122], "729": 42, "72it": [22, 30], "73": [14, 22, 31, 32, 36, 47], "7302": 168, "7340": 187, "736": 14, "737": 43, "7379700494042969": 37, "738": 37, "739k": 22, "73it": [22, 31], "74": [22, 32, 36, 47], "7412": 11, "7444": 211, "74it": [22, 31], "75": [13, 22, 24, 31, 32, 170, 227], "751": 37, "75595": 45, "757126": 0, "75it": 30, "75m": [21, 32], "76": [2, 9, 22, 24, 32, 36, 43, 46, 47], "761": 45, "768": 70, "76e": 26, "76it": [22, 31], "76m": 14, "77": [8, 22, 31, 32, 36, 47], "772": 44, "7754": 164, "7768": 183, "77it": [22, 29, 31], "77mib": 18, "78": [0, 22, 32, 36, 43, 44, 47], "781": 43, "782": [27, 28, 63], "783": 42, "78378763199": 2, "784": 2, "786": [38, 39], "7863402359700375": [38, 39], "787": [17, 20, 63], "78it": 31, "79": [22, 32, 36], "791": [37, 40, 63], "796": 2, "7969": 170, "79it": [22, 31], "7be5be79": 24, "7m": [14, 21, 36, 47], "7mib": [36, 47], "8": [0, 2, 4, 5, 7, 10, 11, 13, 14, 18, 19, 21, 22, 24, 25, 26, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 51, 58, 84, 86, 103, 111, 113, 119, 121, 123, 132, 147, 162, 163, 174, 177, 208, 209, 213, 248], "80": [21, 22, 30, 31, 32, 36], "805": 42, "8064": 168, "80it": [7, 22, 31, 39], "81": [7, 22, 32, 36, 42], "812": 42, "8137": 170, "814": [36, 40, 63], "819": 42, "81it": 31, "82": [22, 24, 32, 36, 47], "82it": 31, "83": [22, 31, 32], "8307932": [187, 195], "8310": 11, "833861033121746": 14, "834": 14, "8380": 173, "83it": [22, 31], "83mib": 6, "84": [2, 11, 22, 32, 36], "843": 45, "8457": 187, "84it": 22, "85": [0, 22, 26, 32, 35, 36, 215], "8522": 164, "853": 14, "856": 45, "85it": [22, 31, 39], "86": [2, 22, 32, 35, 36], "8622": 176, "864": 47, "86it": [22, 31], "87": [2, 22, 24, 25, 31, 32, 35, 39], "8714": 164, "874984359741212": 39, "875": 39, "879": 43, "87it": [7, 22, 31], "87k": 24, "88": [11, 22, 32, 36], "884": 11, "887": 45, "88it": [22, 31], "88m": 11, "89": [22, 32], "8953": 164, "8994": 212, "89it": 22, "8a": 191, "8m": [14, 21, 36, 37, 46], "8mb": [11, 26], "8mib": 36, "8x64x64": [208, 209, 213], "9": [2, 4, 5, 6, 18, 19, 21, 22, 24, 26, 30, 31, 32, 33, 37, 42, 44, 45, 47, 86, 103, 115, 129, 174, 224], "90": [4, 7, 14, 17, 22, 24, 30, 31, 32, 35, 36, 51, 113], "900": 36, "9002": 187, "9026777601592963": 5, "903": 5, "909": [5, 34], "909193356831867": 5, "90it": 22, "90m": 35, "91": [22, 32], "9127841": 184, "91it": 22, "92": [11, 22, 32, 36], "924": 45, "92it": 22, "92mib": 47, "93": [7, 22, 26, 31, 32, 36, 47], "936": 45, "9360": 187, "93it": 22, "94": [21, 22, 32], "9493": 187, "94it": 22, "95": [21, 22, 32, 33, 36, 37], "9577798": 84, "95it": [22, 43], "96": [12, 21, 22, 32], "9605e": 58, "967542012532551": 24, "968": 24, "96it": 22, "97": [22, 31, 32, 36], "973": 36, "976": 45, "9793": 187, "98": [22, 24, 26, 32], "9860": 170, "9897": [164, 187], "98it": 22, "99": [22, 25, 32, 36, 42, 45, 123], "9912422": [39, 43], "993": 46, "996": 47, "9960276285807295": 47, "9971": 187, "999": 11, "99e": 19, "99it": [22, 35], "9k": 22, "9m": [11, 26, 32, 35, 36, 47], "9mb": [24, 33, 35], "9mib": [36, 47], "A": [0, 5, 9, 12, 14, 15, 16, 17, 18, 19, 21, 22, 25, 26, 27, 29, 31, 32, 37, 41, 42, 43, 44, 45, 46, 53, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 71, 75, 79, 84, 86, 88, 89, 90, 100, 107, 109, 122, 123, 125, 129, 131, 133, 134, 135, 139, 152, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 193, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 210, 211, 212, 213, 220, 221, 222, 224, 235, 240, 242, 244, 248], "And": [119, 124], "As": [0, 2, 17, 21, 22, 24, 31, 32, 35, 36, 37, 149], "At": [103, 119], "By": [4, 24, 26, 64, 73, 79, 80, 82, 86, 87, 119, 129, 131, 139, 144, 145, 174, 177, 179, 219, 220, 221, 223, 225, 227], "For": [0, 2, 4, 7, 9, 14, 17, 18, 19, 22, 25, 27, 31, 32, 35, 36, 42, 43, 44, 46, 47, 50, 52, 53, 54, 56, 67, 92, 94, 119, 122, 123, 129, 144, 149, 160, 164, 175, 184, 197, 200, 208, 209, 213, 220, 221, 225, 234], "If": [0, 9, 10, 12, 22, 36, 37, 43, 44, 46, 49, 58, 59, 62, 64, 65, 66, 70, 71, 72, 78, 83, 86, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 107, 108, 109, 110, 113, 114, 120, 121, 125, 129, 132, 134, 139, 140, 146, 149, 150, 151, 152, 153, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 177, 179, 180, 181, 182, 185, 186, 187, 189, 193, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 219, 220, 221, 222, 224, 234, 235, 236, 237, 239, 241, 242, 244], "In": [0, 2, 4, 5, 8, 9, 10, 11, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 51, 54, 56, 58, 60, 64, 67, 72, 109, 123, 128, 130, 135, 152, 174, 185, 187], "It": [4, 10, 18, 19, 22, 36, 51, 55, 58, 60, 61, 64, 65, 71, 72, 73, 81, 91, 109, 110, 115, 137, 140, 160, 163, 164, 169, 174, 175, 177, 179, 185, 186, 191, 192, 215, 224, 238], "No": [0, 2, 5, 14, 24, 26, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 111, 132, 176], "On": 22, "One": [4, 32, 43], "The": [2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 22, 24, 25, 26, 27, 29, 30, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 79, 80, 82, 84, 86, 87, 88, 89, 90, 93, 97, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 139, 140, 143, 144, 154, 155, 156, 157, 158, 162, 164, 165, 166, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 182, 184, 185, 187, 190, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 224, 225, 232, 234, 238, 244, 246, 247], "Their": 45, "Then": [4, 22, 113], "There": [0, 32, 39, 138, 182], "These": [2, 13, 35, 43, 44, 53, 144, 187, 230, 231, 233, 235], "To": [4, 9, 13, 21, 31, 42, 43, 46, 47, 67, 84, 86, 119, 144, 248], "With": [11, 32], "_": [0, 2, 11, 17, 18, 19, 22, 25, 31, 32, 37, 43, 44, 46, 52, 56, 58, 75, 80, 93, 95, 96, 97, 98, 99, 113, 122, 123, 129, 131, 134, 135, 136, 137, 142, 144, 145, 146, 147, 149, 151, 152, 153, 154, 156, 157, 158, 166, 210, 212, 214, 216, 217], "_0": 32, "_1": [17, 43, 129, 133, 135, 136], "_2": [0, 2, 5, 17, 18, 19, 32, 37, 39, 43, 44, 46, 56, 74, 75, 84, 88, 89, 90, 91, 122, 123, 129, 133, 134, 135, 137, 148, 187, 220, 221], "__add__": [174, 179, 212, 229, 238], "__class__": 35, "__init__": [0, 5, 12, 25, 26, 29, 45, 92, 94, 95, 96, 97, 98, 99, 219], "__mul__": [173, 174, 179, 229, 238], "__name__": 35, "__neg__": 238, "__sub__": 238, "__truediv__": 238, "_c": [7, 13, 33], "_f": [60, 139, 235], "_g": [56, 60, 139, 235], "_gener": [208, 209, 213], "_i": [83, 239], "_k": 2, "_n": [125, 126], "_p": 78, "_t": [31, 32, 216, 217], "_vf": 4, "_x": [131, 174, 179], "_z": 2, "a_": [37, 80, 164, 174, 178, 179], "a_1": [10, 38, 82, 86, 173, 174, 179], "a_2": [10, 38, 82, 86, 173, 174, 179], "a_adjoint": [0, 7, 9, 12, 13, 18, 19, 25, 27, 29, 30, 33, 43, 44, 46, 58, 129, 131, 133, 162, 163, 164, 166, 169, 170, 174, 177, 182, 186, 187, 190], "a_dagg": [0, 8, 10, 11, 12, 13, 22, 45, 58, 164, 166, 170, 172, 174, 178, 179, 184, 187], "a_forward": [129, 131, 133], "a_g": 80, "a_t": [32, 216], "a_vjp": [131, 174, 178, 179], "ab": [4, 30, 31, 33, 73, 74, 75, 80, 93, 110, 113, 116, 117, 164, 169, 185, 215, 216, 217, 220, 221, 225, 232], "aberr": 4, "abl": [31, 32], "about": [0, 11, 39, 51, 53], "abov": [0, 2, 35, 56, 58, 129, 152, 170, 176, 248], "abs_angl": [11, 127], "absenc": 143, "absolut": [121, 127, 160, 161, 174, 179], "abstract": [78, 88, 89, 90, 172, 184], "abus": 139, "acceler": [13, 29, 36, 42, 58, 104, 129, 133, 170, 176, 208, 209, 213, 220, 234], "accept": 127, "access": [35, 67, 70, 71], "accord": [84, 103, 185, 208, 209, 210, 213], "accordingli": [111, 132], "account": [29, 49, 53, 107], "accur": 4, "achiev": [84, 129], "acknowledg": 49, "acquir": 11, "acquisit": [36, 58, 129, 174, 179, 185, 219, 220, 221], "across": [9, 36, 43, 44, 46, 47, 64, 72, 129, 185, 208, 209, 213, 234, 246], "act": [7, 39, 56, 58, 129, 175], "act_mod": [107, 114], "action": [113, 230, 231, 232, 233], "activ": [4, 107, 110, 114, 118, 207], "actual": [32, 139], "ad": [10, 16, 31, 55, 61, 84, 171, 174, 175, 180, 181, 188, 189, 212], "ad_": 108, "adam": [2, 7, 14, 22, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 108, 224], "adapt": [6, 53, 61, 77, 82, 84, 86, 88, 89, 90, 103, 109, 118, 119, 121, 122, 123, 129, 130, 187, 195], "adapt_model": [77, 84, 86], "add": [0, 5, 6, 17, 18, 19, 24, 26, 58, 84, 119, 121, 171, 174, 175, 179, 180, 181, 188, 189, 209, 238], "addit": [2, 11, 32, 53, 56, 64, 74, 84, 107, 114, 119, 129, 137, 150, 164, 174, 177, 187, 224, 236, 237], "addition": [32, 224, 227], "address": 49, "adj_project": 0, "adjnufftobj": 0, "adjoint": [0, 12, 18, 19, 27, 45, 46, 55, 58, 122, 123, 132, 147, 162, 163, 164, 166, 169, 170, 174, 177, 182, 186, 187, 190, 196, 197, 200, 204, 205], "adjoint_funct": 174, "adjointness_test": [10, 12, 174], "adjust": [5, 166, 209], "adler": 45, "admit": 17, "admm": [5, 56, 62, 133, 150, 151, 235, 236, 237], "adv": [2, 95, 96, 97, 98, 99], "advanc": [1, 4, 63, 103], "advantag": 29, "adversari": [3, 63, 64, 68, 71, 72, 77, 87, 92, 93, 94, 95, 96, 97, 98, 99, 103, 105, 106, 112, 118, 124, 162, 174, 179, 211, 212, 224, 240, 244], "adversarial_loss": [92, 94], "adversarialoptim": [2, 224], "adversarialschedul": 2, "adversarialtrain": [2, 53], "advis": 32, "af_": 7, "aff": [35, 230], "affect": [58, 72, 134, 174, 179], "affin": [35, 103, 225], "after": [0, 2, 9, 17, 22, 29, 49, 119, 121, 133, 182, 219, 224, 247, 248], "afterward": [45, 78, 101, 104, 106, 115, 116, 117, 120, 194, 195], "again": [65, 66, 70, 71], "aghabigl": 0, "ahead": 224, "ai": [0, 64], "aim": [0, 49, 60], "airi": [0, 4], "al": [0, 2, 5, 7, 18, 19, 24, 26, 31, 32, 35, 51, 57, 95, 96, 97, 98, 99, 102, 103, 105, 106, 108, 109, 110, 112, 118, 122, 124, 209, 225, 232], "alexnet": 24, "algebra": 29, "algorithm": [0, 9, 11, 12, 16, 28, 34, 36, 46, 48, 56, 62, 63, 64, 65, 68, 70, 72, 77, 87, 103, 110, 115, 116, 117, 122, 123, 126, 129, 130, 131, 133, 134, 135, 137, 139, 142, 144, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 169, 171, 174, 179, 185, 187, 193, 209, 216, 217, 218, 219, 220, 221, 222, 234, 235, 236, 237, 239, 240, 242, 244, 245, 247], "alia": [67, 223], "align": [17, 25, 31, 32, 46, 52, 60, 151, 152, 153, 154, 155, 156, 157, 158, 193, 216, 217, 235], "all": [0, 4, 5, 6, 7, 11, 14, 16, 17, 24, 25, 26, 27, 32, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 49, 50, 51, 53, 54, 56, 58, 63, 64, 65, 67, 69, 70, 71, 77, 78, 101, 104, 106, 107, 108, 111, 113, 115, 116, 117, 119, 120, 125, 129, 131, 132, 139, 141, 149, 150, 173, 187, 194, 195, 203, 235, 236, 237, 246, 248], "allclos": [11, 58, 174, 190], "allow": [123, 162, 163, 173, 185, 224, 238], "alon": [53, 73], "along": [0, 5, 18, 19, 25, 27, 45, 117, 129, 133, 193, 222, 225, 226, 228, 229, 230, 231, 232, 233, 238], "alongsid": 224, "alpha": [29, 31, 32, 33, 84, 109, 114, 216, 217, 219, 220, 221], "alpha_j": 32, "alpha_k": 154, "alpha_t": 32, "alphas_cumprod": 31, "alreadi": [27, 65, 66, 70, 71], "also": [2, 4, 10, 11, 12, 13, 27, 30, 32, 39, 43, 44, 49, 51, 52, 53, 56, 58, 59, 60, 61, 62, 64, 72, 107, 109, 110, 114, 120, 121, 125, 135, 144, 146, 163, 166, 170, 174, 203, 224], "altern": [2, 24, 27, 31, 32, 57, 139, 151, 170], "although": [78, 101, 104, 106, 115, 116, 117, 120, 144, 194, 195], "alwai": [32, 56, 185], "amazonaw": [39, 43], "ambientgan": [98, 99, 103], "among": [4, 18, 19, 24, 45, 54, 56, 149], "amount": [27, 31, 55, 221], "amplitud": [128, 189], "an": [0, 2, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 21, 22, 25, 26, 29, 30, 32, 33, 35, 36, 37, 39, 43, 44, 46, 49, 50, 53, 56, 57, 58, 60, 62, 63, 64, 74, 88, 89, 90, 103, 104, 107, 108, 109, 110, 113, 114, 118, 120, 122, 123, 125, 126, 129, 137, 139, 140, 143, 144, 149, 150, 152, 154, 159, 164, 166, 170, 171, 173, 174, 178, 179, 183, 185, 193, 216, 217, 219, 220, 221, 222, 224, 225, 227, 232, 234, 235, 236, 237, 239, 240, 241, 242, 244, 248], "analog": 224, "ancestr": 32, "anderson": [42, 129, 133, 234], "anderson_acceler": [42, 129, 133], "anderson_acceleration_backward": [42, 234], "anderson_acceleration_forward": 42, "anderson_acceleration_step": 133, "anderson_history_s": 42, "angl": [4, 11, 13, 16, 21, 23, 27, 45, 51, 63, 64, 69, 111, 131, 132, 138, 140, 141, 144, 166, 168, 174, 175, 179, 187, 189, 193, 194, 195, 225, 226, 239, 244], "ani": [2, 6, 11, 12, 49, 51, 52, 60, 62, 64, 73, 79, 80, 82, 86, 87, 93, 103, 113, 140, 152, 170, 174, 176, 179, 187, 195, 209, 213, 222, 223, 234, 235], "anim": 248, "anim_kwarg": 248, "anim_writ": 248, "anisotrop": 193, "anoth": 10, "ansi": 4, "ansi_standard_indic": 4, "antiproportion": 175, "ap": 121, "appear": [0, 58], "append": [11, 32, 238], "appli": [0, 2, 4, 7, 17, 18, 19, 22, 25, 29, 30, 31, 32, 33, 43, 47, 52, 56, 57, 86, 102, 109, 113, 122, 123, 124, 125, 127, 129, 146, 147, 149, 162, 163, 166, 169, 170, 173, 174, 176, 177, 178, 182, 184, 185, 186, 194, 225, 226, 227, 228, 230, 231, 232, 233], "applic": [0, 58, 122, 123], "apply_nois": [73, 80], "approach": [0, 37, 45, 54, 100, 103], "appropri": [31, 113, 125, 137], "approx": [29, 32, 33, 55, 75, 187], "approxim": [0, 13, 22, 27, 29, 33, 44, 51, 59, 84, 88, 89, 90, 113, 125, 132, 146, 149, 187, 206, 216, 220], "ar": [0, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 67, 72, 79, 80, 83, 84, 86, 93, 103, 108, 110, 116, 117, 119, 123, 124, 125, 126, 127, 129, 133, 139, 143, 149, 151, 152, 153, 156, 162, 164, 165, 166, 169, 170, 172, 173, 174, 176, 177, 179, 183, 186, 187, 193, 194, 195, 199, 203, 206, 207, 208, 209, 212, 216, 219, 220, 221, 222, 224, 225, 226, 230, 231, 233, 235, 239, 241, 242, 244, 246, 247, 248], "arang": [194, 195], "arbitrari": [11, 31, 32, 50, 125], "architectur": [2, 7, 9, 14, 31, 36, 38, 39, 42, 46, 47, 51, 52, 60, 62, 100, 101, 104, 107, 110, 114, 119, 120, 121, 124, 237], "arg": [0, 5, 17, 22, 26, 44, 45, 46, 52, 56, 92, 94, 103, 106, 111, 122, 123, 125, 126, 129, 131, 132, 133, 136, 141, 142, 144, 145, 146, 147, 148, 149, 159, 174, 179, 208, 209, 213, 223, 226, 227, 228, 229, 234, 235, 248], "argentina": [7, 29, 30, 33], "argmin": [2, 31, 109, 134, 135, 137, 217], "args_model": 74, "argument": [4, 50, 74, 111, 119, 129, 132, 133, 138, 150, 202, 223, 224, 235, 236, 237], "aris": 22, "around": [8, 61, 193], "arrai": [0, 13, 31, 109, 215, 217, 239], "arridg": 45, "arrow": 65, "art": [0, 62], "artefact": 51, "artifact": [37, 64, 100, 121, 187, 195, 222, 223], "artifact_remov": 46, "artifactremov": [14, 37, 38, 39, 54, 164, 174, 177, 187], "arxiv": [30, 73, 74, 75, 80, 93, 100, 110, 113, 116, 117, 164, 169, 211, 215, 216, 217, 220, 221, 225, 232], "asarrai": 31, "ask": 49, "assert": [0, 11, 58], "assign": [72, 177], "associ": [0, 8, 13, 31, 43, 50, 51, 72, 73, 77, 79, 80, 82, 84, 86, 88, 89, 90, 92, 94, 122, 123, 129, 131, 133, 137, 147, 203, 219], "assum": [31, 32, 73, 96, 97, 99, 109, 134, 163, 187, 194, 195, 220, 221], "assumpt": [152, 216], "astigmat": 4, "at_next": 32, "atan": 27, "aten": [4, 8], "atmospher": [58, 172], "attent": [27, 109, 119, 121], "attn_drop_r": 121, "attr": 4, "attribut": [6, 31, 54, 103, 151, 152, 153, 171, 175, 180, 181, 188, 189, 247], "atu": 117, "au": [134, 135, 137], "augment": [53, 69, 72, 73, 80, 248], "author": [31, 32, 45, 51, 84, 109, 121], "authorship": 49, "auto_exampl": [1, 3, 15, 20, 23, 28, 34, 40, 41, 48], "auto_examples_jupyt": 16, "auto_examples_python": 16, "autograd": [32, 58], "automat": [5, 11, 27, 32, 49, 51, 58, 131, 144, 145, 174, 179], "aux": 129, "aux_x": 32, "auxiliari": [122, 129, 133], "avail": [0, 4, 14, 17, 46, 50, 51, 52, 58, 60, 107, 109, 110, 114, 120, 121, 125, 126, 134, 135, 149, 206], "averag": [12, 17, 30, 33, 51, 58, 84, 86, 107, 113, 114, 138, 162, 163, 174, 175, 239], "avg": [22, 64], "avgpool": [107, 114], "avoid": [7, 29, 108, 128, 141, 219, 224], "awgn": 32, "ax": [0, 5, 18, 19, 21, 22, 33, 43, 44, 46, 58, 59, 129, 132, 133, 135, 137, 152, 160, 164, 166, 174, 187, 193, 244], "ax_": 29, "ax_cur": 116, "ax_k": [43, 44], "axi": [17, 31, 187, 195, 225], "b": [2, 7, 8, 9, 11, 21, 22, 24, 25, 26, 29, 30, 32, 33, 35, 36, 37, 38, 39, 44, 46, 53, 58, 83, 88, 89, 90, 115, 121, 128, 131, 134, 137, 158, 160, 170, 173, 176, 178, 183, 184, 186, 190, 196, 197, 199, 200, 204, 205, 206, 208, 213, 219, 220, 221, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 244, 248], "b4": [7, 29, 30, 33], "b_": [8, 183, 184], "b_dagger": 178, "b_i": [88, 128], "b_t": [32, 216], "back": [0, 43, 44, 187], "backbon": [7, 14, 43, 54, 60, 103], "backbone_gener": 103, "backbone_net": [37, 100], "backend": 0, "background": [8, 143, 184], "backproject": [0, 13, 22, 43, 44, 45, 117], "backpropag": [32, 74, 75, 102, 140], "backtrack": [5, 19, 26, 129], "backtrak": 5, "backward": [5, 22, 42, 60, 62, 64, 96, 97, 99, 134, 135, 187, 224, 234], "ball": [46, 134, 135], "band": [43, 149], "bar": [14, 32, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 64, 72, 103, 217, 222], "barbara": [4, 25], "base": [2, 7, 21, 29, 32, 45, 50, 52, 53, 56, 58, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238], "base_dir": [5, 6, 9, 11, 14, 17, 18, 19, 24, 25, 26, 27, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47], "basedeq": [60, 236], "basemaskgener": [208, 209, 213], "baseoptim": [56, 130, 150, 235, 237], "baseunfold": [60, 234, 236, 237], "basi": [9, 17, 43, 46], "basic": [13, 15, 58, 62, 63, 162, 163, 174, 224, 225], "basplib": 0, "batch": [6, 18, 19, 22, 24, 26, 36, 37, 43, 44, 64, 69, 72, 77, 92, 94, 102, 107, 108, 109, 110, 111, 118, 124, 128, 129, 131, 132, 134, 137, 140, 159, 170, 176, 184, 190, 207, 208, 209, 210, 212, 213, 214, 222, 225, 229, 230, 231, 232, 233, 239, 244, 246], "batch_dimens": 159, "batch_norm": [2, 14, 35, 118, 124], "batch_siz": [2, 4, 5, 6, 14, 21, 22, 24, 26, 32, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 58, 72, 76, 81, 83, 85, 88, 89, 90, 91, 107, 111, 116, 117, 132, 207, 208, 209, 210, 211, 212, 213, 214], "batchnorm": 124, "batchnorm2d": [103, 124], "bay": 32, "bayer": [13, 167], "bayesian": 33, "beam": [187, 195], "becaus": [9, 46], "beck": 123, "been": [0, 2, 5, 6, 7, 14, 24, 26, 27, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 64, 65, 66, 70, 71, 82, 133], "befor": [2, 31, 32, 46, 75, 77, 84, 86, 108, 121, 133, 150, 169, 181, 235, 236, 237, 247], "begin": [0, 10, 17, 18, 19, 22, 25, 31, 32, 43, 46, 52, 56, 60, 129, 134, 149, 151, 152, 153, 154, 155, 156, 157, 158, 174, 179, 191, 192, 193, 216, 217, 234, 235], "beginn": [105, 106], "behav": 122, "being": [11, 31, 64], "below": [0, 2, 4, 49, 53, 55], "benchmark": [65, 175], "berkelei": 65, "bernoulli": [39, 89, 90, 173], "bernoullimaskgener": 86, "besid": 11, "bessel": 182, "best": [11, 31, 32, 38, 39, 84, 86, 103], "beta": [21, 31, 32, 45, 47, 56, 111, 132, 133, 139, 143, 151, 152, 153, 172, 216, 217], "beta_": 32, "beta_anderson_acc": [129, 133], "beta_anderson_acc_backward": 234, "beta_end": [31, 32, 109, 217], "beta_start": [31, 32, 109, 217], "beta_t": 32, "better": [11, 14, 17, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 61, 84, 86], "between": [0, 2, 5, 7, 10, 22, 24, 26, 27, 31, 32, 52, 55, 56, 64, 66, 67, 73, 74, 76, 86, 95, 96, 98, 99, 101, 123, 124, 129, 131, 139, 144, 174, 178, 179, 182, 187, 195, 217, 219, 221, 244], "beyond": [35, 36], "bfbatchnorm2d": 124, "bia": [5, 14, 24, 26, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 103, 110, 116, 117, 118, 119, 121, 124], "bias": [64, 110, 124], "biasfre": [119, 124], "bicub": [26, 58, 169, 177, 191, 227], "bigger": [164, 185, 244], "bilinear": [58, 169, 177, 192, 225, 230, 231, 232, 233], "bin": [8, 184, 202, 203], "binari": [13, 37, 166, 170, 173, 176, 185], "bkg": 143, "bkg_level": 8, "black": [49, 58, 162, 163, 169, 174], "blank": [170, 176], "blind": [2, 58, 95, 96, 118, 120, 124], "bling": 119, "blob": 112, "block": [51, 54, 93, 107, 114, 116, 117, 119, 121, 140], "blue": 8, "blur": [2, 15, 16, 19, 26, 29, 31, 42, 47, 62, 63, 163, 166, 169, 174, 177, 179, 186, 191, 192, 193, 196, 199, 206, 207, 210, 211, 212, 242, 244], "blur_gener": 2, "blurfft": [4, 5, 18, 24, 29, 31, 42], "bmatrix": [10, 174, 179], "bool": [0, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 80, 83, 85, 93, 100, 103, 107, 108, 109, 110, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 133, 139, 141, 149, 150, 159, 164, 173, 174, 181, 182, 183, 185, 187, 194, 195, 197, 200, 203, 215, 216, 217, 218, 219, 220, 221, 222, 224, 234, 235, 236, 237, 239, 241, 242, 244, 245, 246, 247, 248], "boolean": [67, 115, 140, 219], "bora": [2, 95, 96, 98, 99, 103], "borrow": 203, "both": [2, 22, 27, 43, 44, 45, 51, 58, 67, 185, 187, 211, 224], "bottom": [67, 246], "bound": [202, 203], "boundari": [0, 4, 141], "box": [29, 219, 220, 221], "brain": [17, 67], "brainweb": 17, "brainweb_t1_icbm_1mm_subject_0": 17, "bredi": 122, "briefli": 51, "briggs_weight": 0, "bright": 0, "broad": 119, "broadcast": [173, 196, 197, 199, 200, 204, 205], "bsd68": 65, "bsds500": [21, 51, 111, 132], "build": [0, 6, 16, 25, 33, 34, 51, 54, 60, 62, 63, 69, 93, 115, 131, 137, 141, 144, 146, 150, 163, 166, 171, 174, 179, 219, 221, 236, 237, 239, 240, 242, 244], "builder": 60, "built": 140, "burn": [219, 220, 221], "burnin": [29, 218], "burnin_ratio": [29, 218, 219, 220, 221], "butterfli": [31, 32], "bx": [58, 178], "bz": 161, "c": [0, 13, 17, 44, 46, 53, 58, 83, 89, 108, 109, 119, 121, 134, 162, 163, 164, 166, 170, 173, 176, 182, 183, 185, 186, 190, 196, 197, 199, 200, 204, 205, 206, 208, 209, 213, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 244, 248], "c2": 32, "c_": 149, "cach": [2, 9, 11, 21, 22, 24, 25, 26, 32, 33, 35, 36, 37, 38, 39, 67], "cal_psnr": [0, 7, 11, 17, 18, 19, 21, 22, 25, 27, 29, 30, 33, 174, 215, 217], "calcul": [29, 131, 136, 144, 145, 148], "call": [4, 11, 32, 51, 52, 58, 59, 60, 61, 64, 77, 78, 92, 94, 101, 104, 106, 115, 116, 117, 120, 123, 133, 139, 173, 174, 190, 194, 195, 222, 248], "callabl": [65, 66, 67, 69, 70, 71, 113, 131, 141, 142, 144, 145, 150, 160, 161, 166, 174, 179, 190, 212, 218, 236, 237], "camera": [25, 35, 51, 53, 185, 230, 231, 232, 233], "cameraman": 52, "can": [0, 2, 4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 24, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 64, 67, 72, 73, 79, 80, 82, 84, 86, 87, 88, 89, 90, 93, 100, 101, 103, 107, 108, 109, 110, 113, 114, 120, 121, 124, 125, 126, 127, 129, 133, 137, 140, 146, 149, 150, 164, 169, 170, 173, 174, 176, 177, 178, 179, 182, 183, 185, 186, 187, 190, 195, 196, 197, 199, 200, 204, 205, 208, 212, 213, 215, 216, 219, 222, 223, 234, 235, 236, 237, 246, 247, 248], "caption": 64, "captur": [55, 58, 174, 179], "care": [29, 78, 101, 104, 106, 115, 116, 117, 120, 194, 195, 217], "carefulli": 31, "carlo": [29, 33, 51, 84, 86, 88, 89, 90, 113, 218, 219, 220, 221], "cartesian": [13, 58, 208, 209, 213], "cascad": 209, "case": [0, 4, 6, 8, 17, 18, 25, 32, 43, 50, 51, 52, 54, 56, 72, 109, 128, 134, 135, 139, 164, 174, 179, 185, 187, 191, 192, 216, 230, 231, 232, 233], "cat": [8, 12, 13, 32, 124], "caus": 124, "caveat": 32, "cbar": [0, 244], "cbsb68": 65, "cbsbd68": 65, "cbsd500": [42, 47], "cbsd68": [5, 13, 14, 46], "cbsd_0010": [4, 13, 21], "cdot": [2, 17, 31, 32, 56, 59, 60, 125, 126, 129, 131, 134, 146, 149, 158, 192, 216, 217], "celeba": [50, 72], "celeba_exampl": 35, "center": [46, 134, 135, 162, 163, 169, 174, 208, 209, 213], "center_fract": [208, 209, 213], "centercrop": [2, 5, 6, 14, 18, 19, 24, 26, 35, 42, 46, 47], "certain": [7, 50, 108], "cfloat": [164, 183], "cg": 160, "chain": [53, 131, 218, 219, 220, 221, 229], "challeng": [0, 66, 67], "chambol": [9, 16, 45, 48, 63, 64, 68, 72, 77, 87, 122, 123, 125, 131, 134, 142, 144, 150, 152, 154, 166, 173, 174, 179, 222, 235, 236, 237, 240], "chang": [4, 49, 64, 129, 133, 162], "channel": [4, 6, 7, 8, 10, 12, 13, 17, 18, 19, 21, 24, 26, 45, 51, 69, 104, 105, 106, 107, 109, 110, 111, 114, 116, 117, 118, 119, 120, 121, 124, 132, 140, 164, 165, 170, 173, 176, 183, 184, 185, 196, 197, 199, 200, 207, 208, 209, 211, 213, 244], "channelwis": [13, 164, 183], "chaofengc": 24, "character": [58, 174, 179], "characteris": 2, "cheap": 125, "chebyshev": 220, "check": [0, 44, 46, 49, 64, 65, 66, 70, 71, 119, 129, 133, 174, 224], "check_clip_grad": [64, 224], "check_clip_grad_d": 224, "check_conv_fn": [129, 133], "check_dataset_exist": [65, 70, 71], "check_grad": [64, 224], "check_iteration_fn": [129, 133], "check_mask": [170, 176], "checkpoint": [2, 5, 9, 11, 21, 22, 24, 25, 26, 32, 33, 35, 36, 37, 38, 39, 64, 121], "checksum": 66, "chen": [35, 62], "child": [208, 213, 234, 235], "choic": [21, 22, 27, 52, 55, 56, 88, 89, 90, 111, 130, 132], "choos": [5, 9, 13, 14, 22, 25, 31, 32, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 60, 82, 106, 109, 129, 133, 149], "choosen": 22, "chose": [18, 19, 24], "chosen": [21, 27, 31, 42, 47, 64, 72, 84, 113, 121, 129, 174, 175, 222], "chung": 32, "chw": [83, 239], "circ": [56, 78, 173, 174, 179], "circl": [27, 45, 187, 194, 195], "circular": [2, 4, 58, 124, 162, 163, 169, 174, 177, 186, 187, 195, 196, 197, 199, 200, 206, 228], "circular_pad": [2, 35, 124], "ckp_": 64, "ckp_10_demo_sur": 39, "ckp_50_demo_n2n": 38, "ckp_interv": [36, 37, 64, 224], "ckpt": [2, 9, 14, 26, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47], "ckpt_dir": [9, 14, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47], "ckpt_path": 100, "ckpt_pretrain": [64, 224], "ckpt_state_dict": 9, "claim": 129, "clamp": [0, 19, 149], "clamp_max": 149, "clamp_min": [0, 149], "class": [0, 4, 5, 6, 11, 12, 13, 14, 17, 18, 19, 22, 24, 25, 27, 30, 31, 32, 33, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 56, 58, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238], "classif": 224, "classifi": [92, 94, 118, 159], "clean": [45, 47, 84, 164, 170, 173, 177, 179, 187], "clip": [11, 21, 22, 29, 32, 52, 64, 181, 218, 219, 220, 221, 224, 244], "clip_posit": 181, "clone": [9, 13, 17, 22, 31, 32, 43, 46], "close": [12, 17, 29, 30, 58, 84, 125, 126, 134, 135, 138, 164, 169, 174, 179, 187], "closer": [11, 174, 215, 217], "cm": [187, 195], "cmap": [0, 17, 244, 246], "cnn": [7, 24, 107, 130], "co": [2, 9, 11, 17, 21, 22, 25, 26, 32, 33, 35, 36, 37, 38, 39, 52, 65, 71, 193], "code": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 49, 51, 52, 54, 58, 64, 82, 109, 121, 122, 123, 208], "coeff": [4, 125, 207], "coeffic": 125, "coeffici": [4, 13, 125, 126, 149, 207], "coil": [36, 58, 67, 170, 176], "colab": 16, "collabor": 102, "collect": [56, 58, 60, 62], "colon": 55, "color": [4, 5, 6, 10, 11, 12, 13, 14, 18, 19, 24, 25, 26, 27, 42, 45, 46, 47, 51, 65, 111, 132, 177], "colormap": [0, 244], "colour": [4, 12, 165], "column": [43, 44, 173, 209, 213, 244], "com": [16, 22, 24, 39, 43, 62, 70, 82, 109, 112, 121, 208], "combett": 17, "combin": [31, 51, 54, 58, 212, 217], "come": [56, 144, 174], "command": 49, "common": [0, 7, 29, 30, 33, 42, 43, 47, 56, 149], "commonli": [70, 71, 133], "commun": 49, "commut": 113, "compar": [29, 30, 33, 64, 66, 93, 103, 234], "comparison": 93, "compat": [54, 125], "compens": 0, "complet": 224, "complex": [0, 9, 11, 13, 17, 127, 149, 164, 170, 176, 182, 185, 244], "complex64": [0, 183], "complex_denois": 51, "compliant": 49, "complic": 2, "compon": [22, 32, 111, 132, 159], "component_log_likelihood": 159, "compos": [2, 5, 6, 14, 18, 19, 24, 26, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 50, 67, 93, 110, 126, 135, 174], "composit": [58, 122, 123], "compound": 229, "comprehens": 49, "compress": [2, 16, 48, 50, 63, 64, 68, 72, 77, 87, 95, 96, 103, 121, 131, 137, 144, 149, 157, 164, 174, 179, 235, 237, 240, 244, 247], "compressedsens": [13, 43, 44, 50, 58], "comput": [0, 4, 5, 6, 7, 10, 11, 12, 14, 16, 17, 18, 19, 21, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 51, 56, 58, 59, 64, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 101, 104, 106, 110, 111, 115, 116, 117, 120, 122, 123, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 163, 164, 166, 168, 169, 170, 171, 173, 174, 175, 177, 178, 179, 182, 185, 187, 189, 190, 194, 195, 202, 203, 211, 216, 217, 218, 219, 220, 221, 222, 224, 234, 235, 237, 238, 239, 240, 242, 244, 245], "compute_alpha": 32, "compute_alpha_beta": 216, "compute_loss": [22, 64, 224], "compute_metr": [0, 11, 18, 19, 25, 27, 64, 129, 133, 234], "compute_norm": [0, 10, 12, 56, 174, 221], "concanten": [173, 179], "concaten": [15, 16, 61, 63, 64, 116, 117, 121, 165, 166, 169, 173, 174, 177, 179, 225, 226, 228, 230, 231, 232, 233, 238, 240, 244], "conclus": 11, "condat": [16, 28, 52, 63, 110, 122, 123, 129, 131, 137, 139, 142, 144, 150, 166, 171, 174, 179, 185, 239, 240, 242, 244, 245], "condatvu": 25, "condit": [4, 31, 37, 58, 95, 96, 109, 118, 217], "confer": [24, 26, 130], "config": [8, 31, 120], "config_matplotlib": [8, 31], "conj": [158, 174, 238], "conjug": [25, 131, 144, 152, 160, 164, 169, 174, 187, 238], "conjugate_gradi": [164, 174, 187], "conjugate_gradient_method": 160, "conjunct": [64, 222], "connect": [101, 121, 124], "consecut": [5, 26, 131, 144], "consequ": 175, "consid": [13, 21, 22, 32, 45, 67, 111, 132, 140, 197, 200, 207], "consider": 208, "consist": [0, 9, 13, 25, 31, 32, 36, 37, 46, 51, 55, 60, 70, 79, 80, 82, 86, 87, 95, 96, 97, 98, 99, 103, 129, 177], "consol": [64, 72, 159, 222], "const": 22, "constant": [21, 32, 42, 53, 88, 89, 90, 119, 122, 123, 138, 161, 165, 172, 174, 175, 216, 219, 220, 221], "constrain": [9, 16, 48, 63, 64, 68, 72, 77, 87, 123, 125, 131, 134, 142, 144, 166, 173, 174, 179, 222, 235, 237, 240], "constraint": [51, 219, 220, 221], "construct": [2, 9, 13, 31, 43, 46, 58, 95, 96, 98, 99], "constructor": [210, 223], "consumpt": [111, 132], "contain": [4, 6, 8, 9, 25, 43, 51, 53, 56, 58, 59, 60, 64, 65, 67, 68, 70, 71, 72, 80, 113, 125, 126, 129, 133, 139, 150, 151, 152, 153, 154, 155, 158, 159, 162, 163, 180, 182, 184, 187, 195, 219, 220, 221, 226, 228, 235, 236, 237, 241, 242, 247], "content": 66, "context": 2, "continu": 35, "contrast": 22, "contribut": 203, "contributor": 49, "control": [27, 29, 31, 33, 53, 55, 67, 88, 124, 130, 216, 221], "conv": [118, 119, 120, 121], "conv1d": 8, "conv2d": [58, 162, 199], "conv2d_fft": 200, "conv_transpose2d": 58, "conv_transposed2d": 196, "conv_transposed2d_fft": 197, "conv_transposed3d": 198, "convdecod": [7, 108], "conveni": [17, 18, 19, 29], "convent": [17, 125, 165, 207], "converg": [0, 5, 10, 12, 17, 18, 19, 24, 25, 26, 27, 30, 45, 56, 74, 75, 122, 123, 129, 131, 133, 134, 135, 139, 144, 147, 156, 174, 218, 219, 220, 221], "convers": 62, "convert": [10, 11, 12, 30, 51, 59, 109, 127, 165, 166, 239, 241, 242], "convert_to_fp16": 109, "convert_to_fp32": 109, "convex": [46, 56, 122, 123, 131, 134, 144], "convolut": [0, 4, 5, 7, 8, 18, 33, 52, 57, 58, 59, 104, 105, 106, 107, 108, 110, 114, 116, 117, 119, 121, 124, 146, 162, 163, 182, 186, 196, 197, 198, 199, 200, 201, 206, 209], "convolv": [4, 59, 146, 196, 197, 199, 200], "convtranspos": [107, 114], "convtranspose2d": 103, "coordin": [0, 193, 211, 246], "copi": [8, 9, 13, 17, 31, 42, 43, 44, 46, 47], "corner": 246, "correct": [0, 27, 103, 182], "correct_global_phas": 11, "correctli": [46, 65, 66, 70, 71], "correl": 38, "correspond": [0, 4, 13, 22, 25, 26, 31, 32, 43, 44, 51, 56, 103, 119, 129, 138, 139, 152, 158, 170, 174, 175, 176, 178, 179, 196, 197, 199, 200, 212, 224, 230, 231, 232, 233, 246], "corrupt": [38, 39], "cosin": 11, "cosine_similar": 11, "cosineannealinglr": 45, "cost": [5, 18, 19, 25, 26, 56, 129, 133, 139, 150, 151, 152, 153, 154, 155, 174, 236, 237], "cost_tv": 18, "cost_tv_prox": 18, "cost_wv": 19, "cost_wv_prox": 19, "could": 7, "count": 203, "coupl": 22, "cov": 159, "cov_regular": 159, "covari": [158, 159, 211], "coverag": 0, "cp": [9, 46, 56, 150, 235, 236, 237], "cpiter": [45, 46], "cpp": [4, 8], "cpu": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 52, 64, 72, 76, 81, 85, 92, 93, 94, 95, 96, 97, 98, 99, 100, 107, 110, 111, 114, 119, 120, 125, 126, 132, 140, 149, 159, 162, 163, 164, 165, 167, 169, 170, 173, 176, 177, 182, 183, 184, 185, 186, 187, 190, 194, 195, 207, 211, 212, 214, 215, 216, 217, 222, 224, 225, 230, 231, 232, 233, 235, 237, 241, 242], "creat": [5, 10, 11, 15, 16, 24, 25, 58, 60, 61, 63, 67, 68, 72, 75, 93, 111, 129, 131, 132, 133, 164, 166, 168, 170, 171, 174, 176, 179, 183, 209, 212, 213, 215, 219, 223, 229, 237, 240, 244], "creation": 12, "crit": [5, 19, 26, 30, 122, 123], "crit_conv": [5, 26, 129, 134, 135, 219, 221], "criteria": [5, 24, 26, 103, 219], "criterion": [17, 122, 123, 129, 133, 134, 135, 147, 174], "critic": [92, 94, 224], "crop": [125, 241, 242], "crop_output": 125, "crucial": [27, 52], "csgm": 103, "csgmgener": 2, "ct": [16, 21, 22, 28, 48, 62, 63, 64, 77, 87, 110, 111, 116, 117, 129, 131, 132, 137, 139, 140, 142, 144, 150, 152, 171, 174, 175, 179, 187, 235, 237, 239, 240, 242, 244, 245], "ct_small": 22, "ct_toi": 22, "cubic": [17, 149], "cuda": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 54, 64, 75, 111, 130, 132, 162, 163, 186, 212, 215, 217], "cumprod": [31, 32], "cup_": [7, 29, 30, 33], "cur_data_fidel": [25, 45, 133, 139, 151, 152, 153, 154, 155], "cur_param": [25, 133, 139, 151, 152, 153, 154, 155, 158], "cur_prior": [25, 45, 133, 139, 151, 152, 153, 154, 155, 158], "curr_sigma": 31, "current": [5, 19, 25, 26, 29, 30, 31, 32, 45, 64, 116, 117, 129, 133, 139, 151, 152, 153, 154, 155, 158, 159, 162, 163, 166, 169, 170, 171, 175, 180, 181, 186, 189, 224], "current_log": 22, "curv": [0, 5, 11, 14, 18, 19, 24, 25, 26, 27, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47], "custom": [6, 9, 11, 15, 16, 27, 28, 34, 46, 48, 52, 61, 62, 63, 64, 68, 72, 77, 87, 110, 115, 129, 131, 137, 139, 142, 144, 146, 150, 157, 163, 164, 166, 169, 171, 174, 177, 179, 185, 193, 219, 221, 222, 223, 235, 236, 237, 239, 240, 242, 244, 245, 247], "custom_init": [0, 9, 27, 45, 46, 129], "custom_init_cp": [9, 46], "custom_metr": 129, "custom_output": [26, 45], "customtrain": 64, "cutoff": [4, 207], "cviter": 25, "cyclegan": 2, "d": [0, 2, 8, 17, 29, 33, 46, 56, 59, 74, 78, 91, 92, 94, 95, 96, 97, 98, 99, 109, 113, 122, 123, 128, 131, 132, 134, 135, 137, 138, 142, 143, 145, 146, 147, 164, 172, 182, 183, 184, 203, 224], "d_": [8, 46, 52, 108, 184, 216, 217], "dagger": [100, 166, 170], "damp": 220, "daniil": [122, 123], "data": [0, 2, 7, 11, 22, 35, 50, 52, 53, 54, 55, 58, 60, 64, 65, 66, 67, 69, 70, 71, 72, 73, 79, 80, 82, 86, 87, 88, 89, 90, 111, 120, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 149, 150, 151, 152, 153, 154, 155, 158, 159, 182, 194, 195, 212, 216, 217, 222, 223, 224, 225, 230, 231, 232, 233, 235, 236, 237], "data_dir": [5, 6, 9, 14, 17, 18, 19, 24, 26, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47], "data_fidel": [0, 5, 9, 11, 18, 19, 22, 24, 25, 26, 27, 29, 31, 32, 33, 36, 42, 43, 44, 45, 46, 47, 52, 56, 60, 129, 131, 133, 139, 150, 151, 152, 153, 154, 155, 216, 217, 219, 220, 221, 235, 236, 237], "data_init": 159, "data_test": 50, "data_train": 50, "datafid": [22, 52, 55, 56, 60, 129, 131, 135, 137, 138, 143], "datafidel": [25, 45, 56, 59, 128, 129, 133, 134, 135, 137, 138, 139, 143, 144, 150, 151, 152, 153, 154, 155, 216, 217, 219, 220, 221, 235, 236, 237], "datafidnam": [52, 56, 129, 131, 137], "dataload": [2, 5, 14, 22, 24, 25, 26, 27, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 64, 159, 222, 223, 224], "dataparallel": 54, "datapoint": 72, "dataset": [9, 11, 13, 15, 16, 17, 21, 22, 27, 32, 35, 51, 52, 53, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 111, 132, 166, 168, 171, 174, 175, 179, 222, 224, 240, 244], "dataset_cach": 67, "dataset_filenam": [14, 36, 37, 38, 39, 42, 43, 44, 46, 47, 72], "dataset_info": 65, "dataset_nam": [5, 6, 18, 19, 24, 25, 26], "dataset_path": [2, 5, 26], "dataweight": [0, 182], "daubechi": 0, "davob": 102, "db": [0, 7, 11, 17, 18, 19, 25, 27, 29, 30, 33], "db1": [0, 17, 149], "db2": [0, 17, 125, 149], "db3": [0, 17], "db4": [0, 17, 126, 149], "db5": 0, "db6": 0, "db7": 0, "db8": [0, 9, 17, 19, 43, 46, 125, 126, 149], "dcgan": [2, 103, 105, 106], "dcgan_faces_tutori": [105, 106], "dcgandiscrimin": [2, 96, 97, 99], "dcgangener": [2, 103], "dd_hh": 64, "ddim": [32, 216], "ddpm": 32, "ddrm": [12, 30], "deblur": [2, 15, 16, 20, 28, 31, 35, 48, 58, 62, 63, 64, 68, 72, 76, 77, 83, 87, 95, 96, 107, 110, 118, 119, 123, 129, 130, 131, 137, 142, 144, 147, 150, 163, 166, 171, 174, 179, 193, 222, 227, 234, 236, 239, 240, 244, 245], "deblurgan": [2, 95, 96, 118], "deblurgan_model": 2, "debug": 101, "dec": 125, "decid": 49, "decod": [7, 52, 104, 107, 108, 119], "decolor": [10, 12, 58], "decolorizesvd": 12, "decompos": [0, 182], "decomposablephys": [4, 12, 29, 30, 58, 163, 165, 168, 170, 173, 176, 185, 215], "decomposit": [4, 12, 29, 30, 58, 125, 126, 149, 163, 166, 170, 173, 176, 185, 207, 215], "deconvolut": 60, "decreas": [31, 32, 129, 159, 215, 216, 217], "deep": [6, 11, 15, 16, 24, 48, 49, 57, 63, 64, 68, 72, 76, 77, 87, 100, 104, 105, 106, 107, 108, 110, 129, 130, 131, 137, 142, 144, 150, 163, 166, 171, 173, 174, 179, 193, 209, 222, 234, 235, 236, 239, 240, 242, 244], "deepimageprior": [7, 104], "deepinv": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "deepinv_dataset_path": 5, "deepinv_datasets_path": [14, 36, 37, 38, 39, 46], "deepinvers": [1, 13, 16, 49, 56, 63, 68, 129, 131, 137, 144, 149, 150, 174, 179, 182, 239, 244, 245, 246], "def": [0, 2, 5, 9, 12, 22, 25, 26, 29, 31, 32, 44, 45, 46, 64, 219], "def_crit": 147, "default": [0, 4, 11, 21, 24, 26, 51, 54, 58, 64, 65, 66, 67, 70, 71, 73, 74, 75, 76, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 105, 106, 107, 109, 110, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 130, 131, 133, 134, 139, 140, 144, 145, 147, 149, 150, 151, 152, 153, 162, 164, 173, 174, 177, 179, 182, 183, 187, 194, 195, 207, 211, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 234, 235, 236, 237, 244, 246, 247, 248], "defin": [0, 4, 8, 10, 11, 12, 17, 21, 22, 27, 31, 35, 36, 37, 38, 39, 50, 52, 53, 56, 60, 64, 67, 73, 78, 79, 80, 84, 87, 97, 101, 103, 104, 106, 111, 115, 116, 117, 120, 125, 126, 128, 129, 131, 132, 133, 134, 135, 137, 139, 140, 146, 151, 152, 153, 154, 155, 158, 162, 163, 164, 165, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 182, 183, 185, 187, 191, 192, 193, 194, 195, 211, 215, 216, 217, 219, 224, 248], "definit": [4, 25, 32, 58], "defocu": 119, "defocus_deblur": 119, "deg_dir": [5, 9, 17, 18, 19, 24, 26], "degrad": [9, 11, 17, 27, 51], "degre": [13, 22, 36, 51, 113, 187, 193, 225, 226], "delta": [0, 4, 186], "demo": [0, 2, 4, 5, 6, 9, 11, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 46, 47, 51], "demo_3d_wavelet": [17, 20, 63], "demo_blur_tour": [4, 15, 63], "demo_custom_kernel": [29, 34, 63], "demo_custom_prior": [5, 15, 63], "demo_custom_prior_unfold": [44, 48, 63], "demo_dataset": [6, 15, 63], "demo_ddrm": [30, 34, 63], "demo_deq": [42, 48, 63], "demo_diffpir": [31, 34, 63], "demo_dip": [7, 15, 63], "demo_dp": [32, 34, 63], "demo_ei_transform": [35, 40, 63], "demo_epl": [21, 23, 63], "demo_equivariant_imag": [36, 40, 63], "demo_gan_imag": [2, 3, 63], "demo_learned_primal_du": [45, 48, 63], "demo_licp": 44, "demo_lidar": [8, 15, 63], "demo_lista": [43, 48, 63], "demo_load": [9, 15, 63], "demo_moi_ckp_10": 37, "demo_multioperator_imag": [37, 40, 63], "demo_n2n": 38, "demo_n2n_denois": [38, 40, 63], "demo_pansharpen": [10, 15, 63], "demo_patch_priors_ct": [22, 23, 63], "demo_phase_retriev": [11, 15, 63], "demo_phys": [12, 15, 63], "demo_physics_tour": [13, 15, 63], "demo_pnp_custom_optim": [25, 28, 63], "demo_pnp_dpir_deblur": [24, 28, 63], "demo_red_gspnp_sr": [26, 28, 63], "demo_ri_bas": [0, 1, 63], "demo_sampl": [33, 34, 63], "demo_sur": 39, "demo_sure_denois": [39, 40, 63], "demo_train_inpaint": [14, 15, 63], "demo_training_inpaint": [14, 46], "demo_tv_minimis": [18, 20, 63], "demo_unfolded_constrained_lista": [46, 48, 63], "demo_unfolded_cp": 9, "demo_unfolded_cp_ptwt": 9, "demo_unfolded_sr": 47, "demo_vanilla_pnp": [27, 28, 63], "demo_vanilla_unfold": [47, 48, 63], "demo_wavelet_prior": [19, 20, 63], "demonstr": [2, 35, 53], "den": 31, "denois": [6, 7, 9, 16, 20, 22, 23, 24, 25, 27, 28, 29, 33, 36, 40, 42, 43, 46, 47, 52, 53, 55, 56, 58, 59, 60, 62, 63, 64, 68, 72, 77, 82, 84, 88, 89, 90, 100, 102, 107, 109, 110, 111, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 137, 142, 144, 145, 146, 147, 149, 150, 166, 169, 171, 173, 174, 175, 179, 180, 181, 188, 189, 215, 216, 217, 219, 220, 221, 222, 235, 236, 237, 239, 240, 242, 244], "denoised_imag": 51, "denoiser_complex": 11, "denoiser_nam": 26, "denoisernam": 113, "denoising_color": 119, "denoising_grai": 119, "denoising_r": 119, "denot": [74, 78, 134, 156, 162, 163, 172], "dens": 140, "densiti": [22, 143, 209, 213], "depend": [0, 22, 29, 55, 56, 60, 67, 92, 93, 94, 109, 129, 187, 212, 217, 219], "deprec": 223, "depth": [15, 16, 17, 36, 42, 47, 58, 63, 110, 116, 117, 120, 121, 172, 179, 184, 240], "deq": [16, 48, 60, 62, 63, 64, 68, 72, 77, 87, 110, 131, 137, 142, 144, 163, 166, 171, 174, 179, 193, 234, 236, 240], "deq_build": [42, 60], "derain": 119, "deriv": 53, "descent": [5, 18, 19, 27, 44, 52, 56, 131, 144, 150, 155, 157, 161, 179, 235, 236, 237], "describ": [9, 24, 33, 37, 57, 58, 130, 140, 173, 174, 175, 179, 215, 216, 217], "descript": [49, 122, 123, 149, 208, 209, 213], "design": [11, 51, 53, 84, 88, 89, 90], "desir": [2, 49, 72, 106, 208], "detach": [8, 9, 13, 22, 31, 32, 43, 46], "detail": [31, 32, 46, 51, 52, 58, 60, 64, 74, 75, 82, 89, 90, 107, 109, 110, 111, 114, 120, 121, 122, 123, 126, 129, 130, 132, 149, 150, 160, 175, 206, 207, 211, 222, 227, 230, 231, 232, 233, 234, 235, 236, 237, 244], "detector": [187, 195], "detector_radiu": [187, 195], "detector_spac": [187, 195], "determin": [140, 159], "determinist": [55, 58, 174, 179], "dev": [30, 33], "develop": 49, "deviat": [5, 8, 11, 13, 17, 18, 19, 21, 24, 25, 26, 27, 30, 31, 32, 51, 55, 56, 84, 88, 89, 129, 130, 137, 150, 168, 171, 177, 180, 184, 188, 193, 211, 235, 236, 237], "devic": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 52, 54, 64, 72, 76, 81, 85, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 107, 110, 111, 114, 119, 120, 125, 126, 130, 132, 140, 149, 159, 162, 163, 164, 165, 167, 169, 170, 173, 176, 177, 182, 183, 184, 185, 186, 187, 190, 194, 195, 207, 211, 212, 214, 215, 216, 217, 222, 224, 225, 230, 231, 232, 233, 235, 237, 240, 241, 242], "device_count": 54, "device_id": 54, "df": 75, "df73285e": 24, "dhariw": 51, "diag": [4, 75, 158, 164, 166, 173, 178], "diagon": [29, 58, 75, 173, 204, 205], "dict": [25, 36, 64, 129, 133, 139, 150, 151, 152, 153, 154, 155, 158, 179, 187, 195, 207, 214, 224, 234, 235, 236, 237, 245, 247], "dict_kei": [4, 207, 210, 211, 212, 214], "dict_param": 58, "dictionari": [4, 17, 25, 36, 42, 43, 44, 47, 56, 58, 64, 129, 133, 139, 150, 151, 152, 153, 154, 155, 158, 179, 207, 210, 211, 212, 214, 235, 236, 237, 245, 247], "dictionnari": 0, "diff": [30, 211], "differ": [2, 4, 5, 7, 11, 21, 26, 32, 37, 38, 43, 44, 53, 58, 61, 64, 67, 80, 82, 91, 108, 121, 122, 123, 147, 177, 211, 215, 216, 238], "differenti": [32, 56, 73, 131, 144, 145, 152, 174, 179, 216, 220, 221], "diffpir": [16, 32, 34, 62, 63, 109, 131, 137, 143, 163, 166, 171, 174, 179, 240, 242, 244], "diffract": 207, "diffraction_gener": 4, "diffractionblur": 4, "diffractionblurgener": [4, 186, 210], "diffunet": [31, 32, 51], "diffus": [16, 31, 34, 62, 63, 107, 109, 166, 171, 173, 174, 179, 215, 216, 217, 218, 219, 239, 240, 242, 244], "diffusion_ffhq_10m": 32, "diffusion_step": 31, "diffusionsampl": [30, 59], "digit": 13, "dilat": [8, 227], "dim": [5, 8, 12, 13, 30, 32, 33, 58, 119, 120, 121, 174, 190, 238], "dim_hid": 101, "dim_input": 101, "dim_mid": 101, "dimens": [0, 6, 18, 19, 24, 26, 43, 101, 103, 106, 109, 111, 117, 121, 125, 131, 132, 134, 135, 147, 149, 158, 159, 166, 182, 190, 203, 208, 209, 213, 225, 226, 228, 229, 230, 231, 232, 233, 238, 239, 246, 248], "dimension": [187, 209, 213], "dinv": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 56, 58, 60, 84, 86, 129, 131, 133, 137, 215, 217, 237], "dinv_dataset": 72, "dinv_dataset0": [24, 26], "dinv_dataset_path": [6, 24, 26], "dir": [24, 26, 50], "dirac": 0, "dirac_comb": [4, 186], "dirac_lik": 0, "direct": [151, 229], "directli": [0, 4, 11, 45, 62, 109, 121, 150, 235, 236, 237], "directori": [49, 50, 64, 65, 66, 70, 71, 222, 247], "disabl": [14, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47], "discard": [103, 219, 220, 221], "discord": [49, 62], "discrep": [52, 55, 56, 129], "discret": [0, 22, 164, 170, 176, 182], "discrimin": [2, 51, 53, 92, 93, 94, 95, 96, 97, 98, 99, 105, 112, 118, 224], "discriminatorloss": [95, 98], "disk": [65, 66, 70, 71], "displai": [6, 35, 103, 162, 163, 169, 248], "display_losses_ev": 224, "distanc": [53, 55, 56, 128, 129, 131, 135, 137, 138, 144, 187, 195], "distancenam": [56, 131, 137, 152], "distinct": [9, 36, 43, 44, 45, 46, 47, 56, 129, 150, 235, 236, 237], "distribut": [22, 29, 30, 33, 39, 55, 59, 111, 132, 146, 168, 173, 209, 215, 216, 217, 218, 219, 220, 221], "distributeddataparallel": 54, "div2k_train_hr": 66, "div2k_valid_hr": 66, "diverg": [88, 89, 90], "divers": 2, "divid": [181, 238], "divis": [109, 119, 128], "dncnn": [25, 27, 33, 36, 42, 47, 51, 53, 60, 237], "dncnn_sigma2_lipschitz_color": 33, "dncnn_sigma2_lipschitz_grai": 25, "do": [2, 24, 51, 125, 129, 144], "doc": [49, 58, 64], "document": [46, 49, 54, 55, 78, 84, 88, 89, 90, 152, 172, 184], "doe": [2, 17, 58, 64, 73, 74, 75, 102, 110, 134, 156, 174, 179, 235, 237], "doesn": [6, 53, 146], "doi": [110, 187, 195], "domain": [0, 22, 43, 44, 57, 58, 102, 182], "don": [65, 246], "done": [4, 11, 14, 18, 19, 30, 31, 32, 42, 43, 44, 45, 46, 47, 49, 50, 58, 61, 64, 125, 177], "dongdong": 62, "dose": 175, "dossal": 154, "dot": [37, 80, 126], "doubl": 174, "dougla": [47, 150, 153, 235, 236, 237], "down": 26, "download": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 52, 65, 66, 67, 70, 71, 107, 109, 110, 111, 114, 119, 120, 121, 132, 215, 217], "download_and_extract_arch": [2, 35], "download_lipschitz": [25, 33, 110], "downsampl": [10, 13, 22, 26, 42, 47, 107, 114, 124, 174, 177, 191, 192], "downsample_mod": [107, 114], "downscal": 35, "dp": [16, 34, 63, 109, 131, 137, 166, 173, 174, 179, 240, 242, 244], "dpir": [16, 28, 51, 62, 63, 68, 72, 76, 77, 83, 107, 129, 131, 137, 142, 144, 150, 163, 166, 171, 174, 179, 222, 240], "dr": [0, 19, 47, 56, 150, 153, 235, 236, 237], "drawback": 54, "drive": 22, "driven": 49, "drop": 120, "drop_last": 22, "drop_path_r": [120, 121], "drop_rat": 121, "dropout": 121, "drunet": [11, 24, 30, 42, 47, 51, 54, 114, 130, 215, 217], "drunet_deepinv_gray_finetune_26k": 11, "dst": 164, "dtype": [4, 13, 22, 31, 32, 44, 129, 133, 164, 174, 183, 185, 187, 190, 194, 195, 207, 211, 212, 241, 242], "du": [74, 75], "dual": [16, 28, 46, 48, 52, 56, 63, 64, 77, 87, 110, 116, 117, 119, 122, 123, 129, 131, 134, 135, 137, 139, 142, 144, 150, 152, 166, 171, 174, 179, 185, 187, 235, 237, 239, 240, 242, 244, 245], "dual_pixel_task": 119, "due": [164, 187], "dummi": 58, "dure": [4, 31, 32, 35, 45, 64, 72, 84, 86, 119, 124, 129, 173], "dwt": 125, "dx": [18, 44, 122, 123, 147], "dynam": [0, 4, 13, 58, 170, 209], "e": [0, 2, 6, 8, 11, 12, 16, 17, 22, 25, 29, 30, 31, 35, 36, 37, 38, 39, 50, 51, 53, 56, 59, 60, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 79, 80, 82, 83, 84, 86, 87, 93, 95, 96, 97, 98, 99, 103, 107, 110, 111, 113, 114, 122, 123, 125, 126, 128, 129, 131, 132, 133, 134, 135, 137, 146, 149, 150, 162, 163, 164, 165, 168, 173, 174, 178, 181, 182, 187, 190, 197, 200, 212, 215, 219, 220, 221, 224, 225, 231, 234, 235, 236, 237, 239, 248], "each": [0, 4, 9, 21, 29, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 56, 58, 64, 67, 72, 82, 89, 90, 102, 108, 116, 117, 118, 119, 120, 121, 125, 126, 129, 130, 132, 133, 139, 150, 159, 174, 179, 182, 196, 197, 199, 200, 203, 210, 222, 235, 236, 237, 238, 244, 246], "earli": [7, 26, 108, 130], "early_stop": [0, 5, 11, 18, 19, 24, 25, 26, 27, 129, 133], "easi": [29, 62], "easili": [2, 14, 31, 32, 46, 49, 50, 52, 61, 72], "edg": 203, "edongdongchen": 112, "edu": 67, "effect": [4, 31, 35, 111, 132, 141, 225, 227, 232], "effic": 5, "effici": [29, 51, 58, 84, 86, 119, 164, 166, 170, 174, 179, 185, 187], "effort": 7, "egg": [16, 62], "ei": [35, 36, 73, 112], "eigenvalu": 75, "eigenvector": 158, "eiloss": [35, 36], "either": [21, 51, 54, 56, 60, 67, 72, 109, 113, 119, 121, 125, 126, 127, 129, 149, 150, 170, 176, 196, 197, 199, 200, 203, 204, 205, 235, 236, 237, 244, 246, 248], "el": [9, 43, 46], "elaps": [12, 29, 30, 33], "element": [11, 17, 43, 47, 51, 55, 78, 101, 125, 164, 172, 177, 183, 210, 238], "elementwis": [39, 89, 90, 173], "ell": 17, "ell_0": [125, 126], "ell_1": [56, 73, 79, 80, 82, 86, 87, 122, 125, 126, 135, 136], "ell_2": [32, 46, 56, 91, 130, 132, 134, 135, 137, 174], "ell_p": 78, "els": [0, 2, 5, 6, 7, 8, 9, 10, 11, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 64, 129, 134, 215, 217, 234], "elu": [107, 114], "em": 159, "email": 49, "embed": [109, 121], "embed_dim": 121, "emiss": 0, "emission_wavelength": 207, "empti": [173, 208, 213], "en": [4, 85, 160, 207], "enabl": [5, 32, 58, 119, 234, 235], "enable_grad": 32, "encapsul": 224, "encod": [0, 107, 119, 182], "encompass": [235, 237], "encount": 124, "end": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 52, 56, 60, 64, 111, 118, 129, 132, 134, 149, 151, 152, 153, 154, 155, 156, 157, 158, 174, 179, 191, 192, 193, 216, 217, 234, 235], "enforc": [52, 55, 56, 79, 115, 129], "enhanc": 112, "enough": 56, "ensur": [4, 5, 6, 7, 11, 13, 14, 17, 18, 19, 24, 25, 26, 27, 33, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 51, 159, 209], "entri": [29, 56, 88, 89, 90, 128, 159, 164, 173, 174, 179, 185, 221], "enumer": 64, "envelop": [59, 146, 156], "ep": [31, 103, 160], "epll": [16, 23, 51, 63, 159, 166, 168, 171, 173, 174, 179, 239, 242, 244], "epll_batch_s": 22, "epll_dataload": 22, "epll_max_it": 22, "epll_num_compon": 22, "epll_prior": 22, "epoch": [2, 14, 22, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 64, 223, 224], "eps_anderson_acc": [129, 133], "eps_anderson_acc_backward": 234, "epsilon": [0, 18, 19, 21, 29, 32, 89, 122, 128, 171, 180, 188, 189], "epsilon_adjoint": 122, "epub": 110, "eq": [22, 52, 56, 113, 129], "equal": [84, 93, 125, 146, 172, 173, 177, 185, 187, 190, 208, 209, 246], "equat": [0, 17, 18, 19, 22, 31, 32, 43, 46, 52, 56, 60, 129, 149, 151, 152, 153, 154, 155, 156, 157, 158, 191, 192, 193, 216, 217, 234], "equilibrium": [16, 48, 62, 63, 64, 68, 72, 77, 87, 110, 131, 137, 142, 144, 163, 166, 171, 174, 179, 193, 234, 236, 240], "equispac": [22, 208], "equispacedmaskgener": 13, "equival": [10, 32, 84], "equivari": [16, 40, 53, 63, 64, 68, 71, 72, 73, 77, 79, 110, 113, 124, 131, 137, 142, 144, 166, 173, 174, 176, 179, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 240, 242, 244], "equivariantdenois": 51, "error": [14, 30, 31, 33, 39, 43, 46, 64, 73, 78, 79, 80, 82, 86, 87, 144, 187, 223], "escand": 206, "especi": 53, "esrgan": 112, "est": [0, 9, 25, 26, 27, 45, 46, 129, 133, 139, 151, 152, 153, 154, 155], "estim": [2, 11, 21, 22, 25, 31, 32, 39, 51, 52, 56, 81, 83, 88, 89, 90, 100, 109, 111, 128, 132, 139, 143, 151, 152, 153, 154, 155, 159, 166, 172, 174, 217, 219, 221, 222, 239], "estimt": 21, "et": [0, 2, 5, 7, 18, 19, 24, 26, 31, 32, 35, 51, 57, 95, 96, 97, 98, 99, 102, 103, 105, 106, 108, 109, 110, 112, 118, 122, 124, 209, 225, 232], "eta": [29, 32, 33, 119, 129, 174, 179, 215, 216, 220, 221], "eta_0": 29, "eta_backtrack": 129, "etab": [30, 215], "etc": [2, 10, 12, 29, 56, 58, 59, 60, 61, 62, 72, 73, 93, 133, 222, 238], "euclidean": [35, 225], "eugenesiow": 71, "eval": [2, 14, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 64], "eval_dataload": [2, 14, 35, 37, 38, 39, 42, 43, 44, 45, 47, 64, 223, 224], "eval_interv": [64, 224], "eval_metr": 64, "eval_mod": [74, 75], "eval_psnr": 224, "evalu": [2, 12, 22, 30, 32, 42, 43, 44, 53, 58, 60, 64, 71, 75, 81, 86, 123, 133, 140, 141, 159, 174, 179, 209, 213, 222, 223, 224], "even": [8, 32, 119], "evenli": 72, "eventu": [2, 31], "everi": [11, 32, 64, 78, 101, 104, 106, 108, 115, 116, 117, 120, 194, 195, 224], "evid": 29, "evlauaton": 133, "exact": [2, 51, 164, 174, 177, 187], "exactli": 159, "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 56, 58, 60, 62, 63, 65, 66, 67, 70, 75, 84, 86, 111, 133, 170, 188, 190, 214, 248], "except": 203, "exdb": [39, 43], "execut": [1, 3, 15, 20, 23, 28, 34, 40, 41, 48, 63], "exist": [10, 58, 60, 65, 66, 70, 71, 164, 173, 174, 178, 179, 183, 185, 187], "exp": [11, 138, 172, 175, 193, 211], "expand": 4, "expans": [33, 206], "expect": [16, 22, 23, 63, 66, 111, 119, 132, 159, 166, 168, 171, 173, 174, 179, 209, 239, 242, 244], "experi": [0, 7, 35, 108], "explain": [7, 62, 248], "explicit": [13, 15, 16, 26, 44, 58, 62, 63, 68, 72, 129, 131, 137, 144, 150, 163, 166, 171, 174, 179, 193, 220, 222, 240], "explicit_prior": [5, 26, 144], "explicitli": 22, "exploit": [11, 12, 29, 38, 39], "explor": 4, "export": 22, "express": 166, "ext": 50, "extend": [0, 2, 17, 21, 45, 54], "extens": 248, "extra": [58, 84, 174], "extract": [2, 11, 21, 22, 35, 39, 43, 111, 132, 246], "extract_loc": [0, 246], "extract_s": [0, 246], "ey": 176, "f": [0, 4, 7, 8, 10, 11, 12, 18, 19, 22, 25, 27, 29, 30, 31, 33, 50, 52, 56, 60, 64, 74, 75, 89, 115, 122, 128, 129, 131, 133, 135, 137, 139, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 166, 170, 174, 176, 182, 217, 219, 235, 236, 237], "f_": [7, 14], "f_0": 129, "f_fn": [25, 129, 139, 150, 236, 237], "f_k": 133, "f_matern": 211, "f_step": [25, 45], "f_x": 211, "f_y": 211, "face": 32, "facebookresearch": 208, "factor": [0, 10, 13, 21, 26, 43, 44, 47, 84, 121, 134, 137, 169, 174, 177, 191, 192, 218, 225, 227], "factori": 224, "fail": [39, 43, 124], "faint": 0, "faintest": 0, "fake": [92, 93, 94, 118], "fake_label": 93, "fals": [0, 2, 4, 5, 6, 9, 11, 13, 14, 17, 19, 21, 22, 24, 25, 26, 27, 31, 32, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 56, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 78, 83, 85, 93, 100, 103, 107, 108, 109, 110, 113, 114, 118, 119, 120, 121, 122, 123, 124, 129, 133, 139, 140, 141, 149, 150, 151, 152, 153, 159, 164, 181, 182, 183, 185, 187, 194, 195, 203, 215, 216, 217, 218, 219, 220, 221, 222, 224, 234, 235, 236, 237, 238, 239, 241, 242, 244, 246, 248], "famili": 4, "familiar": 49, "fan": [187, 195], "fan_beam": [187, 195], "fan_paramet": [187, 195], "fashion": [46, 60, 61, 164, 173, 178, 183, 185, 238], "fast": [13, 43, 44, 101, 123, 154, 163, 164, 170, 173, 176, 185, 228], "fasten": [5, 6, 14, 24, 25, 26, 27, 36, 38, 39, 42, 43, 44, 46, 47], "faster": [0, 4, 18, 19, 36, 49, 67, 187, 194, 195], "fastmri": [36, 67, 208], "fastmri_knee_singlecoil": 36, "fbp": 22, "fbpconvnet": 100, "fc": [4, 207], "featur": [101, 116, 117], "feed": 103, "feedforward": 119, "fenchel": [25, 152], "fetch": [5, 6, 18, 19, 24, 25, 27], "few": [14, 22, 46, 174], "ffhq": [32, 51, 109], "ffn_expansion_factor": 119, "fft": [0, 4, 58, 163, 182, 197, 200], "fidel": [0, 5, 9, 11, 18, 19, 24, 25, 26, 27, 36, 42, 43, 44, 46, 47, 52, 55, 60, 111, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 150, 152, 216, 217, 235, 236, 237], "field": [67, 122, 123], "fifa": [7, 29, 30, 33], "fig": 244, "figsiz": [17, 31, 244], "figur": [8, 31, 119, 244, 246], "file": [1, 3, 15, 20, 23, 28, 34, 40, 41, 48, 49, 50, 56, 63, 64, 65, 66, 67, 68, 70, 71, 111, 119, 132, 140, 164, 173, 178, 183, 185, 241, 242, 248], "file1000005": 67, "file_nam": [9, 36, 37, 38, 39], "file_typ": 0, "filenam": [72, 246, 248], "fill": [10, 243, 249, 250, 251], "filter": [4, 5, 7, 10, 13, 18, 22, 24, 26, 29, 31, 42, 45, 47, 52, 58, 102, 115, 162, 163, 169, 174, 177, 184, 186, 187, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 210, 211, 212], "filter_0": 4, "filter_90": 4, "filter_rgb": 4, "filter_torch": 5, "final": [4, 11, 22, 57, 107, 109, 110, 114, 120, 121], "find": [45, 103, 109, 158, 179, 184, 217, 234], "find_nearest": [31, 109, 217], "find_spec": 9, "fine": 22, "finish": [26, 29, 30, 33, 139], "finit": [44, 122, 123, 147], "firm": [51, 74], "firmli": 33, "first": [0, 2, 4, 8, 10, 11, 13, 17, 18, 19, 24, 26, 31, 32, 44, 45, 56, 57, 91, 111, 119, 129, 131, 132, 139, 159, 170, 176, 177, 184, 185, 190, 222, 226, 228, 244], "firstli": 31, "fista": [0, 154], "fit": [22, 61, 103, 159], "fix": [9, 24, 36, 42, 43, 44, 46, 47, 56, 60, 129, 133, 139, 170, 174, 176, 179, 208, 209, 213, 225, 234], "fixedpoint": [56, 60, 129, 139, 234], "flatten": [17, 30, 33, 56, 125, 126, 140, 149, 238], "flatten_coeff": 125, "flavour": [53, 93], "fledg": 30, "flexibl": 64, "flip": [51, 113, 164], "float": [0, 9, 13, 43, 44, 46, 56, 64, 67, 73, 74, 75, 80, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 107, 108, 110, 111, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 146, 147, 148, 149, 150, 159, 160, 161, 163, 164, 166, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 184, 188, 189, 193, 194, 195, 202, 203, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 246], "float16": 109, "float32": [4, 22, 31, 32, 109, 164, 185, 187, 190, 194, 195, 207, 211, 212, 241, 242], "float64": [129, 133], "flow": [22, 140], "fly": [4, 45, 170, 176], "fname": 67, "fne": 74, "fnejacobianspectralnorm": 33, "focuss": 67, "folder": [24, 26, 42, 43, 44, 50, 65, 66, 68, 70, 71, 72], "follow": [0, 2, 4, 5, 17, 18, 19, 22, 24, 25, 27, 29, 31, 32, 33, 43, 45, 46, 49, 51, 52, 53, 55, 56, 58, 60, 62, 64, 65, 66, 67, 70, 71, 77, 88, 89, 90, 93, 97, 125, 129, 149, 165, 206, 207, 216, 217, 221, 235], "font": 31, "fontsiz": [17, 244], "forbidden": [39, 43], "forc": 52, "forget": 144, "fork": 49, "form": [12, 14, 17, 30, 35, 44, 49, 52, 56, 58, 60, 125, 126, 129, 133, 134, 135, 138, 139, 163, 164, 174, 179, 187, 235], "formal": 17, "format": [0, 17, 21, 22, 50, 64, 72, 125], "former": [32, 54, 78, 101, 104, 106, 115, 116, 117, 120, 194, 195], "formul": 53, "formula": [32, 33, 59, 92, 94, 131, 144, 146, 164, 169, 174, 179, 187], "forw": [2, 52, 55, 58, 73, 79, 80, 97, 131, 134, 135, 137, 178, 179], "forward": [2, 4, 5, 6, 15, 16, 32, 36, 42, 43, 44, 45, 50, 51, 53, 54, 56, 59, 60, 62, 63, 64, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 135, 139, 140, 144, 151, 152, 153, 154, 155, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 206, 208, 209, 212, 213, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 240, 242, 244], "forward_denois": 109, "forward_diffus": 109, "forward_restorm": 119, "found": [13, 30, 58, 126], "four": 11, "fourier": [0, 5, 13, 58, 170, 176, 182], "frac": [0, 5, 17, 18, 19, 29, 31, 32, 33, 39, 43, 44, 52, 59, 60, 74, 75, 83, 84, 86, 88, 89, 90, 113, 122, 123, 128, 129, 131, 134, 135, 137, 146, 148, 164, 166, 174, 175, 179, 180, 181, 183, 187, 193, 211, 216, 217, 220, 221, 234, 239], "fraction": [67, 228, 246], "frame": 248, "framework": [11, 35, 53, 62, 224, 225, 230, 231, 232, 233], "fraunhoff": 207, "free": [35, 119, 124, 240], "freeli": 32, "freia": 140, "freq": 208, "freq_plot": [64, 224], "frequenc": [0, 4, 25, 64, 207, 208, 209, 213], "fresnel": [4, 207], "frobeniu": 122, "from": [0, 1, 2, 3, 4, 5, 6, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 79, 80, 82, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 132, 139, 140, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 194, 195, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 224, 225, 230, 231, 232, 233, 234, 240, 241, 242, 244, 246, 248], "from_numpi": [0, 17, 31, 32], "front": [131, 134, 144], "fstep": [45, 56], "fstepcv": 25, "fsteppdnet": 45, "full": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 62, 73, 80, 225], "fulli": [30, 36, 37, 38, 39, 101, 124], "funcanim": 248, "function": [0, 2, 4, 5, 6, 7, 8, 11, 12, 13, 14, 18, 19, 22, 24, 25, 26, 31, 32, 35, 37, 42, 43, 44, 45, 46, 47, 51, 52, 53, 55, 56, 60, 61, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 77, 78, 80, 82, 84, 86, 92, 93, 94, 101, 103, 104, 106, 108, 109, 110, 115, 116, 117, 120, 123, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 149, 150, 151, 152, 153, 158, 159, 160, 161, 162, 164, 166, 174, 179, 184, 187, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 218, 219, 220, 221, 222, 223, 224, 234, 236, 237, 248], "function_handl": [219, 220, 221], "further": [2, 11], "furthermor": 102, "futur": [49, 223], "fx_t": 170, "g": [0, 2, 5, 6, 8, 16, 17, 18, 19, 22, 25, 26, 29, 32, 37, 43, 44, 50, 51, 52, 53, 56, 60, 64, 65, 66, 67, 70, 71, 72, 73, 79, 80, 82, 83, 86, 87, 93, 103, 111, 113, 122, 123, 129, 132, 133, 136, 139, 141, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163, 168, 181, 182, 187, 190, 193, 212, 216, 218, 224, 235, 236, 237, 239, 248], "g1": 210, "g2": 210, "g_": [17, 43], "g_first": [5, 9, 26, 44, 46, 56, 139, 150, 151, 152, 153, 235, 236, 237], "g_i": [37, 80], "g_param": [9, 11, 24, 25, 26, 27, 29, 36, 42, 44, 46, 47, 52, 56, 60, 133, 150, 235, 237], "g_statist": [218, 219, 220, 221], "g_step": [25, 45], "gain": [13, 39, 89, 90, 143, 180, 181], "galleri": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 63, 244], "game": [2, 53], "gamma": [2, 18, 19, 25, 31, 38, 39, 43, 44, 52, 56, 82, 89, 90, 123, 125, 129, 131, 134, 135, 136, 137, 142, 143, 144, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 166, 169, 174, 180, 181, 235], "gamma_backtrack": 129, "gan": [53, 92, 93, 94, 95, 96, 224], "gaussian": [0, 5, 6, 7, 8, 10, 11, 13, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 39, 42, 43, 44, 47, 55, 58, 59, 84, 88, 89, 111, 132, 137, 146, 159, 164, 168, 169, 171, 174, 177, 180, 183, 184, 188, 193, 209, 211, 214, 217, 221, 250], "gaussian_blur": [4, 5, 13, 42, 58], "gaussian_filt": [162, 163], "gaussianmaskgener": 13, "gaussianmixturemodel": [111, 132], "gaussiannois": [5, 6, 7, 11, 12, 13, 17, 18, 19, 21, 24, 25, 26, 27, 29, 30, 31, 33, 42, 45, 47, 50, 52, 58, 84, 168, 177, 215, 217], "gb": 109, "gd": [11, 42, 150, 155, 234, 235, 237], "gdfn": 119, "gener": [0, 9, 13, 16, 17, 21, 22, 25, 26, 27, 32, 35, 45, 49, 50, 51, 53, 60, 64, 72, 73, 80, 86, 93, 94, 95, 96, 97, 98, 99, 103, 105, 106, 108, 111, 112, 122, 132, 134, 135, 139, 140, 152, 164, 174, 179, 183, 186, 190, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233], "generalis": 122, "generate_coeff": 207, "generate_dataset": [2, 5, 6, 14, 24, 26, 36, 37, 38, 39, 42, 43, 44, 46, 47, 50], "generated_dataset_path": 50, "generated_datasets_path": [42, 43, 44, 47], "generatorloss": [96, 97, 99], "generatormixtur": [4, 58, 212], "geometr": [35, 113, 225, 230, 231, 233], "geometri": [35, 187, 195], "geq": [0, 84, 86, 88, 109, 143, 219, 220, 221], "get": [2, 8, 31, 32, 36, 37, 38, 39, 43, 44, 49, 64, 109, 129, 159, 216, 217], "get_alpha": 31, "get_alpha_beta": 217, "get_alpha_prod": [109, 217], "get_beta": 32, "get_chain": 219, "get_cov": 159, "get_cov_inv_reg": 159, "get_degradation_url": 0, "get_dpir_param": 24, "get_freer_gpu": [2, 5, 6, 7, 8, 9, 10, 11, 13, 14, 17, 18, 19, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 215, 217], "get_gspnp_param": 26, "get_image_dataset_url": 0, "get_image_url": [4, 11, 13, 21, 25, 27, 31, 32, 35], "get_model": 2, "get_noise_schedul": 217, "get_output": [26, 45, 129], "get_pdf": [209, 213], "get_sampl": 64, "get_samples_offlin": 64, "get_samples_onlin": 64, "get_weight": 159, "get_weights_url": [2, 9, 35, 36, 37, 38, 39], "gfz": [0, 182], "gif": 248, "git": [16, 62], "github": [16, 24, 45, 49, 51, 62, 70, 82, 109, 112, 121, 122, 123, 208], "give": [30, 70, 71, 225], "given": [2, 5, 11, 17, 21, 22, 31, 59, 64, 67, 74, 75, 129, 133, 141, 146, 152, 153, 154, 155, 156, 157, 158, 170, 173, 174, 184, 187, 195, 207, 208, 210, 213, 238], "global": [4, 5, 6, 7, 11, 13, 14, 17, 18, 19, 24, 25, 26, 27, 33, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47], "gmm": [21, 22, 111, 132, 159], "gmm_bsds_color2": 21, "gmm_lodopab_smal": [111, 132], "gmm_lodopab_small2": 22, "go": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 67], "goal": [18, 19], "good": [7, 11, 14, 46, 119, 187], "googl": [16, 22], "gov": 86, "gp": 211, "gpu": [5, 6, 14, 24, 25, 26, 27, 36, 37, 38, 39, 42, 43, 44, 46, 47, 72, 100, 107, 110, 114, 119, 120, 125, 126, 159, 170, 173, 176, 184, 187, 194, 195, 215, 222, 240, 241, 242], "gpu_numb": 54, "grad": [0, 11, 29, 32, 56, 131, 137, 144, 145, 146, 148], "grad_clip": [64, 224], "grad_d": [128, 131, 135, 137, 143], "grad_f": 161, "grad_fn": 165, "grad_ll": 32, "gradient": [5, 18, 19, 22, 25, 26, 27, 32, 33, 38, 45, 51, 52, 56, 60, 64, 73, 82, 103, 114, 122, 123, 128, 131, 133, 135, 137, 143, 144, 145, 148, 150, 155, 157, 160, 161, 164, 169, 174, 179, 187, 216, 224, 234, 235, 236, 237], "gradientstep": 26, "grai": [5, 6, 11, 13, 14, 18, 19, 24, 25, 26, 27, 42, 45, 46, 47, 111, 132, 215, 217, 244, 246], "grayscal": [4, 10, 11, 12, 13, 21, 25, 27, 51, 52, 58, 165, 177, 241, 242], "great": 2, "grid": [0, 21, 22, 58, 64, 182, 184, 227, 244], "grid_siz": 0, "ground": [2, 7, 14, 18, 19, 21, 22, 25, 27, 29, 30, 31, 32, 33, 35, 43, 44, 46, 53, 64, 67, 87, 95, 96, 129, 133, 222, 224, 234], "groundtruth": [17, 32], "group": [35, 36, 51, 53, 73, 113, 229], "grow": 17, "gsdrunet": [26, 51], "gsdrunet_torch": 26, "gspnp": 26, "gstep": [45, 56], "gstepcv": 25, "gsteppdnet": 45, "gt": [0, 2, 18, 19, 25, 27, 43, 44], "gu": [24, 130], "guess": [0, 11, 56, 103, 179, 216, 217], "gz": [39, 43, 71], "h": [0, 8, 13, 17, 22, 44, 53, 83, 108, 119, 121, 133, 141, 162, 163, 164, 169, 170, 173, 176, 182, 183, 184, 185, 186, 190, 196, 197, 199, 200, 206, 207, 208, 209, 213, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 244, 248], "h5": [24, 26, 50, 67], "h5py": 67, "h_k": [186, 206], "ha": [0, 2, 5, 6, 7, 8, 10, 12, 14, 24, 26, 30, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 65, 66, 67, 70, 71, 82, 107, 125, 129, 131, 133, 144, 160, 162, 163, 164, 169, 170, 173, 176, 177, 185, 186, 187, 191, 192, 196, 199, 200, 206, 215, 216, 244, 246], "haar": 17, "hadamard": [13, 25, 185, 186, 206], "hal": 152, "half": [21, 22, 24, 36, 42, 111, 130, 132, 150, 156, 203, 217, 235, 236, 237], "handl": [109, 182, 215, 216], "hard": [125, 126], "hard_threshold_topk": 125, "has_cost": [25, 129, 139], "hat": [2, 32, 37, 73, 80, 84, 86, 91, 95, 96, 97, 98, 99], "hauptmann": 45, "have": [0, 5, 7, 8, 11, 16, 21, 27, 30, 31, 32, 35, 37, 51, 58, 62, 64, 65, 66, 70, 71, 75, 83, 103, 109, 119, 131, 170, 174, 176, 179, 182, 184, 185, 190, 215, 224, 235, 239, 248], "haze": 58, "hazi": 172, "hd5": 72, "hd5dataset": 72, "hdf5": [24, 26, 42, 43, 44, 50, 67, 68], "hdf5dataset": [2, 5, 6, 14, 24, 26, 36, 37, 38, 39, 42, 43, 44, 46, 47, 50], "head": [119, 121], "head_dim": 121, "height": [17, 67, 69, 109, 116, 117, 132, 170, 176, 187, 228, 244], "help": [0, 33, 49], "helper": [42, 47, 150, 196, 197, 198, 199, 200, 201, 236, 237], "here": [0, 4, 5, 6, 7, 9, 10, 12, 13, 16, 21, 22, 25, 29, 30, 31, 32, 33, 36, 37, 42, 43, 46, 47, 50, 56, 126, 175, 178], "hereaft": 32, "hessian": 122, "hf": 65, "hidden": [22, 51, 105, 106, 109, 118, 121, 140], "high": [0, 2, 10, 13, 51, 70, 71, 119, 177, 208, 209, 213], "higher": [0, 11, 207], "highest": 0, "highli": [43, 44], "histogram": [184, 203], "histogramdd": 202, "histori": [42, 64, 129, 133, 234], "history_s": [42, 129, 133], "history_size_backward": [42, 234], "ho": [31, 51, 109], "hold": 129, "home": [0, 2, 8, 9, 11, 13, 21, 22, 24, 25, 26, 31, 32, 33, 35, 36, 37, 38, 39, 43, 46], "homographi": [35, 230, 231, 232, 233], "hook": [78, 101, 104, 106, 115, 116, 117, 120, 194, 195], "horizont": [51, 66, 91, 113, 246], "host": 51, "hostedtoolcach": [4, 224], "how": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 17, 18, 19, 21, 24, 25, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 44, 47, 58, 103, 105, 106, 112, 118, 129, 130, 133, 186, 248], "howev": [7, 17, 36, 45, 51, 54, 58, 73, 79, 80, 82, 86, 87, 108, 177], "hp": 133, "hq": [24, 36, 42, 56, 130, 150, 156, 217, 234, 235, 236, 237], "hspace": 133, "html": [49, 105, 106, 122, 123, 244, 248], "http": [2, 4, 7, 9, 11, 16, 17, 21, 22, 24, 25, 26, 29, 30, 32, 33, 35, 36, 37, 38, 39, 43, 45, 52, 62, 64, 65, 67, 70, 71, 73, 74, 75, 78, 80, 82, 84, 85, 86, 88, 89, 90, 93, 100, 105, 106, 109, 110, 112, 113, 116, 117, 121, 122, 123, 152, 160, 164, 169, 172, 184, 187, 195, 207, 208, 211, 215, 216, 217, 220, 221, 225, 232, 244, 248], "hub": [2, 9, 11, 21, 22, 24, 25, 26, 32, 33, 35, 36, 37, 38, 39, 119], "hugginfacehub": 51, "huggingfac": [2, 9, 11, 17, 21, 22, 25, 26, 32, 33, 35, 36, 37, 38, 39, 51, 52, 65, 71, 119], "human": 32, "hurault": [26, 62], "hyperparamet": [21, 29, 32, 33, 43, 44, 55, 56, 88, 125, 126, 130, 166, 174, 215, 216, 217], "i": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 97, 100, 102, 103, 104, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 232, 234, 235, 239, 241, 242, 244, 246, 248], "ib": [6, 14, 18, 24, 36, 46, 47], "iccv": 132, "id": [17, 22, 74], "idea": [49, 57], "ideal": 93, "ident": [13, 21, 25, 74, 129, 133, 158, 166, 168, 174, 179, 219, 220, 221], "identif": 58, "identifi": 67, "idx": 31, "idx1": [39, 43], "idx3": [39, 43], "ie": [58, 210], "ieee": [24, 45, 78, 84, 88, 89, 90, 102, 123, 130, 172, 184], "ieeexplor": [78, 84, 88, 89, 90, 172, 184], "ignor": [0, 4, 6, 51, 78, 101, 104, 106, 115, 116, 117, 120, 194, 195, 208, 209, 213], "ii": 0, "iid": [164, 185], "illustr": [4, 56], "ilvr_adm": 109, "im": [0, 32], "im_siz": 0, "im_width": 187, "imag": [1, 3, 15, 16, 20, 28, 31, 32, 34, 40, 45, 48, 51, 53, 55, 57, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 134, 137, 140, 141, 142, 144, 147, 149, 150, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 190, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 207, 209, 211, 212, 215, 217, 218, 219, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 244, 245, 246, 248], "image_gdth": 0, "image_srf_2": 70, "image_srf_3": 70, "image_srf_4": 70, "imagefold": [2, 6, 35, 50], "imagenet128": [51, 109], "images_contours_and_field": 244, "imaginari": [13, 36, 127, 170, 176], "imbalanc": 224, "img": [0, 11, 18, 19, 22, 25, 27, 29, 30, 31, 32, 33, 69, 112, 244], "img1": 244, "img2": 244, "img3": 244, "img_001": 71, "img_001_srf_2_bicub": 70, "img_014_srf_2_srcnn": 70, "img_100": 71, "img_list": [244, 246], "img_rang": 121, "img_shap": [7, 11, 13, 25, 43, 44, 50, 58, 104, 164, 183, 185], "img_siz": [0, 4, 5, 6, 7, 9, 10, 11, 13, 14, 18, 19, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 42, 43, 44, 45, 46, 47, 52, 121, 163, 167, 169, 170, 174, 176, 177, 182, 186, 208, 209, 213, 241, 242], "img_width": [13, 22, 27, 45, 187], "implement": [0, 2, 4, 12, 13, 16, 17, 25, 34, 35, 43, 44, 45, 53, 56, 58, 62, 63, 105, 106, 109, 110, 112, 118, 121, 123, 130, 131, 133, 137, 139, 143, 144, 152, 159, 163, 166, 171, 173, 174, 179, 182, 186, 202, 203, 204, 205, 208, 213, 215, 216, 217, 240, 242, 244], "implicit": [7, 56, 60, 144, 234], "implicitli": [27, 52, 56, 122, 123], "import": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 56, 58, 60, 65, 66, 67, 70, 71, 75, 84, 86, 96, 97, 99, 129, 131, 133, 137, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 185, 186, 187, 188, 189, 190, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 224, 225, 230, 231, 232, 233, 237, 244, 248], "importlib": 9, "impos": 35, "improv": [7, 11, 45, 100], "impuls": [4, 8, 184, 186], "in_chan": 121, "in_channel": [2, 11, 14, 25, 27, 35, 36, 37, 38, 39, 42, 107, 109, 110, 114, 116, 117, 119, 124, 237], "in_nc": 120, "in_siz": [7, 104, 187, 194, 195], "includ": [21, 35, 52, 58, 59, 64, 67, 72, 84, 86, 110, 159, 178, 203, 225, 230, 231, 233], "incom": [60, 234], "incomplet": [7, 16, 30, 33, 40, 63, 64, 68, 72, 73, 77, 79, 80, 100, 124, 164, 166, 173, 174, 179, 187, 240], "incorpor": [0, 11, 170, 173, 174, 179, 182], "increas": [0, 4, 17, 86, 111, 124, 132], "inde": [27, 174], "independ": [67, 164, 183, 185, 211], "index": [4, 18, 19, 24, 26, 64, 85, 159, 248], "index_select": 32, "indic": [13, 46, 52, 67, 72, 125, 133, 134, 149, 207, 219], "indicatorl2": [9, 46], "individu": [64, 248], "induc": [0, 19], "inf_lr": 103, "inf_max_it": 103, "inf_progress_bar": 103, "inf_tol": [2, 103], "inf_z": [59, 146], "infer": [2, 64, 103, 194, 195, 203], "inferno": 0, "infinit": [60, 234], "inform": [0, 11, 14, 36, 37, 38, 39, 46, 51, 53, 64, 67, 72, 85, 129, 159, 174, 222], "infti": [46, 134, 149], "inherit": [4, 5, 12, 26, 29, 45, 53, 54, 56, 58, 170, 176], "init": [9, 248], "init_anderson_acceler": 133, "init_iterate_fn": [129, 133], "init_metrics_fn": [129, 133], "init_param": [43, 44, 47, 247], "initi": [9, 17, 22, 26, 27, 31, 32, 36, 37, 38, 39, 42, 43, 44, 46, 47, 56, 64, 103, 107, 108, 109, 110, 114, 120, 121, 129, 132, 133, 140, 159, 178, 179, 216, 217, 247], "initialis": [133, 170, 174, 176], "inner": [147, 220], "inner_it": 220, "inpaint": [7, 9, 14, 16, 20, 23, 30, 32, 33, 35, 37, 48, 52, 56, 58, 60, 62, 63, 64, 68, 72, 77, 86, 87, 125, 129, 131, 132, 134, 137, 142, 144, 149, 150, 166, 167, 168, 171, 174, 179, 215, 217, 222, 235, 237, 239, 240, 242, 244, 245], "inplac": 103, "inpu": 64, "input": [2, 5, 7, 8, 13, 17, 18, 19, 24, 25, 26, 27, 31, 32, 45, 47, 51, 52, 56, 58, 64, 67, 74, 75, 77, 81, 84, 86, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 133, 139, 140, 146, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 172, 173, 177, 178, 181, 182, 183, 184, 186, 187, 190, 194, 195, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237], "input_nc": 118, "input_resolut": 120, "input_s": [7, 108, 190], "input_shap": 112, "inscrib": 187, "inset": 246, "inset_loc": [0, 246], "inset_s": [0, 246], "insid": [119, 134, 187, 219], "inspir": [100, 217], "instal": [0, 16, 49, 53, 248], "instanc": [4, 5, 25, 31, 44, 45, 54, 56, 78, 101, 104, 106, 115, 116, 117, 120, 129, 133, 139, 144, 150, 151, 152, 153, 154, 155, 158, 194, 195, 223, 235, 236, 237], "instanci": [65, 66, 67, 70], "instanti": [0, 4, 5, 11, 18, 19, 24, 25, 26, 27, 58, 71, 129, 186, 210], "instead": [0, 2, 17, 32, 45, 54, 74, 78, 100, 101, 104, 106, 115, 116, 117, 120, 123, 156, 162, 194, 195, 202, 203, 223], "instruct": 119, "int": [0, 11, 13, 14, 29, 31, 33, 36, 37, 38, 39, 42, 45, 46, 47, 64, 67, 69, 72, 74, 75, 84, 86, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 135, 140, 141, 144, 147, 149, 150, 159, 160, 161, 164, 169, 174, 177, 179, 182, 183, 184, 185, 187, 191, 192, 194, 195, 202, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 237, 241, 242, 244, 248], "integ": [35, 219, 220, 221, 228], "integr": [58, 66, 187, 206], "intens": [8, 172, 184], "interact": 248, "interest": [0, 25, 31, 129], "interfac": [29, 56], "interferometr": [1, 16, 63, 129, 131, 137, 144, 149, 150, 174, 179, 182, 239, 244, 245, 246], "interferometri": [0, 182], "intermedi": [26, 101, 124], "intern": [4, 8, 26, 131, 144, 159], "internet": [65, 66, 70, 71], "interp_point": [0, 182], "interpol": [0, 4, 13, 26, 32, 58, 74, 182, 187, 225, 227, 230, 231, 232, 233, 244], "interpolation_method": 244, "interpret": [52, 119, 124, 125, 175], "interv": [149, 214, 221], "intial": [11, 27], "intiliaz": 152, "intract": 32, "introduc": [0, 32, 57, 102, 104, 110, 120, 121, 220], "inv": 22, "invari": [35, 73, 134], "invers": [0, 3, 4, 6, 7, 10, 12, 13, 14, 16, 21, 22, 26, 29, 30, 33, 36, 37, 39, 49, 52, 53, 55, 57, 58, 60, 61, 62, 63, 64, 68, 71, 72, 73, 77, 79, 80, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 103, 105, 106, 112, 118, 124, 140, 159, 162, 163, 170, 172, 173, 174, 176, 178, 179, 187, 194, 211, 212, 215, 222, 224, 240, 244, 248], "inversef": [64, 86], "invert": [22, 140, 151, 152, 153], "investig": 0, "involv": [35, 43, 122, 123], "io": [45, 122, 123], "iota_": [46, 134, 149], "ip": [5, 11, 24, 25, 26, 27], "ipynb": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47], "ipython": 248, "iqa": 24, "irf": 8, "irf_sigma": 8, "is_avail": [0, 2, 5, 6, 7, 8, 9, 10, 11, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 215, 217], "is_standard_deblurring_network": 119, "is_standard_denoising_network": 119, "is_standard_deraining_network": 119, "is_valid_fil": 50, "isola": 118, "isomorph": 232, "isotrop": [123, 193, 227], "issu": [29, 49, 62], "item": [0, 22, 56, 64, 84, 86, 185], "iter": [0, 2, 5, 6, 7, 9, 10, 11, 12, 16, 18, 19, 24, 25, 26, 27, 30, 31, 32, 33, 35, 36, 42, 46, 47, 48, 60, 63, 64, 68, 72, 74, 75, 77, 87, 103, 108, 122, 123, 126, 129, 130, 131, 133, 134, 135, 137, 139, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 174, 179, 216, 217, 218, 219, 220, 221, 222, 224, 234, 235, 236, 237, 240, 244, 247], "iterator_param": 219, "ith": [111, 132], "its": [9, 11, 12, 18, 19, 25, 31, 43, 44, 45, 46, 53, 58, 66, 122, 123, 129, 140, 159, 166, 203, 211, 248], "itself": 0, "iwt": 125, "j": [8, 32, 43, 45, 122, 123, 129, 149, 164, 183, 184], "jac_inv": 22, "jacobian": [74, 75, 122, 131, 140, 174, 178, 179], "jacobianspectralnorm": 74, "jbhuang0604": 70, "jin": 57, "jingyunliang": 121, "join": 62, "jointli": [47, 53, 224], "jona": 45, "journal": 206, "jpeg": [4, 25], "jpg": [7, 29, 30, 33, 35], "json": 65, "julian": 62, "jupyt": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47], "just": [0, 4, 22, 168], "jychoi118": 109, "k": [0, 9, 13, 24, 25, 29, 33, 43, 44, 45, 46, 52, 56, 58, 60, 64, 67, 122, 125, 126, 129, 130, 133, 139, 151, 152, 153, 154, 155, 156, 157, 158, 182, 186, 206, 208, 209, 211, 213, 220, 221, 235], "k_adjoint": [9, 45, 46], "k_oversampl": [0, 182], "kaiser": 182, "kargs_model": 74, "kbnufft": 0, "kbnufftadjoint": 0, "keep": [14, 32, 42, 46, 125, 164, 173, 174, 179, 185, 219, 220, 221], "keepdim": 238, "kei": [4, 25, 32, 56, 58, 64, 121, 129, 187, 195, 207, 210, 211, 212, 214, 235, 237], "kept": [123, 125, 126], "kernel": [4, 5, 8, 13, 18, 19, 24, 26, 29, 31, 58, 59, 115, 146, 182, 196, 197, 199, 200, 207, 219], "kernel_index": [18, 19, 24, 26], "kernel_s": [103, 115, 211], "kernel_torch": [18, 19, 24, 26], "kernels_12": 26, "keyword": [74, 133, 202, 223, 235, 248], "kindli": 0, "kl": 22, "knee": 67, "knee_singlecoil": 67, "knowledg": [39, 52], "known": [30, 135, 138], "kornia": [53, 225], "kspace": 67, "kullback": 22, "kunisch": 122, "kupyn": [2, 95, 96, 118], "kutta": 220, "kwarg": [0, 4, 5, 12, 25, 26, 44, 45, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 103, 106, 121, 126, 131, 133, 136, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 202, 208, 209, 210, 212, 213, 214, 222, 223, 226, 227, 228, 229, 234, 235, 236, 237], "kwargs_model": 74, "kx": 152, "l": [2, 4, 17, 22, 24, 37, 53, 64, 84, 86, 95, 96, 97, 98, 99, 107, 114, 115, 122, 123, 130, 211, 220, 221], "l1": [44, 119, 136], "l1prior": 133, "l2": [0, 5, 11, 18, 19, 24, 25, 26, 27, 29, 31, 32, 33, 36, 42, 43, 44, 47, 52, 56, 60, 111, 119, 129, 131, 133, 144, 217, 236, 237], "l2_loss": 32, "l2_prior": 5, "l2prior": 5, "l3": 119, "l4": 119, "label": [2, 6, 22, 39, 43, 50, 52, 56, 92, 93, 94, 109, 129, 246], "label_loc": 246, "lam": 22, "lam_epl": 22, "lam_patchnr": 22, "lamb": [0, 9, 18, 19, 26, 36, 43, 44, 131, 144, 158], "lambd": 56, "lambda": [0, 2, 5, 9, 17, 18, 19, 22, 25, 26, 27, 36, 37, 38, 39, 43, 44, 52, 55, 56, 67, 125, 126, 129, 131, 133, 139, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 166, 174, 179, 190, 212, 217, 218, 219, 220, 221, 235, 236, 237], "lambda_": [17, 31, 43, 217], "lambda_1": 122, "lambda_2": 122, "lambda_i": 17, "langevin": [29, 33, 62, 220, 221], "larg": [0, 2, 11, 12, 58, 62, 108, 109, 111, 122, 132, 149, 164], "large_model": [31, 32, 109], "larger": [35, 42, 47, 72, 109, 164, 174, 175, 187, 212, 220, 221], "largest": [75, 125, 129], "last": [4, 31, 64, 133, 173, 203], "last_batch": 64, "latent": [2, 22, 101, 103, 106], "later": [11, 31, 32], "latest": 62, "latter": [32, 72, 78, 101, 104, 106, 115, 116, 117, 120, 194, 195], "laurent": [122, 123], "law": 164, "layer": [7, 36, 45, 47, 51, 60, 101, 104, 105, 106, 107, 109, 110, 116, 117, 118, 119, 120, 121, 124], "layernorm": [119, 121], "layernorm_typ": 119, "layout": 244, "lcondat": [122, 123], "ldot": [17, 191, 192], "lead": [187, 195, 232], "leakyrelu": [107, 114, 181], "learn": [2, 3, 5, 7, 14, 21, 22, 24, 26, 35, 38, 39, 40, 42, 46, 47, 48, 49, 51, 63, 64, 68, 72, 73, 76, 77, 79, 80, 87, 100, 103, 105, 106, 107, 108, 110, 116, 117, 124, 130, 131, 132, 137, 139, 142, 144, 149, 152, 157, 164, 166, 171, 173, 174, 176, 179, 187, 224, 226, 227, 229, 235, 237, 240, 244, 247], "learnabl": [43, 44, 46, 60, 121, 124, 235], "learning_r": [7, 14, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 108], "least": [14, 46, 56, 64, 93], "leclair": 26, "lecun": [39, 43], "left": [2, 29, 31, 33, 37, 39, 43, 56, 59, 60, 88, 89, 90, 95, 96, 97, 98, 99, 131, 134, 146, 149, 164, 174, 179, 183, 193, 211, 217, 221, 234, 246], "leftarrow": 129, "legendr": [25, 152], "leibler": 22, "len": [0, 4, 17, 31, 65, 66, 70, 71, 207], "lenght": 47, "length": [4, 8, 9, 36, 43, 44, 45, 46, 47, 103, 129, 211, 244, 246, 248], "leq": [31, 134, 152, 154, 157, 158, 191, 192], "let": [4, 17, 31, 32, 113], "level": [0, 7, 8, 9, 13, 17, 19, 21, 25, 27, 29, 30, 31, 32, 33, 43, 46, 47, 51, 56, 59, 102, 107, 109, 110, 113, 119, 121, 124, 125, 126, 130, 137, 142, 143, 146, 149, 171, 175, 179, 181, 184, 189, 212, 214, 215, 216, 217, 220, 221], "leverag": [59, 60, 75, 166, 170, 234], "levin": [5, 18, 19, 24, 26], "levin09": [18, 19, 24], "lhood": 29, "lib": [4, 224], "librari": [2, 31, 42, 44, 45, 49, 51, 57, 64, 102, 140, 222, 223], "lidar": [15, 16, 63, 179, 184, 240], "light": [58, 172], "like": [0, 107, 122, 159], "likelihood": [16, 22, 23, 29, 32, 55, 59, 63, 111, 132, 137, 138, 140, 141, 143, 159, 166, 168, 171, 173, 174, 179, 219, 220, 221, 239, 242, 244], "limit": [16, 17, 21, 23, 35, 51, 63, 64, 69, 111, 119, 131, 132, 138, 140, 141, 144, 166, 168, 174, 175, 179, 187, 189, 207, 239, 244], "linalg": 17, "line": [10, 16, 52, 58, 173, 187, 208, 209, 213], "linear": [0, 7, 10, 13, 14, 18, 19, 22, 25, 27, 29, 30, 31, 32, 33, 43, 44, 46, 91, 100, 111, 122, 123, 128, 131, 132, 133, 147, 158, 160, 164, 166, 168, 170, 172, 173, 174, 176, 177, 178, 179, 185, 187, 190, 222], "linear_std_psnr": 222, "linearli": 244, "linearphys": [0, 10, 12, 58, 111, 129, 131, 132, 133, 162, 164, 166, 169, 173, 177, 178, 182, 186, 187, 216, 217, 224], "linefmt": 8, "linewidth": 0, "link": [7, 16, 31, 55, 109, 219, 220, 221], "linspac": [22, 30, 31, 32, 187, 215], "lionel": [7, 29, 30, 33], "lip": [154, 157, 158], "lipschitz": [25, 51, 53, 122, 123, 143, 174, 220, 221], "lipschitzian": [122, 123], "list": [9, 10, 13, 31, 32, 37, 43, 44, 46, 47, 54, 56, 61, 62, 64, 72, 80, 107, 108, 111, 114, 119, 120, 125, 126, 129, 132, 149, 150, 164, 172, 177, 178, 179, 187, 203, 207, 210, 215, 222, 223, 224, 227, 235, 236, 237, 238, 244, 246, 248], "list_imag": 17, "list_param": [4, 207], "list_prox": 17, "list_wv": [17, 126], "lista": [16, 44, 46, 48, 63, 64, 68, 72, 77, 87, 131, 137, 144, 149, 157, 164, 174, 179, 235, 237, 240, 244, 247], "listtensor": 172, "live": [27, 187, 248], "ll": [0, 17, 32], "load": [0, 2, 15, 16, 31, 50, 52, 58, 63, 64, 65, 66, 67, 70, 71, 72, 119, 125, 131, 134, 142, 144, 164, 166, 173, 174, 178, 179, 183, 185, 235, 237, 240, 241, 242], "load_dataset": [5, 6, 14, 18, 19, 24, 26, 36, 42, 46, 47], "load_degrad": [18, 19, 24, 26, 36], "load_metadata_from_cach": 67, "load_np_url": [0, 17], "load_state_dict": [2, 9, 35, 36, 37, 38, 39, 46, 159, 164, 173, 178, 183, 185], "load_state_dict_from_url": [2, 9, 35, 36, 37, 38, 39], "load_torch_url": 22, "load_url_imag": [4, 7, 11, 13, 21, 25, 27, 29, 30, 31, 32, 33, 35, 52], "loader": [43, 44, 50, 64, 222, 223], "loc": [9, 36, 37, 38, 39, 246], "local": [7, 38, 49, 50, 119], "locat": [0, 8, 170, 176, 182, 246], "lodopab": [22, 175], "log": [0, 5, 11, 16, 18, 19, 22, 23, 27, 29, 32, 33, 42, 43, 44, 45, 47, 51, 59, 63, 64, 111, 132, 137, 138, 140, 141, 143, 146, 159, 164, 166, 168, 171, 173, 174, 175, 179, 185, 216, 219, 220, 221, 224, 239, 242, 244], "log10": 0, "log_": [83, 239], "log_metrics_wandb": 64, "logan": 11, "logarithm": 0, "logpoisson": 175, "logpoissonlikelihood": 22, "logpoissonnois": [22, 138], "logs_total_loss_ev": [22, 64], "logs_total_loss_train": [22, 64], "logscal": 0, "long": [6, 32, 64], "look": 60, "loop": [54, 64, 133], "loss": [2, 7, 11, 14, 16, 22, 24, 33, 35, 36, 37, 40, 42, 43, 44, 45, 46, 47, 51, 62, 63, 64, 68, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 108, 124, 128, 131, 137, 166, 168, 174, 179, 181, 222, 223, 224, 240], "loss_d": 2, "loss_g": 2, "loss_hist": 11, "loss_tot": [22, 64], "losses_d": [2, 224], "lossi": [2, 98, 99, 103], "low": [0, 10, 13, 25, 59, 146, 169, 175, 177, 202, 203, 208, 209, 213], "lower": [175, 190, 202, 203], "lpip": 24, "lpips_v0": 24, "lprior": 29, "lr": [2, 7, 14, 22, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 119], "lr_d": 2, "lr_g": 2, "lr_schedul": [2, 14, 36, 37, 38, 39, 42, 45, 46, 47, 64, 224], "lr_variational_problem": 22, "lsgan": [53, 93], "lvert": [2, 97], "m": [0, 11, 13, 25, 39, 43, 44, 49, 50, 55, 58, 86, 88, 89, 90, 123, 128, 158, 164, 166, 173, 174, 179, 182, 183, 185, 220], "m_1": 86, "m_2": 86, "machin": 49, "made": [50, 67], "magnet": [170, 176], "magnitud": 244, "mai": [2, 7, 8, 11, 56, 108, 124, 129, 139, 181], "main": [2, 9, 11, 12, 17, 21, 22, 25, 26, 32, 33, 35, 36, 37, 38, 39, 49, 52, 71, 112], "maintain": 159, "make": [11, 33, 49, 51, 64, 125], "mani": [7, 52, 58, 60, 62, 169, 224], "manner": [64, 166, 170, 222], "manual": [7, 27], "manual_se": [0, 4, 5, 6, 7, 11, 13, 14, 17, 18, 19, 24, 25, 26, 27, 33, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 58, 75, 164, 166, 168, 170, 173, 176, 183, 185, 187, 210, 212, 214, 215], "map": [11, 38, 45, 55, 57, 58, 59, 82, 103, 109, 122, 123, 146, 168, 174, 179, 216, 217], "map_loc": [2, 9, 35, 36, 37, 38, 39], "mapsto": [52, 55, 56, 58, 129, 174, 179, 182], "marcenko": 164, "markerfmt": 8, "markov": [29, 219, 220, 221], "mask": [7, 9, 12, 13, 14, 19, 21, 29, 30, 32, 33, 35, 36, 37, 38, 46, 52, 56, 58, 67, 82, 86, 137, 163, 166, 170, 173, 176, 185, 207, 208, 209, 213, 215, 217], "mask_gaussian": 13, "mask_gener": [58, 86], "mask_random": 13, "mask_svd": 166, "mask_uniform": 13, "mat": [18, 19, 24], "match": [43, 49, 173, 184, 238], "matern_kernel": 211, "math": [25, 26, 31, 44, 45, 87, 131, 144, 146, 151, 153, 154, 156], "mathbb": [0, 2, 17, 22, 35, 52, 56, 74, 75, 95, 96, 97, 98, 99, 129, 164, 166, 173, 182], "mathbf": [2, 31, 32, 52, 216, 217], "mathcal": [2, 8, 21, 22, 31, 32, 33, 37, 46, 53, 59, 84, 88, 89, 90, 95, 96, 97, 98, 99, 113, 134, 146, 164, 171, 175, 180, 181, 183, 184, 188, 189, 211, 216, 217, 221], "mathemat": [10, 206], "mathrm": [22, 164, 183], "matlab": [122, 123], "matplotlib": [8, 11, 17, 31, 244, 248], "matric": [29, 159, 164, 204, 205], "matrix": [0, 13, 29, 43, 44, 75, 158, 164, 173, 174, 177, 182, 183, 185, 187], "matthieu": 62, "mat\u00e9rn": 211, "max": [0, 11, 13, 17, 30, 32, 33, 78, 83, 107, 114, 136, 149, 188, 202, 203, 239, 244], "max_img": 244, "max_it": [0, 5, 9, 11, 17, 18, 19, 22, 24, 25, 26, 27, 29, 30, 33, 36, 42, 43, 44, 45, 46, 47, 56, 74, 75, 126, 129, 133, 134, 135, 150, 159, 160, 161, 174, 179, 216, 217, 218, 219, 220, 221, 235, 237], "max_iter_backward": 234, "max_iter_int": [131, 144], "max_pixel": [83, 239], "max_zernike_amplitud": 207, "maxim": [5, 14, 22, 24, 26, 42, 43, 44, 46, 47, 51, 131, 144, 147, 159], "maximis": [95, 98], "maximum": [5, 22, 30, 31, 59, 74, 75, 83, 103, 122, 123, 129, 133, 134, 135, 146, 149, 150, 159, 160, 161, 174, 179, 188, 214, 218, 225, 228, 234, 239, 244], "maxpool": [107, 114], "mb": [1, 3, 15, 20, 23, 28, 34, 40, 41, 48, 63, 109], "mc": [36, 37, 113], "mc_sampl": [84, 86], "mcloss": [35, 36, 37], "mcmc": 59, "md5": 66, "mea": 12, "mean": [14, 17, 22, 29, 30, 31, 32, 33, 43, 46, 55, 56, 59, 64, 79, 80, 82, 86, 87, 88, 89, 90, 103, 218, 219, 220, 221, 223], "mean_batch": 239, "mean_has_converg": 219, "meaning": 31, "meaningless": [2, 103], "measur": [2, 4, 5, 6, 9, 10, 12, 13, 14, 16, 17, 18, 19, 22, 24, 25, 26, 27, 31, 32, 35, 36, 38, 39, 40, 42, 45, 46, 47, 52, 53, 55, 57, 58, 59, 61, 63, 64, 65, 68, 72, 73, 77, 79, 80, 82, 84, 86, 88, 89, 90, 92, 94, 97, 98, 99, 100, 103, 108, 116, 124, 128, 129, 130, 131, 133, 134, 135, 143, 158, 164, 165, 166, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 215, 216, 217, 219, 222, 223, 224, 240], "measurement_dir": [5, 6, 14, 24, 26, 36, 37, 38, 39, 42, 43, 44, 46, 47], "mechan": [84, 86], "med": 67, "median": [29, 52, 115], "medianfilt": [29, 52, 84, 86], "medic": 45, "medium": 172, "meet": [6, 33], "mem": [1, 3, 15, 20, 23, 28, 34, 40, 41, 48, 63], "memori": [111, 121, 123, 132, 187, 194, 195, 240], "mention": 149, "meshgrid": 4, "messi": [7, 29, 30, 33], "meta": 67, "metadata": 67, "metadata_cache_fil": 67, "meth": [46, 53], "method": [2, 4, 5, 7, 12, 15, 16, 18, 19, 25, 26, 27, 28, 29, 30, 33, 45, 46, 51, 52, 56, 58, 59, 62, 63, 64, 66, 68, 72, 74, 75, 76, 77, 83, 84, 86, 107, 108, 110, 111, 122, 123, 129, 130, 131, 132, 134, 137, 140, 142, 144, 150, 151, 158, 159, 162, 163, 164, 166, 171, 174, 178, 179, 183, 184, 187, 215, 218, 220, 222, 239, 240, 242, 244], "metric": [0, 2, 5, 7, 11, 14, 18, 19, 24, 25, 26, 27, 29, 30, 33, 42, 43, 44, 45, 46, 47, 64, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 93, 97, 129, 133, 222, 223, 224, 234, 245], "metric_nam": 129, "middl": [58, 162, 163, 169, 174, 187, 195], "might": [12, 77, 92, 94, 111, 132, 217, 248], "min": [0, 11, 13, 18, 19, 22, 32, 46, 52, 56, 111, 122, 123, 125, 126, 129, 132, 149, 152, 174, 179, 188, 202, 203, 225, 244], "min_": [5, 7, 17, 108], "min_max": [244, 248], "min_prob": [22, 52, 56, 129], "min_x": [43, 44, 129, 133], "mind": 32, "minim": [7, 18, 19, 22, 37, 43, 46, 52, 56, 108, 111, 122, 129, 132, 139, 154, 156, 157, 161, 216], "minimax": [2, 53], "minimis": [44, 96, 97, 99, 129, 151, 152, 153, 155, 156], "minimiza": 108, "minimize_variational_problem": 22, "minimum": [149, 188, 214, 225], "minut": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47], "mio": [21, 51], "mirror": 141, "miss": [9, 19], "mix": [13, 39, 58, 210, 212], "mixtur": [21, 22, 111, 132, 159, 210], "mlp": 121, "mlp_ratio": 121, "mm": 64, "mmse": 146, "mn": [164, 185], "mnist": [37, 38, 39, 43, 44, 50, 72], "mnist_train": [43, 44], "mode": [11, 66, 107, 110, 114, 119, 120, 127, 185, 225, 227, 244, 248], "model": [0, 5, 11, 15, 16, 17, 31, 34, 35, 36, 37, 38, 39, 42, 43, 44, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 71, 73, 74, 77, 80, 82, 84, 86, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 142, 144, 146, 151, 152, 153, 154, 159, 164, 166, 171, 172, 173, 174, 175, 177, 179, 184, 187, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 230, 231, 233, 235, 237, 239, 240, 242, 244, 247], "model_epl": 22, "model_infer": 64, "model_nam": [9, 36, 37, 38, 39], "model_new": [9, 46], "model_nontrain": 9, "model_patchnr": 22, "model_spec": 46, "modifi": [29, 54, 84, 86], "modul": [0, 5, 12, 17, 18, 19, 24, 27, 29, 30, 42, 43, 44, 45, 47, 50, 51, 52, 53, 54, 57, 58, 60, 64, 73, 74, 75, 77, 78, 79, 80, 82, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 139, 140, 144, 159, 164, 168, 171, 173, 174, 175, 177, 178, 179, 180, 181, 183, 185, 188, 189, 194, 195, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 229, 235, 237, 247], "modulelist": 17, "modulu": 178, "mohan": 124, "moi": [37, 80], "moiloss": 37, "moment": 51, "momentum": [103, 129, 133, 234], "monoton": 51, "mont": [29, 33, 51, 84, 86, 88, 89, 90, 113, 218, 219, 220, 221], "montecarlo": [29, 218, 220, 221], "more": [0, 2, 4, 7, 9, 17, 22, 29, 44, 46, 52, 56, 58, 60, 64, 85, 103, 107, 109, 110, 111, 113, 114, 120, 121, 126, 129, 130, 132, 136, 150, 160, 164, 174, 175, 179, 187, 194, 195, 207, 211, 220, 221, 222, 227, 230, 231, 232, 233, 234, 235, 236, 237, 244], "moreau": [25, 59, 131, 144, 146, 156], "moreov": [11, 12, 22, 32, 129], "most": [51, 159, 240], "mostli": 175, "mother": [125, 126], "motion": [2, 5, 18, 19, 24, 26, 58, 95, 96, 118, 211], "motion_gener": 4, "motionblurgener": [2, 4, 58, 210, 212], "move": 35, "mr": [67, 209], "mri": [16, 17, 40, 58, 62, 63, 64, 67, 68, 72, 73, 77, 79, 104, 110, 131, 137, 142, 144, 166, 170, 173, 174, 179, 208, 209, 213, 226, 229, 235, 237, 240], "mri_mask_128x128": 36, "mse": [2, 14, 42, 43, 44, 45, 46, 47, 73, 79, 80, 82, 86, 87], "mse_loss": 44, "mseloss": [2, 73, 79, 80, 82, 84, 86, 87, 93, 97, 223, 224], "mu": [22, 138, 159, 175], "mul": [173, 179], "mulbackward0": 165, "mult": [204, 205], "multi": [37, 45, 54, 67, 80], "multicoil": 67, "multidimension": 203, "multipl": [4, 16, 24, 25, 30, 35, 39, 40, 58, 59, 63, 64, 68, 72, 77, 78, 79, 80, 84, 86, 89, 90, 100, 113, 124, 131, 166, 172, 173, 174, 179, 210, 218, 224, 240], "multipli": [10, 53, 56, 58, 61, 151, 173, 174, 186, 205, 206, 229, 238], "multiplier_adjoint": 204, "multiscal": 85, "multispectr": [35, 225, 232], "must": [12, 13, 18, 19, 25, 27, 75, 77, 92, 94, 95, 96, 97, 98, 99, 103, 107, 165, 173, 208, 213, 215, 217, 224, 238, 246, 248], "my_dataset_nam": [14, 36, 37, 38, 42, 43, 44, 46, 47], "mykernel": 219, "mysampl": 219, "n": [0, 2, 9, 17, 21, 22, 26, 31, 32, 33, 37, 41, 55, 58, 59, 74, 75, 83, 84, 86, 88, 89, 109, 146, 164, 166, 170, 171, 173, 174, 177, 178, 179, 180, 182, 183, 185, 188, 208, 209, 216, 217, 221, 239], "n0": [22, 138, 175], "n_0": [138, 175], "n_1": 109, "n_2": 109, "n_channel": [5, 6, 9, 11, 14, 18, 19, 24, 25, 26, 27, 36, 42, 43, 44, 45, 46, 47], "n_coeff": 125, "n_compon": [22, 111, 132, 159], "n_data": 45, "n_detector_pixel": [187, 195], "n_dual": 45, "n_eigen_psf": 4, "n_eigenpsf": 4, "n_images_max": [5, 14, 24, 26, 36, 37, 38, 39, 42, 43, 44, 46, 47], "n_it_max": [18, 122, 123, 147], "n_iter": [11, 158], "n_iter_train": 45, "n_layer": [2, 118], "n_level": [43, 125], "n_patch": 141, "n_primal": 45, "n_step": 211, "n_tran": [225, 226, 227, 228, 229, 230, 231, 232, 233], "n_transf": [226, 228], "n_wavelet_subband": 43, "n_zernik": 4, "na": 207, "nabla": [29, 33, 44, 52, 56, 59, 122, 123, 144, 145, 146, 147, 154, 155, 157, 158, 221], "nabla_": [32, 128, 137, 216], "nabla_adjoint": [122, 123, 147], "nabla_u": 131, "nabla_x": [131, 144, 145], "name": [32, 46, 126, 149, 150, 235, 236, 237], "namedtupl": 67, "nan": 124, "nativ": [4, 8], "natur": [6, 11, 21, 22, 35, 38, 61, 81, 109, 132], "nb": [107, 114], "nc": [105, 106, 107, 114], "ncbi": 86, "ndf": [2, 105, 118], "nearest": [107, 109, 114, 121, 217], "necessari": [37, 43, 49, 64, 109, 216, 217, 224], "necessarili": [26, 139], "need": [4, 6, 9, 11, 17, 21, 29, 31, 46, 49, 54, 56, 58, 61, 64, 78, 101, 104, 106, 115, 116, 117, 119, 120, 125, 152, 159, 181, 194, 195, 208, 213], "neg": [22, 33, 59, 132, 138, 140, 141, 143, 159, 181, 219, 220, 221], "negat": 238, "negative_log_likelihood": [22, 132], "negative_patch_log_likelihood": 141, "neighbor": [0, 38, 82, 182], "neighbor2neighbor": [16, 40, 63, 64, 68, 72, 77, 100, 124, 166, 168, 174, 179, 181, 240], "neighbour": [107, 114], "net": [2, 14, 31, 37, 38, 39, 107, 124], "network": [3, 7, 15, 16, 22, 31, 32, 33, 52, 55, 57, 58, 60, 63, 64, 68, 71, 72, 74, 76, 77, 82, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 118, 119, 120, 121, 124, 140, 162, 164, 166, 173, 174, 177, 179, 187, 209, 211, 212, 216, 217, 222, 223, 224, 240, 244], "neural": [7, 14, 22, 32, 33, 45, 57, 74, 76, 103, 104, 119, 124, 140, 209], "neuro": 67, "neuron": [22, 140], "never": 35, "nevertheless": 32, "new": [4, 10, 12, 29, 46, 64, 158, 159, 162, 163, 170, 176, 186, 210, 212, 219, 244], "new_demo_ei_ckp_150_v3": 36, "new_x": 219, "next": [2, 4, 29, 31, 35, 39, 43, 44, 51, 133], "next_sigma": 31, "next_t": 32, "nf": [107, 110, 116, 117], "nfe": 32, "nftrainer": 22, "ngf": [2, 106], "nice": [8, 31], "nichol": 51, "nih": 86, "nll": 141, "nlm": 86, "nn": [0, 2, 8, 9, 13, 17, 29, 43, 44, 46, 51, 53, 54, 58, 64, 73, 74, 77, 79, 80, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 108, 121, 124, 127, 140, 162, 163, 164, 166, 168, 170, 173, 176, 177, 178, 181, 183, 185, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 247], "no_grad": [0, 21, 26, 31, 73, 93, 129, 166, 168], "nois": [0, 5, 6, 8, 11, 13, 17, 18, 19, 21, 24, 25, 26, 27, 31, 32, 38, 39, 47, 51, 52, 55, 56, 59, 64, 73, 80, 83, 84, 88, 89, 90, 102, 107, 108, 109, 110, 113, 119, 121, 124, 126, 130, 137, 142, 146, 164, 168, 170, 171, 173, 174, 175, 177, 178, 179, 180, 181, 184, 187, 188, 189, 212, 214, 215, 216, 217, 219, 220, 221, 239], "noise_color": 177, "noise_grai": 177, "noise_level": [109, 179], "noise_level_img": [5, 11, 17, 18, 19, 24, 25, 26, 27, 42, 45, 47], "noise_model": [5, 7, 11, 12, 13, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 42, 45, 47, 50, 52, 58, 168, 171, 174, 175, 179, 180, 181, 188, 189, 215, 217], "noise_std": 29, "noiseless": [88, 89, 90, 109], "noisi": [7, 17, 18, 19, 21, 22, 29, 30, 31, 32, 33, 35, 51, 58, 82, 84, 88, 89, 90, 102, 107, 109, 110, 111, 119, 121, 122, 123, 124, 125, 126, 170, 171, 173, 175, 177, 178, 179, 180, 181, 188, 189], "noisy_imag": 51, "noll": 207, "nomenclatur": 4, "non": [0, 7, 33, 57, 58, 159, 164, 172, 174, 177, 178, 179, 182, 187, 208, 209], "non_linear": [17, 125, 126], "none": [2, 4, 5, 6, 12, 22, 24, 25, 26, 35, 36, 37, 38, 39, 42, 47, 54, 58, 64, 65, 66, 67, 69, 70, 71, 72, 86, 92, 94, 95, 96, 97, 98, 99, 100, 101, 107, 109, 110, 111, 114, 115, 119, 120, 121, 122, 123, 124, 129, 131, 132, 133, 134, 135, 139, 140, 144, 149, 150, 159, 162, 163, 164, 166, 169, 170, 171, 174, 175, 176, 177, 179, 180, 181, 186, 187, 189, 194, 195, 202, 203, 207, 208, 209, 211, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 234, 235, 236, 237, 241, 242, 244, 245, 246, 247, 248], "nonetyp": [119, 169, 177], "nonexpans": [33, 51, 74], "nonlinear": 131, "noplot": 49, "norm": [0, 5, 10, 11, 12, 17, 18, 27, 29, 32, 46, 56, 64, 74, 75, 83, 91, 118, 122, 123, 124, 125, 126, 129, 135, 137, 147, 149, 164, 174, 187, 224, 239], "norm_a2": 56, "norm_grad": 32, "norm_lay": 121, "normal": [0, 11, 22, 31, 32, 43, 44, 83, 91, 110, 121, 122, 123, 137, 138, 140, 143, 146, 174, 175, 181, 182, 187, 239], "normalis": 137, "normalizing_flow": [22, 140], "normliz": 187, "note": [0, 2, 4, 5, 29, 31, 32, 35, 42, 43, 44, 47, 50, 53, 54, 58, 64, 131, 134, 152, 156, 178, 187, 195, 222, 224, 248], "notebook": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 248], "notic": [4, 31, 134], "now": [0, 2, 4, 14, 17, 21, 22, 30, 31, 32, 35, 42, 43, 44, 46, 58, 234], "np": [0, 17, 29, 30, 31, 32, 164, 215], "npy": [0, 17, 18, 19, 24, 26, 36], "nsgan": 93, "nufft": [0, 182], "nufftobj": 0, "null": 4, "num_angl": 22, "num_block": 119, "num_channel": [207, 210, 211, 212], "num_head": 121, "num_it": 11, "num_lay": 140, "num_refinement_block": 119, "num_step": 32, "num_train_timestep": [31, 32, 109, 217], "num_work": [5, 6, 14, 24, 25, 26, 27, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 72], "number": [0, 4, 5, 7, 9, 11, 12, 14, 17, 18, 19, 22, 24, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 54, 56, 62, 64, 67, 72, 84, 86, 89, 90, 101, 104, 105, 106, 107, 108, 110, 111, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 138, 140, 141, 144, 147, 150, 159, 160, 161, 164, 174, 175, 179, 182, 183, 184, 185, 187, 195, 202, 203, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 234, 235, 237, 244, 249, 250], "number_of_oper": 37, "numer": [17, 29, 74, 75, 160, 174, 187, 219, 220, 221], "numpi": [0, 8, 17, 29, 30, 31, 32, 196, 197, 199, 200, 202, 203, 204, 205, 208, 209, 213, 215, 239], "numpoint": 0, "nutshel": 43, "nwimag": 0, "nyquist": 207, "nyu": 67, "nz": [2, 103, 106], "o": [45, 164, 172, 185], "object": [5, 7, 10, 13, 17, 18, 19, 26, 30, 33, 43, 56, 58, 64, 67, 69, 93, 139, 155, 159, 174, 178, 179, 234, 238, 244, 246, 248], "observ": [21, 22, 55, 80, 131, 132, 139, 151, 153, 154, 174, 179], "obtain": [4, 7, 10, 13, 29, 33, 57, 59, 60, 84, 86, 113, 119, 178, 193, 215, 216, 217, 219, 220, 227], "odd": 8, "odl": 45, "odlgroup": 45, "odot": [39, 89, 90, 172, 186, 206], "off": [52, 58, 208], "offer": [11, 12, 52], "offici": 121, "offlin": [2, 64], "offset": [172, 208], "often": [55, 56, 58], "omega_": 17, "onc": [12, 14, 32, 46, 111, 129, 132], "one": [2, 10, 17, 32, 37, 49, 52, 54, 56, 58, 62, 67, 68, 74, 75, 78, 84, 86, 92, 94, 101, 104, 106, 115, 116, 117, 120, 125, 127, 159, 162, 163, 164, 169, 172, 174, 177, 187, 190, 194, 195, 209, 213, 219, 220, 221], "ones": [4, 8, 9, 12, 13, 27, 29, 31, 32, 43, 46, 51, 53, 56, 58, 61, 84, 86, 137, 162, 163, 165, 170, 174, 176, 187, 215, 217, 243], "ones_lik": [8, 19, 137], "onesid": 78, "onli": [2, 4, 7, 12, 14, 18, 19, 22, 24, 25, 26, 29, 31, 32, 35, 36, 37, 38, 39, 42, 45, 46, 56, 58, 64, 72, 84, 86, 107, 108, 109, 110, 114, 120, 121, 125, 126, 131, 144, 149, 173, 174, 187, 193, 195, 197, 200, 216, 219, 222, 234, 244], "onlin": [35, 64, 107, 109, 110, 114, 120, 121, 222], "online_measur": [22, 35, 45, 64, 222, 224], "onto": 64, "open": [49, 62, 203], "oper": [6, 11, 15, 16, 21, 31, 32, 38, 39, 40, 50, 51, 52, 53, 55, 56, 59, 62, 63, 64, 68, 72, 73, 77, 79, 80, 82, 84, 86, 88, 89, 90, 91, 92, 94, 100, 111, 119, 122, 123, 124, 128, 129, 131, 132, 133, 134, 135, 136, 137, 142, 143, 144, 147, 148, 149, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 221, 222, 223, 224, 229, 238, 240, 242, 244], "operatornam": [0, 2, 17, 18, 19, 25, 31, 44, 46, 56, 60, 74, 113, 129, 131, 133, 134, 135, 136, 137, 139, 142, 144, 145, 146, 151, 152, 153, 154, 156, 157, 158, 217, 234, 235], "opnorm": 0, "opt": [4, 224], "optic": 207, "optim": [0, 2, 7, 9, 11, 14, 20, 21, 22, 24, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 52, 58, 59, 60, 63, 64, 103, 108, 110, 111, 122, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 171, 174, 178, 179, 185, 187, 216, 217, 219, 220, 221, 223, 224, 234, 235, 236, 237, 239, 240, 242, 244, 245, 247], "optim_build": [0, 5, 11, 18, 19, 24, 25, 26, 27, 52, 56, 129], "optim_iter": [25, 43, 44, 45, 46, 129, 133, 150, 151, 152, 153, 154, 155, 156, 157, 158], "optim_step": 22, "optimalgo": 129, "optimis": [2, 103], "optimiter": [25, 129, 150, 151, 152, 153, 154, 155, 156, 157, 158, 235, 236, 237], "optimize_z": 103, "option": [4, 12, 32, 56, 58, 64, 65, 66, 67, 70, 71, 72, 73, 124, 129, 133, 143, 162, 164, 169, 174, 177, 179, 185, 186, 187, 196, 199, 206, 222, 224, 234, 241, 242], "order": [4, 29, 30, 31, 32, 73, 91, 122, 174, 185, 207, 215], "org": [4, 7, 24, 29, 30, 33, 73, 74, 75, 78, 80, 84, 85, 88, 89, 90, 93, 100, 105, 106, 110, 113, 116, 117, 160, 164, 169, 172, 184, 187, 195, 207, 211, 215, 216, 217, 220, 221, 225, 232, 244, 248], "orgin": 174, "orig": 35, "origin": [2, 11, 17, 18, 19, 22, 32, 43, 45, 51, 88, 92, 94, 96, 97, 105, 106, 108, 110, 112, 118, 193, 215, 217, 227], "original_data_dir": [5, 6, 9, 14, 17, 18, 19, 24, 26, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47], "ortho": 0, "orthogon": [125, 164, 220], "orthonorm": [125, 149, 166, 182], "osa": 4, "ossci": [39, 43], "other": [0, 4, 6, 10, 31, 45, 50, 54, 56, 64, 73, 79, 80, 82, 86, 87, 102, 119, 125, 173, 174, 179, 212, 222, 223, 224, 229, 238], "otherwis": [5, 6, 14, 24, 25, 26, 27, 36, 37, 38, 39, 42, 43, 44, 46, 47, 64, 73, 74, 75, 78, 80, 109, 113, 129, 133, 162, 164, 169, 170, 173, 174, 176, 177, 185, 186, 187, 191, 192, 196, 197, 199, 200, 206, 224], "our": [0, 2, 18, 19, 25, 29, 32, 43, 44, 46, 49, 62, 119, 152], "ourselv": 13, "out": [32, 37, 50, 62, 75, 164, 203, 219, 220, 221], "out_channel": [2, 11, 14, 25, 27, 35, 36, 37, 38, 39, 42, 107, 109, 110, 114, 116, 117, 119, 124, 237], "out_siz": 194, "outer": 220, "output": [17, 18, 19, 25, 26, 27, 31, 32, 43, 44, 52, 58, 64, 72, 75, 93, 101, 103, 104, 106, 107, 109, 110, 111, 114, 116, 117, 119, 124, 125, 129, 131, 132, 133, 134, 140, 159, 162, 163, 166, 169, 170, 177, 181, 182, 184, 186, 187, 194, 195, 196, 197, 199, 200, 204, 205, 206, 222, 227, 234, 239], "output_s": [2, 106], "over": [0, 6, 32, 52, 64, 84, 86, 113, 115, 122, 123, 133, 149, 187, 239], "overcomplet": [126, 164, 174, 187], "overfit": [7, 108], "overlaid": 246, "overlap": [111, 132, 141], "overlin": [31, 32, 178, 216, 217], "overrid": [53, 92, 94, 103, 115, 121, 159, 224], "overridden": [78, 101, 103, 104, 106, 115, 116, 117, 120, 194, 195], "overriden": 93, "oversampl": [0, 11, 182], "oversampling_ratio": 11, "overwrit": [144, 171, 175, 180, 181, 189], "overwritten": [56, 144, 164, 174, 179, 187], "own": [2, 12, 15, 16, 25, 45, 63, 68, 72, 107, 109, 110, 114, 120, 121, 166, 168, 171, 174, 179, 240, 244], "owt": 24, "ozan": 45, "p": [0, 5, 8, 17, 19, 24, 26, 29, 32, 33, 55, 59, 67, 78, 89, 90, 111, 129, 132, 146, 149, 175, 180, 181, 184, 206, 216, 221], "p_": [2, 22, 29, 33, 59, 95, 96, 97, 98, 99, 146], "p_i": [22, 111, 132, 141], "p_ix": [111, 132], "p_p": 17, "p_x": [2, 22, 95, 96], "p_y": [97, 98, 99], "p_z": 22, "packag": [4, 53, 56, 58, 59, 60, 67, 102, 182, 224], "pad": [0, 2, 4, 8, 58, 103, 115, 124, 125, 141, 162, 163, 169, 174, 177, 182, 186, 196, 197, 198, 199, 200, 201, 206, 225, 226, 227, 228, 230, 231, 232, 233], "pad_if_need": 67, "pad_input": 125, "padding_mod": 227, "page": [51, 67], "pair": [2, 6, 14, 37, 46, 50, 53, 64, 68, 72, 84, 86, 212, 222, 223], "pajot": [2, 97], "pan": [10, 35, 225, 232], "pansharpen": [10, 13, 35, 225, 232], "pantiltrot": 35, "papadaki": 26, "paper": [2, 5, 7, 8, 22, 24, 30, 33, 35, 45, 96, 97, 107, 108, 110, 119, 151, 175, 206, 217, 227], "parallel": [5, 6, 14, 24, 25, 26, 27, 36, 37, 38, 39, 42, 43, 44, 46, 47, 54, 102, 187, 194, 195], "parallel_comput": [187, 194, 195], "param": [25, 26, 29, 45, 58, 119, 164, 166, 170, 174, 176, 177, 187, 208, 209, 213, 219, 248], "param_nam": [210, 212], "param_valu": [210, 212], "paramet": [0, 2, 5, 7, 9, 11, 12, 14, 17, 18, 19, 21, 24, 25, 26, 29, 31, 32, 33, 35, 46, 51, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 245, 246, 247, 248], "parameteris": 225, "parametris": [230, 231, 233], "params_algo": [0, 5, 9, 11, 18, 19, 24, 25, 26, 27, 36, 42, 43, 44, 45, 46, 47, 52, 56, 60, 129, 133, 150, 235, 236, 237, 247], "params_algo_new": [9, 46], "params_dict": [210, 212], "params_pc": [4, 186], "parent": [166, 174, 179], "part": [13, 36, 60, 65, 107, 127, 170, 176], "partial": [35, 60, 131, 135, 174, 179, 234], "particular": [0, 4, 10, 60, 64, 67, 123, 152, 182, 187], "pass": [2, 4, 42, 49, 54, 58, 60, 64, 77, 78, 84, 86, 92, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 112, 115, 116, 117, 118, 120, 150, 154, 162, 169, 194, 195, 202, 223, 224, 234, 235, 236, 237], "pastur": 164, "patch": [23, 50, 51, 63, 64, 69, 76, 111, 118, 121, 131, 132, 138, 140, 141, 144, 166, 168, 171, 173, 174, 175, 179, 187, 189, 239, 242, 244], "patch_dimens": 132, "patch_norm": 121, "patch_siz": [21, 22, 69, 111, 121, 132, 140, 141], "patchdataset": 22, "patchgan": [2, 118], "patchgandiscrimin": [2, 224], "patchnr_batch_s": 22, "patchnr_dataload": 22, "patchnr_epoch": 22, "patchnr_learning_r": 22, "patchnr_lodopab_smal": [22, 140], "patchnr_lodopab_small2": 22, "patchnr_prior": 22, "patchnr_subnets": 22, "patchprior": 22, "path": [11, 49, 50, 64, 65, 66, 67, 68, 70, 71, 107, 109, 110, 111, 114, 120, 121, 132, 140, 224, 241, 244, 245, 247], "pathlib": [5, 6, 9, 11, 14, 17, 18, 19, 24, 25, 26, 27, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 67, 224], "pattern": [4, 13, 24, 49, 130, 167, 185], "pc_gener": [4, 186], "pcg64": [208, 209, 213], "pd": [139, 152], "pdf": [30, 73, 100, 209, 211, 213], "pditer": 45, "pdnet_dualblock": 45, "pdnet_primalblock": 45, "pdnetdatafid": 45, "pdnetiter": 45, "pdnetprior": 45, "peak": [0, 8, 11, 83, 184, 239], "penal": [5, 56, 129], "per": [7, 8, 30, 33, 36, 37, 43, 51, 59, 107, 109, 110, 120, 125, 132, 174, 184, 185, 225, 226, 227, 228, 229, 248], "percentag": [219, 220, 221, 225], "perceptu": [2, 76], "pereyra": 220, "perform": [0, 5, 7, 14, 17, 18, 19, 24, 27, 31, 32, 45, 46, 51, 53, 56, 60, 64, 65, 70, 71, 78, 84, 86, 101, 104, 106, 108, 109, 115, 116, 117, 119, 120, 129, 133, 139, 144, 150, 159, 162, 163, 182, 186, 187, 194, 195, 196, 197, 198, 199, 200, 201, 206, 217, 224, 227, 234, 235, 236, 237], "period": [219, 220, 221, 227], "permut": 0, "persist": 4, "perspect": [35, 225, 232], "perturb": 84, "pf": 207, "pgd": [9, 11, 18, 19, 26, 27, 42, 43, 44, 46, 52, 56, 60, 129, 133, 139, 150, 157, 234, 235, 236, 237], "pgditer": [43, 44, 129, 133], "pgl": 35, "phantom": 11, "phase": [4, 15, 16, 51, 63, 107, 127, 128, 129, 131, 137, 142, 144, 150, 158, 171, 178, 179, 183, 207, 239, 240, 242, 244], "phase_retriev": [11, 178], "phaseless": 11, "phaseretriev": [128, 158, 183], "phenomenon": 7, "phi": [37, 100], "phi_": [14, 37], "photon": [15, 16, 63, 138, 175, 179, 184, 240], "phyic": 25, "physic": [0, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 52, 53, 55, 56, 59, 60, 64, 72, 73, 77, 79, 80, 82, 84, 86, 88, 89, 90, 92, 94, 97, 100, 103, 108, 111, 128, 129, 131, 132, 133, 134, 135, 137, 139, 151, 152, 153, 154, 155, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 234, 237], "physics1": [10, 174], "physics2": [10, 12, 174], "physics_concat": 10, "physics_cur": 64, "physics_gener": [2, 64, 72, 222, 224], "physics_list": 80, "physics_stack": 10, "physicsgener": [58, 64, 72, 86, 210, 214, 222, 224], "pi": [0, 11, 27, 187, 193], "pi_": 221, "pick": 62, "pil": [65, 66, 70, 71, 225], "pinhol": [53, 230, 231, 233], "pinv": 100, "pip": [16, 62], "pipelin": 67, "pixel": [0, 2, 8, 9, 11, 14, 19, 25, 30, 32, 33, 35, 39, 43, 44, 46, 58, 66, 70, 83, 101, 107, 114, 119, 162, 163, 169, 173, 174, 179, 184, 185, 187, 190, 195, 239], "pixel_s": 207, "pixel_spac": [187, 195], "pixelshuffl": 121, "pixelshuffledirect": 121, "pixelsuffl": [107, 114], "pixelwis": [32, 173], "pkl": 67, "placeholderdataset": 224, "plai": [11, 26, 28, 29, 33, 47, 51, 52, 60, 62, 63, 123, 130, 142, 217, 220, 221, 222, 245], "plain": [215, 217], "plane": [4, 187], "plausibl": 55, "pleas": [0, 49, 62, 67, 223], "plot": [0, 2, 4, 5, 6, 10, 11, 12, 13, 14, 17, 21, 24, 26, 31, 32, 35, 36, 37, 38, 39, 42, 45, 46, 49, 52, 64, 129, 186, 222, 224, 234, 245, 246, 247, 248], "plot_curv": [0, 18, 19, 25, 27], "plot_imag": [5, 24, 26, 36, 37, 38, 39, 45, 46, 64, 222, 224], "plot_inset": 0, "plot_measur": [64, 222, 224], "plot_metr": [0, 5, 18, 19, 24, 26, 27, 45, 222, 224], "plot_only_first_batch": [24, 26, 222], "plot_paramet": [43, 44, 47], "plt": [8, 11, 17, 31], "plug": [11, 26, 28, 29, 32, 33, 47, 51, 52, 60, 62, 63, 123, 130, 142, 217, 220, 221, 222, 245], "png": [4, 11, 13, 21, 27, 31, 32, 52, 66, 70, 71, 244], "pnp": [9, 16, 28, 34, 36, 42, 46, 51, 56, 60, 62, 63, 64, 68, 72, 74, 76, 77, 83, 107, 110, 129, 130, 131, 137, 139, 144, 146, 150, 163, 166, 171, 173, 174, 179, 185, 187, 217, 219, 221, 222, 223, 237, 239, 240, 242, 244, 245], "pock": [9, 16, 45, 48, 63, 64, 68, 72, 77, 87, 122, 123, 125, 131, 134, 142, 144, 150, 152, 166, 173, 174, 179, 222, 235, 236, 237, 240], "point": [0, 33, 42, 49, 54, 56, 60, 74, 129, 131, 133, 134, 139, 159, 174, 211, 234], "poisson": [8, 13, 22, 38, 39, 59, 89, 90, 138, 143, 175, 180, 181, 184], "poissongaussiannois": 13, "poissonlikelihood": 31, "poissonnois": [13, 38, 39], "polynomi": [4, 207], "pool": [107, 114, 115], "poor": 11, "popular": [53, 58], "posit": [31, 39, 52, 56, 89, 90, 121, 143, 181, 223], "possibl": [0, 4, 10, 11, 42, 49, 52, 54, 56, 58, 83, 109, 110, 129, 177, 234, 239], "possibli": [22, 29, 53, 80, 172, 219], "post": [14, 30, 33], "posterior": [29, 30, 32, 33, 59, 215, 216, 217, 219, 220, 221], "posteriori": [59, 146], "potenti": [7, 26, 44], "pow": 29, "power": [10, 12, 27, 31, 74, 75, 109, 174, 185], "pp": [24, 122, 123, 130], "pr": 49, "practic": [0, 35, 43, 120, 149, 174], "pre": [0, 11, 32, 52, 60, 76, 119], "precis": [0, 17, 22, 56, 113, 129, 136, 174, 207], "preconula": 29, "predefin": [56, 62, 174, 179], "prefer": 49, "prepar": [49, 64], "prepare_imag": 64, "preprocess": 158, "present": [36, 37, 38], "preserv": 0, "pretrain": [2, 11, 21, 22, 24, 25, 26, 27, 30, 31, 33, 35, 36, 37, 38, 39, 42, 47, 54, 59, 62, 64, 96, 97, 99, 100, 107, 109, 110, 111, 114, 119, 120, 121, 130, 132, 140, 215, 217], "pretrained_noise_level": 121, "previou": [29, 31, 54, 129, 133, 151, 152, 153, 219], "previous": 17, "primal": [16, 28, 46, 48, 52, 56, 63, 64, 77, 87, 110, 116, 117, 122, 123, 129, 131, 133, 137, 139, 142, 144, 150, 152, 166, 171, 174, 179, 185, 187, 235, 237, 239, 240, 242, 244, 245], "primari": [122, 123], "princip": 158, "print": [0, 2, 4, 7, 9, 10, 11, 12, 14, 18, 19, 21, 22, 25, 27, 29, 30, 33, 36, 37, 38, 39, 46, 56, 58, 64, 65, 66, 67, 70, 71, 74, 75, 84, 86, 108, 122, 123, 129, 174, 207, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 224], "prior": [9, 11, 15, 17, 20, 21, 23, 24, 25, 27, 36, 42, 43, 46, 47, 48, 51, 55, 59, 60, 62, 63, 64, 68, 69, 72, 77, 87, 104, 107, 108, 111, 123, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 163, 164, 166, 168, 171, 173, 174, 175, 179, 187, 189, 193, 219, 220, 221, 222, 235, 236, 237, 239, 240, 242, 244, 245, 247], "prior_new": [9, 46], "priori": 22, "prob": [4, 210], "probability_mask": [14, 46], "probabl": [14, 22, 39, 46, 89, 90, 164, 173, 185, 209, 210, 213], "probail": 22, "problem": [3, 6, 7, 11, 12, 14, 16, 21, 22, 30, 36, 37, 42, 43, 46, 49, 51, 52, 53, 56, 57, 58, 60, 61, 62, 63, 64, 68, 71, 72, 73, 77, 87, 92, 94, 95, 96, 97, 98, 99, 103, 105, 106, 108, 111, 112, 118, 122, 123, 124, 125, 126, 129, 130, 132, 133, 139, 162, 164, 168, 169, 172, 174, 177, 179, 187, 211, 212, 215, 217, 224, 240, 244, 248], "proce": 133, "procedur": [29, 46, 124], "proceed": [24, 130], "process": [14, 51, 53, 64, 72, 102, 123, 127, 134, 149, 164, 174, 179, 183, 211, 217], "prod": [11, 164], "prod_": 32, "produc": [59, 174, 179, 229], "product": [29, 53, 58, 75, 174, 178, 179, 186, 206, 229], "product_convolution2d": 4, "productconvolutionblurgener": [4, 186], "progress": [14, 32, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 64, 72, 103, 108, 159, 215, 216, 217, 218, 219, 220, 221, 222, 224], "progress_bar": [22, 64], "proj": 134, "project": [0, 35, 43, 44, 49, 51, 53, 116, 134, 135, 182, 187, 194, 195, 219, 220, 221, 225, 230, 231, 232, 233], "promot": 55, "propag": [38, 73, 82], "properli": 0, "properti": 58, "proport": [88, 89, 90, 125, 208], "propos": [0, 17, 21, 22, 32, 35, 44, 74, 75, 103, 105, 106, 112, 113, 118, 119, 132, 154], "propto": [33, 59, 146], "prototyp": 101, "provid": [0, 4, 7, 11, 12, 13, 18, 19, 24, 25, 26, 27, 29, 52, 53, 56, 57, 58, 59, 60, 61, 64, 67, 72, 92, 93, 94, 95, 96, 97, 98, 99, 125, 140, 149, 162, 163, 166, 170, 177, 187, 190, 203, 222, 223, 224, 248], "prox": [0, 17, 18, 19, 25, 31, 43, 44, 45, 46, 56, 131, 134, 135, 136, 137, 142, 144, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 163, 170, 174, 176, 217], "prox_conjug": [131, 144], "prox_d": [131, 134, 135, 137, 138, 143], "prox_d_conjug": [25, 131], "prox_l0": 125, "prox_l1": 125, "prox_l2": [12, 58, 166, 169, 174], "prox_tau_fx": 123, "proxim": [5, 12, 17, 18, 19, 25, 26, 27, 31, 45, 52, 56, 60, 122, 123, 131, 133, 134, 135, 136, 137, 142, 143, 144, 147, 148, 149, 150, 157, 166, 169, 173, 174, 220, 235, 236, 237], "pseudo": [0, 4, 10, 12, 58, 100, 163, 170, 173, 176, 178, 187], "pseudoinvers": [164, 166, 170, 174, 179, 187], "psf": [0, 4, 207, 211], "psf_gener": [4, 186], "psf_grid": [4, 186], "psf_log": 0, "psf_size": [4, 58, 186, 207, 210, 211, 212], "psfgener": [4, 207, 211], "psi": [17, 19, 125, 126, 149], "psi_": 17, "psi_1": 126, "psi_2": 126, "psi_i": 0, "psi_l": 126, "psnr": [0, 2, 5, 7, 11, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 103, 129, 222, 224, 234, 239], "psnr_epll": 22, "psnr_fbp": 22, "psnr_ob": 21, "psnr_patchnr": 22, "psnr_recon": 21, "pt": [21, 22, 32, 36, 111, 132, 140], "pth": [2, 9, 11, 24, 25, 33, 35, 36, 37, 38, 39, 46, 64, 119, 164, 173, 178, 183, 185], "ptwt": 9, "public": 49, "pubm": 86, "pula": 29, "pula_mean": 29, "pula_var": 29, "pulaiter": 29, "pull": 49, "pupil": [4, 207], "pupil_s": 207, "pure": [35, 109, 217, 225], "purpos": 9, "push": 22, "put": [65, 66, 70, 71], "py": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 63, 112, 224], "pyplot": [8, 11, 17, 31], "pytest": 49, "python": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 49, 102, 224], "python3": [4, 224], "pytorch": [4, 5, 6, 7, 9, 13, 14, 17, 18, 19, 24, 25, 26, 27, 32, 33, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 54, 58, 105, 106, 107, 109, 110, 114, 115, 120, 121], "pywavelet": 125, "pywt": 149, "q": [2, 32, 95, 96, 97, 98, 99, 133], "qk": 121, "qk_scale": 121, "qkv_bia": 121, "qquad": [56, 129, 133, 139], "quad": [2, 17, 22, 52, 56, 84, 88, 90, 97, 129, 179], "quadrat": [21, 22, 24, 36, 42, 111, 130, 132, 150, 156, 217, 235, 236, 237], "qualiti": [2, 14, 45, 46, 64, 81], "quantif": [16, 34, 62, 63, 74, 110, 131, 137, 144, 146, 166, 171, 173, 174, 179, 219, 221, 239, 240, 242, 244], "quantifi": 33, "quantiti": [92, 94, 174], "quantiz": [174, 179], "queri": 121, "question": [49, 62], "quickli": 61, "quickstart": 64, "quit": 0, "r": [0, 8, 12, 25, 26, 29, 31, 32, 38, 39, 45, 46, 52, 56, 74, 75, 82, 84, 86, 88, 89, 90, 107, 114, 115, 122, 129, 134, 143, 164, 166, 173, 182, 184, 222], "r2": 122, "r2d2": 0, "r2r": 84, "r_": [8, 29, 37, 184], "rachford": [47, 150, 153, 235, 236, 237], "radford": [105, 106], "radio": [1, 16, 63, 129, 131, 137, 144, 149, 150, 174, 179, 182, 239, 244, 245, 246], "radiointerferometri": 0, "radiu": [9, 46, 134, 135, 187, 195], "radon": [13, 22, 58, 187, 194], "rai": [187, 195], "rais": 144, "ramp": [187, 194], "rand": [13, 53, 58, 171, 175, 180, 181, 188, 189, 244, 248], "rand_lik": 170, "randn": [51, 58, 60, 164, 166, 168, 170, 173, 174, 176, 177, 183, 185, 187, 190, 225, 230, 231, 232, 233, 237], "randn_lik": [0, 11, 29, 31, 32, 58, 75], "random": [0, 2, 4, 5, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 51, 52, 53, 58, 61, 63, 73, 80, 86, 89, 90, 107, 108, 109, 110, 113, 114, 120, 121, 129, 131, 137, 140, 142, 144, 150, 164, 166, 168, 170, 171, 173, 174, 176, 177, 178, 179, 183, 185, 187, 207, 208, 209, 211, 213, 215, 216, 217, 219, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 240, 242, 244, 249], "random_lat": 103, "random_phantom": 45, "random_split": [2, 35], "randomcrop": [14, 42, 46, 47, 65, 66, 67, 70, 71], "randomhorizontalflip": 67, "randomli": [4, 14, 32, 46, 64, 72, 86, 113, 141, 208, 209, 210, 212, 213, 222, 226, 228], "randommaskgener": [13, 58, 209], "randomphantomdataset": 45, "randomphaseretriev": 11, "randomverticalflip": 67, "rang": [0, 4, 9, 11, 12, 15, 16, 17, 19, 22, 31, 32, 35, 36, 37, 43, 45, 46, 54, 56, 58, 63, 64, 70, 75, 109, 119, 121, 133, 179, 184, 217, 218, 226, 240], "rapidli": 24, "rate": [2, 7, 64, 103, 108, 120, 121, 208], "rather": [9, 13, 31, 43, 46, 59, 61, 146, 182], "ratio": [0, 8, 11, 13, 83, 86, 121, 218, 239], "raw": [39, 43, 65, 66, 67, 70, 71], "rcparam": 31, "re": [10, 13, 97, 98, 99, 108], "re_init": 108, "reach": [5, 25, 26, 129, 133, 208], "read": [0, 52, 67], "reader": [0, 54], "readi": [0, 2, 4, 17, 32, 50], "readili": [0, 17, 31, 32], "real": [0, 11, 13, 36, 51, 92, 93, 94, 118, 127, 170, 176, 182], "real_fft": [197, 200], "real_imag": 127, "real_label": 93, "real_project": [0, 182], "realist": 51, "realiz": [0, 18, 19, 31, 64, 84, 86, 207], "reason": [0, 17], "rec": [2, 5, 10, 12, 14, 24, 26, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47], "rec601": 165, "recal": [46, 60, 113, 235], "receiv": [37, 186], "recip": [78, 101, 104, 106, 115, 116, 117, 120, 194, 195], "recognit": [24, 130], "recommend": [7, 9, 10, 12, 13, 14, 31, 35, 38, 39, 43, 46, 54, 56, 62, 108, 119, 123, 149, 164, 174, 185], "recomposit": 125, "recon": [0, 18, 19, 25, 27, 32, 43, 44], "recon_epl": 22, "recon_patchnr": 22, "reconstruct": [0, 2, 15, 16, 18, 19, 21, 25, 26, 27, 29, 31, 33, 34, 35, 43, 44, 45, 50, 55, 59, 60, 61, 63, 64, 68, 70, 72, 73, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 103, 104, 107, 108, 121, 124, 129, 131, 132, 137, 142, 144, 150, 164, 166, 170, 171, 173, 174, 175, 177, 178, 179, 182, 183, 187, 195, 209, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 239, 240, 242, 244], "reconstrunct": 128, "recorrupt": 84, "recov": [0, 11, 18, 19, 225], "recreat": 166, "red": [8, 16, 28, 63, 68, 72, 114, 129, 131, 137, 144, 146, 150, 169, 171, 174, 179, 222, 240], "redefin": [0, 18, 19, 45], "reduc": [0, 7, 31, 32, 36, 37, 38, 39, 44, 111, 132, 149], "reduct": [44, 121], "redund": 17, "refer": [2, 22, 31, 51, 55, 73, 76, 77, 81, 83, 85, 92, 94, 175, 239], "refin": 119, "reflect": [4, 17, 35, 162, 169, 177, 186, 196, 199, 206, 225, 227, 230, 231, 232, 233], "reformul": [43, 46], "reg": [52, 55, 56, 59, 60, 129, 136, 144, 145, 146, 147, 148, 149, 159], "reg_l2": 75, "region": [0, 67], "regist": [78, 101, 104, 106, 115, 116, 117, 120, 194, 195], "regnam": [19, 46, 52, 56, 129, 136, 142, 144, 145, 148, 149, 152], "regular": [4, 5, 7, 9, 11, 16, 17, 18, 19, 22, 27, 28, 31, 33, 36, 38, 42, 43, 44, 47, 52, 55, 56, 58, 60, 62, 63, 68, 72, 82, 110, 114, 122, 123, 129, 131, 133, 136, 137, 139, 144, 145, 146, 147, 148, 149, 150, 158, 159, 169, 171, 174, 179, 220, 221, 222, 234, 235, 236, 237, 240], "regularis": [0, 18, 19, 31, 46, 56, 75, 129, 133, 150, 235, 236, 237], "regularizi": 22, "regval": 75, "reimplement": 97, "rel": [2, 17, 58, 174], "rel_crit": 17, "relat": [25, 43, 44, 67], "relationship": 0, "relax": [47, 56, 114, 122, 123, 139, 151, 152, 153], "relaxation_step": 139, "releas": [4, 24, 121], "relev": [51, 129, 150, 235, 236, 237], "reli": [0, 2, 25, 56, 144, 174, 182], "relu": [103, 107, 110, 114], "remain": [12, 31, 224], "remark": 32, "remov": [37, 64, 65, 66, 70, 71, 100, 119, 173, 222, 223], "reparametr": 32, "repeat": [17, 45, 208, 209, 213], "replac": [2, 42, 45, 47, 52, 60], "replic": [4, 162, 169, 177, 186, 196, 199, 206], "repositori": [49, 62, 82, 107, 109, 110, 114, 120, 121], "repres": [18, 19, 61, 111, 129, 132, 170, 176, 177, 209, 213, 238], "represent": [26, 105, 106], "reproduc": [4, 5, 6, 7, 11, 13, 14, 17, 18, 19, 24, 25, 26, 27, 33, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 164, 166, 168, 170, 173, 176, 183, 185, 187, 215], "request": 49, "requir": [2, 4, 8, 12, 25, 29, 30, 36, 46, 50, 51, 53, 54, 56, 58, 59, 77, 103, 129, 146, 152, 187, 194, 195, 215, 217, 219, 220, 221, 248], "requires_grad": [9, 75, 103], "requires_grad_": [9, 13, 22, 31, 32, 43, 46, 75], "resampl": 227, "rescal": [0, 27, 31, 32, 64, 244, 248], "rescale_mod": [11, 52, 244, 248], "reset": [64, 219], "reset_metr": 64, "reshap": [0, 125, 238], "reshape_th": 125, "resi_connect": 121, "residu": [31, 32, 101, 121, 124, 129, 219], "resiz": [2, 11, 25, 27, 35, 36, 241, 242], "resize_mod": [11, 25, 27, 241, 242], "resolut": [0, 16, 28, 35, 48, 51, 63, 64, 66, 68, 70, 71, 72, 73, 77, 87, 110, 112, 114, 119, 120, 129, 131, 137, 142, 144, 145, 150, 169, 171, 174, 177, 179, 222, 227, 235, 237, 240, 247], "resolv": [2, 9, 11, 17, 21, 22, 25, 26, 32, 33, 35, 36, 37, 38, 39, 52, 71, 207], "reson": [170, 176], "resp": 47, "respect": [4, 45, 60, 113, 139, 207], "respons": [4, 8, 184, 186], "rest": 130, "restart": 123, "restor": [0, 5, 21, 22, 24, 26, 36, 42, 43, 44, 47, 51, 62, 65, 107, 119, 121, 130, 132, 215, 217], "restorm": 51, "restrict": [13, 187, 216], "result": [2, 11, 13, 22, 31, 32, 35, 60, 64, 174, 179, 217, 218, 220, 221, 222, 248], "results_dir": [0, 5, 9, 11, 17, 18, 19, 24, 25, 26, 27, 42, 43, 44, 45, 47], "retain": 174, "retrain": 22, "retriev": [15, 16, 32, 51, 63, 107, 128, 129, 131, 137, 142, 144, 150, 158, 171, 178, 179, 183, 225, 239, 240, 242, 244], "return": [0, 2, 4, 5, 6, 9, 11, 12, 18, 19, 22, 25, 26, 27, 29, 30, 31, 32, 33, 37, 44, 45, 46, 51, 56, 64, 65, 66, 67, 70, 71, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 103, 109, 113, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 163, 164, 166, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 219, 222, 223, 224, 226, 227, 228, 229, 234, 237, 238, 240, 241, 242, 243, 244, 246, 248, 249, 250, 251], "return_anim": 248, "return_ax": 244, "return_fig": [244, 246], "rev": 140, "revers": [31, 32], "review": 184, "revisit": 31, "rewrit": 64, "rgb": [4, 12, 13, 111, 132, 165, 172, 177], "rho": [31, 32, 123], "rho_t": [31, 217], "right": [2, 29, 31, 33, 37, 39, 43, 56, 58, 59, 60, 88, 89, 90, 95, 96, 97, 98, 99, 131, 134, 146, 164, 174, 179, 183, 193, 211, 217, 221, 234, 246], "rm": 32, "rmtree": [65, 66, 70, 71], "rng": [208, 209, 213, 225, 226, 227, 228, 229], "robust": [4, 119, 124, 187], "role": 33, "roll": [174, 190], "root": [2, 35, 37, 38, 39, 43, 44, 49, 50, 65, 66, 67, 70, 71], "rotat": [35, 36, 37, 51, 53, 73, 113, 187, 193, 195, 225, 230, 231, 232, 233], "rotoflip": 113, "rotoshift": 53, "roughli": 22, "round": 185, "routin": [56, 60], "row": [128, 209, 244], "rule": [32, 129, 131], "run": [0, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 24, 25, 26, 27, 31, 32, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 49, 64, 78, 101, 102, 103, 104, 106, 107, 108, 110, 115, 116, 117, 119, 120, 121, 124, 125, 126, 129, 150, 194, 195, 215, 216, 217, 218, 219, 221, 235, 236, 237], "rung": 220, "runner": [0, 2, 8, 9, 11, 13, 21, 22, 24, 25, 26, 31, 32, 33, 35, 36, 37, 38, 39, 43, 46], "runtim": [7, 162], "rvert": [2, 97], "rx": 187, "s3": [39, 43], "s_": 29, "s_sequential_indic": 207, "s_t": 170, "same": [2, 4, 8, 9, 29, 36, 37, 38, 39, 45, 46, 51, 56, 58, 67, 83, 115, 119, 122, 123, 125, 129, 131, 134, 135, 138, 147, 150, 162, 164, 169, 177, 183, 186, 194, 196, 197, 199, 200, 204, 205, 206, 224, 235, 236, 237, 239, 243, 244, 246, 248, 249, 250, 251], "sampl": [2, 4, 12, 13, 26, 32, 34, 35, 37, 43, 44, 51, 58, 59, 62, 63, 64, 67, 72, 73, 80, 84, 86, 103, 106, 113, 115, 120, 131, 137, 144, 146, 163, 164, 166, 170, 171, 173, 174, 176, 179, 182, 183, 187, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 227, 239, 240, 242, 244], "sample_filt": 67, "sample_mask": [208, 213], "sample_r": 67, "sampler": [32, 59, 218, 219, 220, 221], "samples_loc": [0, 182], "samuel": 62, "sara": 0, "satellit": 58, "satisfi": [152, 154, 157, 158], "satur": [174, 179], "save": [0, 2, 5, 6, 14, 15, 16, 18, 19, 24, 26, 27, 36, 37, 38, 39, 42, 43, 44, 45, 47, 50, 63, 64, 65, 66, 70, 71, 72, 84, 86, 121, 125, 131, 134, 142, 144, 164, 166, 173, 174, 178, 179, 183, 185, 218, 222, 224, 235, 237, 240, 244, 245, 246, 247, 248], "save_chain": [218, 219, 220, 221], "save_dir": [2, 5, 6, 11, 14, 24, 25, 26, 27, 36, 37, 38, 39, 42, 43, 44, 46, 47, 50, 72, 244, 245, 247], "save_fn": [246, 248], "save_fold": [5, 24, 26, 45, 222], "save_iter": 216, "save_metadata_to_cach": 67, "save_model": [64, 224], "save_path": [2, 14, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 64, 164, 173, 178, 183, 185, 224], "sbr": 8, "scalar": [52, 61, 64, 91, 172, 203, 224], "scale": [0, 2, 5, 6, 11, 14, 18, 19, 24, 25, 26, 27, 35, 37, 38, 39, 42, 45, 46, 47, 84, 119, 121, 124, 134, 211, 224, 225, 233], "scale_out": 104, "scan": [16, 48, 63, 64, 67, 77, 87, 116, 117, 131, 139, 144, 152, 171, 174, 179, 187, 195, 235, 237, 240], "scanvic": 35, "scatter": [0, 4, 58], "scatter_plot": 0, "scene": [8, 35, 71, 172, 184], "schedul": [2, 14, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 64, 217, 224], "scheme": [0, 36, 37], "schlemper": 209, "sci": 122, "scienc": 152, "score": [11, 29, 32, 33, 146], "scoreprior": [29, 33, 59, 219, 220, 221], "scratch": [36, 37, 38, 39, 64], "script": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47], "scunet": 51, "seamlessli": [4, 54, 238], "search": [21, 22], "second": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 56, 58, 111, 129, 132, 139, 170, 173, 174, 176, 177, 184], "secondli": 31, "section": 31, "see": [0, 7, 8, 13, 25, 29, 32, 33, 39, 43, 44, 46, 52, 53, 55, 56, 58, 60, 64, 73, 80, 82, 85, 86, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 118, 120, 121, 122, 123, 126, 129, 130, 132, 133, 150, 151, 160, 164, 173, 174, 179, 184, 185, 187, 208, 209, 211, 213, 222, 223, 224, 225, 227, 230, 231, 232, 233, 234, 235, 236, 237, 244, 248], "seed": [4, 5, 6, 7, 11, 13, 14, 17, 18, 19, 24, 25, 26, 27, 33, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 164, 166, 168, 170, 173, 176, 183, 185, 187, 215, 216, 217, 219], "seek": 17, "segment": 65, "select": [0, 5, 9, 18, 19, 24, 25, 26, 27, 36, 42, 43, 44, 46, 47, 66, 129, 141, 208, 209, 210, 212, 213], "self": [0, 5, 8, 12, 22, 25, 26, 29, 35, 40, 45, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 77, 79, 80, 82, 86, 88, 89, 90, 100, 110, 124, 131, 134, 137, 142, 144, 164, 166, 168, 173, 174, 176, 178, 179, 181, 183, 185, 215, 219, 226, 227, 229, 235, 237, 240], "selfexsr": 70, "semi": 58, "semigroup": 225, "send": 49, "sens": [0, 2, 15, 16, 32, 44, 48, 50, 63, 64, 68, 72, 73, 77, 80, 87, 95, 96, 103, 131, 137, 144, 149, 157, 162, 164, 165, 166, 167, 168, 169, 171, 173, 174, 176, 177, 179, 180, 181, 185, 187, 193, 208, 209, 212, 213, 235, 237, 240, 242, 244, 247], "sensit": [88, 89, 90], "sensor": [73, 80, 164, 174, 177, 178, 179, 187], "sensor_model": [174, 179], "separ": [21, 127], "seq": [31, 32], "seq_next": 32, "sequenc": [0, 17, 31, 109, 182, 185, 203, 216, 217, 248], "sequenti": [102, 103, 207], "seri": 110, "serv": [56, 125], "server": [49, 62], "set": [0, 4, 6, 7, 9, 11, 13, 17, 21, 26, 29, 30, 31, 33, 35, 42, 43, 44, 45, 47, 53, 54, 58, 59, 64, 67, 68, 71, 72, 73, 74, 75, 77, 79, 80, 82, 86, 87, 92, 94, 107, 108, 109, 110, 114, 119, 120, 121, 125, 134, 137, 140, 146, 149, 151, 152, 153, 159, 170, 171, 173, 174, 175, 176, 179, 180, 181, 182, 188, 189, 210, 219, 221, 222, 225], "set14": 70, "set14_sr": 70, "set3": 6, "set3c": [5, 6, 14, 18, 19, 24, 25, 26, 42, 46, 47], "set_cov": 159, "set_cov_reg": 159, "set_descript": 22, "set_weight": 159, "setup": [64, 224], "setup_train": [64, 224], "setweight": 0, "sever": [17, 187, 195], "sfx": 176, "shannon": [4, 207], "shape": [0, 4, 5, 7, 11, 13, 17, 19, 21, 22, 30, 31, 32, 33, 43, 44, 53, 56, 67, 104, 107, 111, 112, 116, 117, 119, 121, 122, 123, 125, 128, 132, 134, 147, 159, 160, 164, 170, 173, 176, 177, 183, 185, 197, 200, 204, 205, 207, 208, 209, 211, 213, 225, 226, 227, 228, 229, 230, 231, 232, 233, 238, 244, 248], "share": 44, "sharpen": 10, "shear": [35, 208], "shelf": 52, "shepp": 11, "shepplogan": [11, 27], "shepplogandataset": 45, "shift": [11, 35, 53, 174, 190, 225], "shift_max": [225, 228, 230, 231, 232, 233], "short": [14, 46], "should": [0, 7, 8, 11, 25, 27, 36, 42, 56, 64, 65, 67, 70, 71, 72, 78, 84, 86, 88, 89, 90, 93, 101, 104, 106, 108, 115, 116, 117, 119, 120, 121, 125, 144, 150, 152, 154, 157, 158, 164, 170, 172, 174, 175, 176, 177, 182, 185, 187, 190, 194, 195, 207, 211, 212, 215, 217, 219, 221, 222, 223, 235, 236, 237, 244, 248], "show": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 17, 18, 19, 24, 25, 27, 29, 30, 31, 33, 35, 36, 37, 38, 39, 42, 43, 44, 47, 58, 64, 72, 129, 133, 186, 222, 244, 245, 246, 247], "show_progress_bar": [2, 14, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 64, 72, 133, 222, 224], "showcas": 11, "shown": [0, 8, 45, 52, 246], "shuffl": [2, 5, 6, 14, 22, 24, 26, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 50, 107, 114], "shutil": [65, 66, 70, 71], "siam": [110, 122], "side": [78, 248], "sigma": [4, 5, 7, 8, 9, 11, 12, 13, 17, 18, 19, 21, 24, 25, 26, 27, 29, 30, 31, 32, 33, 42, 45, 46, 47, 50, 51, 52, 55, 56, 58, 59, 84, 88, 89, 101, 102, 107, 109, 110, 111, 113, 115, 119, 120, 121, 124, 130, 132, 137, 142, 145, 146, 152, 156, 168, 171, 177, 179, 180, 184, 188, 193, 211, 212, 214, 215, 216, 217, 220, 221, 235], "sigma2_nois": 29, "sigma_": 188, "sigma_d": 29, "sigma_denois": [9, 24, 26, 33, 36, 42, 46, 47, 142, 145, 146], "sigma_dict": 214, "sigma_i": [32, 193], "sigma_max": [188, 214], "sigma_min": [188, 214], "sigma_n": 217, "sigma_nois": 31, "sigma_sq": [111, 132], "sigma_t": [31, 32], "sigma_tild": 32, "sigma_x": 193, "sigmagener": [58, 212], "sigmat": 32, "sigmoid": 118, "sign": [135, 136, 164], "signal": [4, 6, 12, 13, 52, 53, 55, 61, 64, 68, 72, 73, 79, 80, 83, 87, 100, 134, 143, 146, 149, 164, 166, 174, 177, 178, 179, 183, 184, 187, 223, 239], "signific": [29, 49], "significantli": 45, "silent": [78, 101, 104, 106, 115, 116, 117, 120, 194, 195], "sim": [2, 21, 22, 32, 33, 73, 84, 88, 89, 90, 95, 96, 97, 98, 99, 113, 164, 171, 180, 183, 188, 189, 211, 221], "simeq": 32, "similar": [11, 35, 58, 61, 76, 85, 164, 173, 178, 183, 185, 203, 225, 238], "similarli": [10, 46, 50, 56, 144], "simlarli": 0, "simpl": [0, 2, 5, 6, 9, 12, 13, 14, 25, 29, 30, 33, 37, 38, 39, 45, 47, 58, 64, 96, 97, 99, 101, 103, 170, 176, 222], "simplest": 57, "simpli": [2, 22, 31, 32, 44, 51, 54, 58, 190], "simplic": [0, 2, 31, 42, 47], "simul": [58, 232], "simultan": 173, "sin": 193, "sinc": [2, 7, 29, 32, 33, 54, 78, 101, 104, 106, 115, 116, 117, 120, 125, 133, 134, 135, 164, 185, 194, 195], "sine": 164, "singl": [4, 9, 15, 16, 17, 25, 30, 35, 36, 38, 42, 43, 44, 45, 46, 47, 51, 52, 56, 59, 61, 63, 67, 72, 82, 119, 125, 129, 139, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163, 170, 174, 176, 179, 184, 185, 207, 235, 236, 237, 238, 240, 244, 246], "single_pixel": 25, "singlecoil": 67, "singlephotonlidar": 8, "singlepixelcamera": [13, 25], "singular": [12, 29, 30, 58, 163, 166, 170, 176, 185, 215], "sinogram": 13, "site": [4, 224], "situat": [4, 17], "size": [0, 4, 7, 8, 11, 13, 14, 17, 22, 24, 26, 29, 31, 32, 33, 36, 42, 43, 44, 45, 46, 53, 55, 56, 58, 60, 61, 66, 69, 70, 72, 76, 77, 81, 83, 85, 86, 88, 89, 90, 91, 92, 94, 104, 105, 106, 108, 109, 111, 115, 118, 121, 128, 129, 131, 132, 133, 134, 135, 137, 140, 141, 143, 149, 152, 156, 159, 161, 162, 163, 164, 166, 169, 170, 173, 174, 175, 176, 177, 179, 182, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 199, 200, 204, 205, 206, 207, 208, 209, 211, 213, 214, 220, 221, 234, 238, 239, 241, 242, 244, 246], "skew": [225, 230], "skew_max": [225, 230, 231, 232, 233], "skip": [32, 124], "slice": [67, 176], "slice_ind": 67, "slicesamplefileidentifi": 67, "slide": 115, "slow": [2, 108, 169], "slower": 4, "small": [7, 17, 22, 35, 39, 42, 47, 56, 89, 90, 111, 122, 128, 132, 149, 160, 187, 195], "smaller": [0, 5, 18, 19, 26, 56, 86, 109, 131, 144, 159, 162, 169, 177, 186, 196, 199, 206, 220, 221], "smolyakov": [122, 123], "smooth": [44, 143], "snippet": 0, "so": [0, 4, 11, 12, 32, 47, 170, 176, 208, 209, 232], "soft": [9, 16, 17, 44, 46, 48, 63, 64, 65, 68, 72, 77, 87, 125, 126, 131, 135, 137, 144, 149, 154, 157, 164, 174, 179, 235, 237, 240, 244, 247], "softplu": [107, 114], "softwar": [122, 123], "solut": [0, 11, 12, 17, 18, 19, 56, 60, 123, 125, 126, 129, 133, 139, 164, 174, 187, 234], "solv": [2, 11, 26, 31, 32, 42, 46, 52, 56, 60, 62, 108, 122, 123, 129, 133, 152, 160], "solver": 147, "some": [0, 4, 7, 12, 13, 18, 19, 29, 32, 51, 52, 53, 54, 56, 58, 60, 61, 67, 77, 119, 141, 164, 174, 177, 179, 187], "sometim": 60, "somewhat": 7, "soon": 49, "sor": 164, "sort": 58, "sota": 59, "sourc": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 49, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "source_radiu": [187, 195], "sourcetensor": [9, 13, 31, 43, 46], "space": [0, 2, 4, 13, 22, 35, 36, 45, 58, 67, 101, 111, 132, 141, 182, 186, 187, 195, 208, 209, 213], "spacevaryingblur": 4, "spacial": 0, "spars": [0, 13, 102, 182, 194, 195, 203], "sparsiti": [0, 17, 19], "spatial": [0, 4, 186], "special": [230, 231, 232, 233], "specif": [4, 5, 12, 24, 26, 27, 58, 60, 67, 92, 94, 129, 130, 133], "specifi": [0, 4, 5, 13, 18, 19, 24, 25, 26, 27, 46, 47, 58, 66, 92, 94, 95, 96, 97, 98, 99, 110, 144, 170, 176, 208, 213, 224, 248], "spectral": [74, 75, 158, 174, 178], "spectral_method": [11, 178], "speed": [2, 12, 45, 72, 123], "sphinx": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47], "split": [21, 22, 24, 36, 42, 46, 47, 56, 66, 67, 72, 79, 82, 84, 86, 111, 122, 123, 130, 132, 134, 139, 150, 152, 153, 156, 217, 235, 236, 237], "split_ratio": 86, "sqrt": [0, 11, 29, 30, 31, 32, 33, 44, 83, 122, 123, 128, 164, 185, 211, 216, 217, 221, 239], "squar": [5, 14, 31, 46, 56, 64, 79, 80, 82, 86, 87, 88, 89, 90, 93, 106, 160, 187, 207, 223], "sr": 121, "src": [4, 8], "ss": 64, "stabil": [33, 160], "stabilis": 220, "stabl": [244, 248], "stack": [15, 16, 53, 63, 165, 166, 169, 174, 177, 179, 229, 238, 240, 244], "stage": [119, 120], "standalon": 51, "standard": [2, 5, 8, 10, 11, 13, 17, 18, 19, 21, 22, 24, 25, 27, 30, 31, 32, 33, 46, 50, 51, 52, 53, 55, 56, 60, 84, 87, 88, 89, 97, 109, 111, 119, 129, 130, 132, 137, 160, 161, 168, 171, 172, 177, 180, 184, 188, 193, 211, 220, 221, 235, 236, 237, 250], "standart": [26, 27, 150], "star": [60, 186, 206, 234], "start": [0, 12, 36, 37, 38, 39, 139], "state": [0, 62, 64, 65], "state_dict": [2, 9, 35, 36, 37, 38, 39, 46, 64], "static": [13, 32, 58, 122, 123, 125], "stationari": 58, "statist": [59, 84, 219, 220, 221], "std": [30, 33], "stem": 8, "step": [0, 2, 4, 11, 13, 17, 18, 19, 22, 24, 25, 26, 27, 29, 33, 36, 45, 51, 52, 56, 58, 60, 64, 84, 86, 114, 124, 129, 133, 134, 135, 139, 143, 150, 152, 156, 161, 170, 186, 187, 207, 208, 209, 210, 211, 212, 213, 214, 217, 220, 221, 234, 235, 236, 237], "step_ratio_d": 224, "step_siz": [2, 14, 29, 33, 36, 37, 38, 39, 42, 46, 47, 161, 219, 220, 221], "steplr": [2, 14, 36, 37, 38, 39, 42, 45, 46, 47], "stepsiz": [0, 5, 9, 11, 18, 19, 24, 25, 26, 27, 36, 42, 43, 44, 46, 47, 52, 56, 60, 123, 129, 131, 133, 134, 135, 136, 137, 144, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158, 235, 236, 237], "stepsize_du": [46, 56], "stepsize_int": [131, 144], "still": 58, "stochast": [55, 120, 121, 174, 179, 216, 220], "stop": [5, 7, 24, 25, 26, 103, 108, 129, 130, 133, 159, 160, 161], "stopping_criterion": 159, "storag": [9, 36, 37, 38, 39], "store": [56, 58, 67, 129, 133, 139, 162, 163, 164, 166, 169, 170, 183, 185, 186, 214, 219], "str": [14, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 64, 65, 66, 67, 68, 70, 71, 72, 76, 81, 85, 92, 93, 94, 95, 96, 97, 98, 99, 107, 109, 110, 111, 113, 114, 119, 120, 121, 124, 125, 126, 127, 129, 132, 140, 149, 150, 159, 162, 163, 164, 165, 169, 177, 183, 184, 185, 186, 187, 190, 194, 195, 196, 198, 199, 201, 206, 207, 211, 212, 214, 216, 217, 222, 224, 225, 227, 230, 231, 232, 233, 235, 236, 237, 241, 242, 244, 245, 246, 247, 248], "strategi": [13, 129, 208, 213], "strength": [29, 33, 158, 175], "stretch": [225, 230], "stride": [103, 107, 114], "strideconv": [107, 114], "string": [150, 235, 236, 237], "structur": [12, 50, 58, 65, 66, 67, 70, 71, 85, 107, 170, 176], "structural_similar": 85, "style": 49, "sub": [43, 149], "sub_net_s": [22, 140], "subband": 125, "subclass": [25, 45, 78, 101, 104, 106, 115, 116, 117, 120, 194, 195], "subgroup": [53, 225, 230, 231, 232, 233], "subject": 17, "submit": 49, "submodul": 53, "subnetwork": [22, 140], "subpackag": 50, "subplot": [8, 31], "subsampl": [13, 164, 169, 170, 176, 185], "subset": [36, 38, 39, 173, 210], "substract": 238, "success": 52, "successfulli": [2, 35, 65, 66, 70, 71], "suffic": 4, "suffici": [32, 37, 129], "suggest": [22, 31, 32, 62, 119, 134], "suit": 104, "sum": [11, 22, 30, 32, 33, 44, 53, 56, 58, 139, 141, 149, 185, 212, 229, 238], "sum_": [17, 22, 37, 43, 84, 86, 113, 128, 186, 206], "sum_i": [0, 111, 132, 141], "summar": [51, 55], "summat": 159, "sup": 2, "supadversarialdiscriminatorloss": [2, 92, 224], "supadversarialgeneratorloss": [2, 94, 224], "super": [0, 5, 12, 16, 25, 28, 29, 35, 45, 48, 63, 64, 66, 68, 71, 72, 73, 77, 87, 110, 112, 114, 129, 131, 137, 142, 144, 145, 150, 169, 171, 174, 179, 207, 219, 222, 227, 235, 237, 240, 247], "supervis": [2, 14, 35, 40, 42, 43, 44, 45, 46, 47, 62, 63, 64, 68, 72, 73, 77, 79, 80, 82, 84, 86, 87, 88, 89, 90, 95, 96, 100, 110, 124, 131, 137, 142, 144, 166, 168, 173, 174, 176, 179, 181, 223, 226, 227, 229, 235, 237, 240], "suploss": [2, 14, 42, 43, 44, 45, 46, 47, 223, 224], "support": [17, 102, 140, 149, 196, 197, 199, 200, 204, 205, 208, 209, 213, 224], "suptitl": [4, 17, 31, 43, 44, 244], "sure": [16, 33, 40, 49, 63, 64, 68, 72, 77, 88, 89, 90, 100, 124, 166, 168, 174, 179, 181, 240], "suregaussianloss": [39, 53], "surepgloss": 39, "surepoissonloss": 39, "surpris": 7, "svd": [12, 166, 173], "swin": [120, 121], "swinir": 51, "swz30": 51, "synchron": [5, 6, 14, 24, 25, 26, 27, 36, 37, 38, 39, 42, 43, 44, 46, 47, 64], "synthes": [4, 207], "synthesi": 120, "synthet": 51, "system": [55, 58, 133, 160], "t": [2, 6, 8, 13, 22, 27, 31, 32, 35, 43, 44, 53, 58, 65, 84, 109, 115, 122, 123, 133, 143, 146, 158, 170, 172, 174, 184, 190, 208, 209, 211, 213, 216, 217, 222, 234, 246, 248], "t1": 17, "t10k": [39, 43], "t_g": [73, 113], "t_hist": 133, "t_i": 31, "t_im1": 31, "t_max": 45, "tabl": [36, 43, 44, 49, 55], "tachella": 62, "tag": [43, 56, 121, 129], "tail": 209, "take": [13, 22, 29, 31, 32, 39, 51, 53, 56, 64, 65, 66, 67, 70, 71, 78, 89, 90, 101, 104, 106, 107, 109, 115, 116, 117, 120, 127, 132, 133, 139, 140, 141, 187, 194, 195, 208, 224], "taken": [0, 49, 105, 106, 112, 147, 209, 246], "tangent": 7, "tanh": 103, "taohuang2018": 82, "tar": [64, 71], "target": [0, 67, 87, 182], "task": [0, 119], "tau": [0, 18, 19, 25, 39, 46, 88, 89, 90, 123, 129, 152], "tau1": 89, "tau2": 89, "tau_1": 89, "tau_2": 89, "teboul": 123, "techniqu": 58, "telescop": 0, "templat": 77, "tend": [0, 164], "tensor": [0, 4, 9, 10, 11, 12, 13, 25, 26, 31, 32, 43, 45, 46, 50, 56, 58, 61, 64, 69, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238, 239, 241, 242, 243, 244, 246, 248, 249, 250, 251], "tensor_s": [7, 13, 14, 19, 21, 30, 32, 33, 37, 46, 56, 58, 86, 137, 166, 173, 215, 217], "tensorlist": [10, 174, 177, 179, 243, 249, 250, 251], "tensorshap": 4, "term": [0, 5, 9, 18, 19, 24, 25, 26, 27, 31, 32, 36, 42, 43, 44, 46, 47, 52, 55, 56, 60, 111, 122, 123, 128, 129, 130, 131, 132, 133, 135, 136, 139, 144, 145, 148, 150, 152, 217, 235, 236, 237], "terminologi": 139, "terri": [0, 62], "test": [2, 5, 11, 12, 24, 26, 49, 50, 64, 67, 68, 70, 71, 72, 84, 86, 103, 107, 108, 110, 114, 119, 120, 126, 174, 244], "test_base_dataset": [37, 42, 43, 44, 46, 47], "test_batch_s": [14, 42, 43, 44, 45, 46, 47], "test_dataload": [2, 5, 14, 24, 26, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 64, 222], "test_datapoint": [37, 38, 39, 43, 44, 72], "test_dataset": [2, 5, 6, 14, 24, 26, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 72], "test_dataset_nam": [14, 42, 46, 47], "test_img": [21, 22], "test_psnr": [14, 46, 222], "test_sampl": [43, 44], "test_std_psnr": 222, "test_transform": [14, 42, 46, 47], "text": [2, 17, 18, 19, 35, 43, 44, 83, 84, 88, 90, 95, 96, 97, 98, 99, 113, 129, 134, 135, 137, 149, 158, 164, 166, 173, 178, 187, 188, 191, 192, 214, 239], "tgv": 122, "th": [17, 22, 122, 123, 125, 126, 128, 136, 140, 221], "than": [0, 5, 6, 9, 13, 26, 31, 43, 46, 56, 61, 131, 144, 159, 162, 164, 169, 174, 177, 182, 185, 186, 187, 190, 196, 199, 206, 220, 221, 244], "thank": 4, "thei": [29, 44, 51, 53, 54, 58, 60, 64, 129, 144, 215], "them": [16, 42, 43, 44, 51, 53, 64, 78, 101, 104, 106, 115, 116, 117, 120, 125, 174, 194, 195, 212, 248], "themselv": [2, 224], "theorem": [4, 32, 60, 207, 234], "theoret": 174, "theori": [4, 56, 122, 123, 207], "therefor": 11, "theta": [7, 12, 14, 22, 37, 52, 58, 108, 193, 194, 195, 212, 216, 217], "theta2": 58, "theta_max": [35, 225, 230, 231, 232, 233], "theta_z_max": [225, 230, 231, 232, 233], "thi": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 24, 25, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 80, 84, 86, 88, 89, 90, 93, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 141, 144, 146, 151, 156, 159, 162, 164, 169, 170, 172, 173, 174, 175, 176, 179, 181, 182, 183, 184, 185, 186, 187, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 219, 222, 223, 224, 234, 235, 237, 247, 248], "thin": [29, 218, 219, 220, 221], "third": [8, 184], "those": 149, "three": 152, "thres_conv": [5, 26, 129, 218], "thresh_conv": [219, 220, 221], "threshold": [9, 16, 17, 44, 46, 48, 63, 64, 68, 72, 77, 87, 125, 126, 129, 131, 135, 137, 144, 149, 154, 157, 164, 174, 179, 218, 219, 221, 235, 237, 240, 244, 247], "threshold_3d": 125, "threshold_nd": 125, "thresold_2d": 125, "thresold_func": 125, "through": [0, 4, 12, 32, 58, 73, 74, 75, 103, 182], "thu": [26, 45, 67, 108, 125, 126, 170, 176, 187, 219, 220, 221], "tight": [17, 244], "tight_layout": [8, 31], "tikhonov": 56, "tild": [32, 163, 164, 166, 170, 173, 174, 177, 179, 181, 187, 216], "tilt": [35, 225, 232], "time": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 52, 56, 67, 84, 86, 103, 109, 111, 129, 132, 164, 166, 169, 170, 173, 182, 183, 184, 208, 209, 213, 218, 222, 224, 248], "time_dim": 248, "time_pair": 32, "timestep": [31, 32, 109, 216, 217], "tip": [220, 221], "titl": [0, 2, 4, 7, 8, 10, 11, 12, 13, 18, 19, 25, 27, 29, 30, 31, 32, 33, 43, 44, 64, 186, 244, 246, 248], "tkbn": 0, "to_complex_denois": [11, 51], "to_logimag": 0, "to_numpi": 239, "togeth": 53, "toi": 42, "tol": [0, 56, 74, 75, 160, 161, 174, 179], "tol_int": [131, 144], "toler": [2, 74, 75, 103, 160, 161, 174, 179], "tomograph": 57, "tomographi": [16, 23, 28, 45, 51, 63, 64, 69, 110, 129, 131, 132, 137, 138, 140, 141, 142, 144, 150, 166, 168, 171, 174, 175, 179, 189, 239, 240, 242, 244, 245], "too": 224, "tool": 0, "toolbox": [4, 24, 58], "top": [0, 14, 16, 25, 29, 37, 39, 45, 46, 55, 60, 88, 89, 90, 100, 125, 126, 129, 131, 138, 143, 152, 163, 164, 166, 170, 174, 177, 178, 179, 187, 190, 246], "topk": [125, 126], "torch": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 56, 58, 60, 61, 64, 69, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 107, 108, 110, 111, 113, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251], "torchist": 203, "torchkbnufft": [0, 182], "torchvis": [2, 5, 6, 14, 18, 19, 24, 26, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 50, 65, 66, 67, 70, 71, 73], "torso": 109, "total": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 62, 63, 64, 80, 91, 101, 119, 122, 123, 125, 129, 131, 137, 144, 147, 150, 163, 166, 171, 174, 179, 208, 228, 239, 240, 244, 245], "totalloss": [2, 14, 22, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 64], "totensor": [2, 5, 6, 14, 18, 19, 24, 26, 35, 37, 38, 39, 42, 43, 44, 46, 47, 50, 67], "touch": 62, "tour": [15, 16, 62, 63, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 176, 177, 179, 180, 181, 185, 186, 187, 193, 207, 208, 209, 210, 211, 212, 213, 240, 242, 244], "toward": [18, 19, 203], "tqdm": [22, 31, 32, 64], "track_running_stat": 103, "tracker": [49, 62], "tradit": [0, 109], "train": [4, 5, 6, 9, 11, 15, 16, 24, 25, 26, 27, 31, 32, 35, 50, 51, 53, 54, 58, 59, 60, 62, 63, 64, 66, 67, 68, 72, 76, 77, 84, 85, 86, 87, 92, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 109, 110, 112, 114, 118, 119, 120, 124, 146, 166, 173, 174, 179, 219, 220, 221, 222, 224, 235, 237, 240, 247], "train_base_dataset": [37, 42, 43, 44, 46, 47], "train_batch_s": [14, 42, 43, 44, 45, 46, 47], "train_dataload": [2, 14, 22, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 64, 223, 224], "train_datapoint": [5, 14, 24, 26, 36, 37, 38, 39, 42, 43, 44, 46, 47, 72], "train_dataset": [2, 5, 6, 14, 22, 24, 26, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 72], "train_dataset_nam": [14, 36, 38, 39, 42, 43, 44, 45, 46, 47], "train_img": 22, "train_test_transform": [43, 44], "train_transform": [14, 42, 46, 47], "trainabl": [2, 9, 14, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 60, 82, 84, 86, 88, 89, 90, 124, 235, 237], "trainable_param": [9, 36, 42, 43, 44, 46, 47, 60, 235, 237], "trainer": [2, 14, 22, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 53, 61, 223, 224], "trajectori": [4, 211], "transact": [45, 102], "transform": [0, 2, 5, 6, 13, 14, 16, 17, 18, 19, 22, 24, 25, 26, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 50, 51, 58, 63, 64, 65, 66, 67, 69, 70, 71, 73, 77, 79, 102, 113, 119, 121, 124, 125, 126, 149, 164, 166, 170, 173, 174, 176, 179, 182, 185, 187, 194, 195, 225, 226, 227, 228, 230, 231, 232, 233, 240, 242, 244], "transform_data": 50, "transform_kspac": 67, "transform_target": 67, "transformerblock": 119, "translat": [35, 36, 73, 118, 225, 228, 230, 231, 233], "transmiss": 172, "transpos": [10, 12, 100, 107, 114, 129, 131, 133, 164, 166, 174, 177, 187, 198, 199, 200, 201], "trick": 32, "trigger": [4, 8], "trivial": [29, 172, 173], "true": [0, 2, 4, 5, 6, 7, 9, 11, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 52, 54, 56, 60, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 80, 83, 84, 85, 86, 100, 101, 103, 108, 109, 110, 113, 115, 116, 117, 118, 119, 121, 124, 128, 129, 133, 139, 140, 143, 144, 149, 151, 152, 153, 159, 164, 169, 173, 174, 176, 181, 182, 185, 187, 190, 194, 195, 197, 200, 215, 216, 217, 218, 219, 222, 224, 234, 237, 239, 240, 244, 245, 246, 247, 248], "truli": [88, 89, 90], "truth": [2, 7, 14, 18, 19, 21, 22, 25, 27, 29, 30, 31, 32, 33, 35, 43, 44, 46, 53, 64, 67, 87, 95, 96, 129, 133, 222, 224, 234], "try": [0, 39, 43, 49, 62], "tun": 217, "tune": [22, 27, 158], "tupl": [0, 64, 104, 108, 112, 115, 121, 129, 133, 163, 164, 169, 170, 172, 173, 176, 177, 182, 183, 185, 190, 193, 206, 207, 208, 209, 211, 213, 218, 219, 220, 221, 222, 223, 224, 241, 242, 244, 246], "turn": [4, 17, 21, 32, 51, 60, 113, 218, 234, 235], "tutori": [31, 32, 60, 105, 106, 234], "tv": [16, 20, 44, 62, 63, 91, 122, 123, 129, 131, 137, 144, 147, 150, 163, 166, 171, 174, 179, 239, 240, 244, 245], "tv_smooth": 44, "tvdenois": 147, "tvprior": [18, 56, 123], "tweedi": [32, 33, 59, 146], "two": [2, 10, 21, 22, 31, 32, 36, 37, 38, 56, 67, 76, 82, 86, 131, 139, 144, 173, 174, 179, 187, 195, 210, 212, 229, 238], "tx_prev": 133, "ty": 129, "type": [2, 4, 44, 50, 58, 67, 113, 114, 164, 182, 183, 187, 194, 195, 206, 207, 208, 209, 210, 211, 212, 213, 214, 223, 224, 235, 237, 243, 249, 250, 251], "type_t": 109, "typic": [56, 58, 59, 92, 94, 146, 170, 176], "u": [2, 14, 25, 29, 31, 32, 37, 38, 39, 45, 55, 56, 60, 84, 88, 89, 90, 107, 116, 124, 128, 131, 134, 135, 137, 138, 139, 166, 174, 188, 189, 234], "u0": 45, "u2": [122, 123], "u_": [25, 46, 52, 133, 151, 152, 153, 154, 156, 157], "u_0": [129, 152], "u_adjoint": [29, 166], "u_init": [9, 46], "u_k": [25, 46, 52, 133, 152, 154, 156, 157], "uair": 97, "uairgeneratorloss": 2, "ubyt": [39, 43], "uc": 22, "ula": [16, 34, 63, 74, 110, 131, 137, 144, 146, 166, 171, 173, 174, 179, 219, 239, 240, 242, 244], "ula_mean": 29, "ula_var": 29, "ultim": 49, "ulyanov": [7, 108], "un": 104, "unadjust": [29, 33, 59, 220, 221], "unbias": [39, 88, 89, 90], "uncertainti": [16, 30, 34, 62, 63, 74, 110, 131, 137, 144, 146, 166, 171, 173, 174, 179, 219, 221, 239, 240, 242, 244], "under": [22, 43, 44, 58], "underli": [55, 109, 140], "undersampl": [13, 208, 209, 213], "underset": [0, 18, 19, 22, 46, 52, 56, 111, 122, 123, 125, 126, 129, 132, 134, 135, 137, 152, 174, 179], "understood": 7, "undesir": 141, "unet": [2, 14, 35, 37, 38, 39, 109, 120, 224], "unfold": [9, 36, 37, 42, 48, 62, 63, 64, 68, 72, 77, 87, 110, 116, 117, 125, 131, 134, 137, 142, 144, 166, 169, 171, 173, 174, 179, 222, 234, 235, 236, 237, 240, 247], "unfolded_build": [9, 36, 43, 44, 45, 46, 47, 60], "unfolded_dr": 47, "unfolded_pgd": [43, 44], "ungrid": 182, "unif": 103, "unifi": 55, "uniform": [0, 13, 182, 188, 189, 208, 209, 213, 233, 249], "uniformli": [51, 187, 214], "uniformnois": 22, "union": [0, 67, 182, 248], "uniqu": [122, 123], "unit": [10, 11, 12, 31, 164, 174], "unknown": [35, 172], "unless": 13, "unlik": [0, 102, 110, 218], "unnormalis": [209, 213], "unorgan": 84, "unrol": [2, 9, 36, 42, 43, 44, 45, 46, 47, 51, 60, 64, 222, 223, 234], "unsqueez": [0, 6, 12, 13, 17, 18, 19, 24, 26, 30, 33, 45, 131, 166, 186], "unsupadversarialdiscriminatorloss": [2, 92], "unsupadversarialgeneratorloss": [2, 94], "unsupervis": [2, 35, 37, 53, 84, 97, 98, 99, 105, 106, 225, 232], "untouch": 149, "up": [6, 9, 12, 22, 42, 43, 45, 47, 58, 64, 66, 109, 123, 225], "upcom": 4, "upconv": [107, 114], "updat": [22, 25, 26, 31, 32, 45, 46, 49, 56, 64, 123, 129, 133, 139, 151, 152, 153, 154, 155, 162, 163, 166, 170, 171, 175, 176, 179, 180, 181, 186, 189], "update_data_fidelity_fn": [129, 133], "update_metrics_fn": [129, 133], "update_paramet": [58, 84, 86, 162, 163, 166, 170, 171, 175, 176, 180, 181, 186, 189], "update_params_fn": [129, 133], "update_prior_fn": [129, 133], "upload": [7, 29, 30, 33], "upp": [202, 203], "upper": [202, 203], "upsampl": [107, 114, 121], "upsample_mod": [107, 114], "upscal": 121, "urban": [35, 71], "urban100": [2, 35, 71], "urban100_hr": 71, "urban100_inpainting_homography_model": 35, "urban100hr": [2, 35], "url": [4, 7, 9, 11, 13, 21, 22, 25, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 52, 121, 242], "us": [0, 2, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 65, 67, 70, 81, 84, 85, 86, 101, 102, 111, 112, 119, 120, 121, 123, 133, 135, 159, 170, 195, 197, 200, 202, 203, 206, 220, 223, 248], "usag": [53, 58, 119, 224, 244], "use_bicubic_init": 26, "use_checkpoint": 121, "use_fft": 169, "use_filt": 194, "use_fp16": 109, "use_sigmoid": 118, "user": [29, 56, 60, 64, 72, 107, 109, 110, 114, 120, 121, 150, 168, 177, 236, 237, 248], "userwarn": [0, 4, 8, 9, 13, 31, 43, 46], "usual": [0, 31, 32, 224], "usv": 29, "util": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 52, 64, 111, 132, 159, 160, 161, 164, 172, 174, 177, 179, 186, 187, 215, 217, 222, 223, 224, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "uv": 0, "uv_coordin": 0, "v": [12, 25, 29, 60, 129, 131, 133, 139, 166, 174, 178, 179, 234], "v0": [24, 121], "v_": 155, "v_adjoint": [12, 29, 166], "v_k": 25, "val": 66, "val_transform": [5, 6, 18, 19, 24, 26], "valid": [4, 19, 35, 51, 59, 66, 67, 131, 144, 162, 169, 177, 186, 196, 198, 199, 201, 206], "valu": [0, 7, 10, 11, 12, 13, 21, 29, 30, 31, 36, 39, 42, 43, 44, 51, 56, 58, 59, 61, 64, 67, 83, 88, 89, 90, 93, 108, 109, 111, 115, 121, 122, 127, 128, 129, 132, 133, 140, 146, 147, 149, 150, 159, 160, 163, 166, 170, 175, 176, 181, 185, 187, 195, 203, 212, 215, 217, 220, 221, 235, 236, 237, 239, 244], "vanilla": [16, 28, 48, 63, 64, 68, 72, 77, 87, 110, 129, 131, 137, 142, 144, 150, 169, 171, 174, 179, 187, 235, 237, 239, 240, 242, 244, 245, 247], "var": [30, 33, 219], "var_has_converg": 219, "varepsilon": [31, 32, 216, 217], "varepsilon_t": 217, "varga": 220, "vari": [4, 58, 66, 170, 186, 208, 209, 213, 248], "variabl": [5, 6, 9, 18, 19, 24, 25, 26, 27, 33, 39, 45, 46, 56, 89, 90, 103, 116, 117, 122, 123, 128, 129, 131, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 147, 148, 149, 152], "varianc": [29, 30, 31, 33, 59, 218, 219, 220, 221], "variant": [125, 126], "variat": [16, 20, 22, 62, 63, 91, 122, 123, 129, 131, 137, 144, 147, 150, 163, 166, 171, 174, 179, 239, 240, 244, 245], "variou": [2, 13, 30, 35, 39, 51, 53, 58, 59], "vector": [29, 55, 64, 75, 88, 89, 90, 103, 104, 108, 122, 125, 129, 166, 170, 174, 178, 179, 203, 209, 213, 221], "verbos": [0, 2, 5, 7, 11, 14, 18, 19, 22, 24, 25, 26, 27, 29, 30, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 56, 64, 72, 74, 75, 108, 122, 123, 129, 133, 159, 174, 215, 216, 217, 218, 219, 220, 221, 222, 224, 240], "verbose_individual_loss": [64, 224], "veri": [0, 2, 11, 22, 32, 224], "verif": 65, "verifi": [65, 66, 70, 71, 160, 170, 174, 176, 219, 221], "verify_split_dataset_integr": 66, "version": [11, 62, 65, 66, 67, 70, 71, 113, 122, 123, 223, 225, 226, 227, 228, 229, 238], "vertic": [51, 66, 91, 113, 208, 209, 213, 246], "vgg": 2, "vi": [14, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47], "via": [0, 5, 17, 21, 25, 29, 31, 32, 33, 38, 39, 50, 54, 57, 58, 59, 60, 62, 72, 80, 107, 109, 110, 111, 119, 120, 124, 132, 140, 146, 163, 164, 166, 170, 173, 174, 178, 179, 183, 185, 186, 187, 212, 229], "vid": 248, "vid_list": 248, "video": [170, 208, 209, 213, 248], "view": [5, 13, 22, 32, 33, 227, 248], "viridi": [0, 17], "virtual": [60, 73, 234], "visibl": 0, "vision": [0, 24, 130, 206], "visit": 32, "visual": [0, 32, 42, 43, 44, 45, 47, 64], "vjp": [174, 178, 179], "vol": [122, 123], "volum": 67, "volume_data": 17, "volume_sample_r": 67, "vrv": 29, "vu": [16, 28, 52, 63, 110, 129, 131, 137, 139, 142, 144, 150, 166, 171, 174, 179, 185, 239, 240, 242, 244, 245], "w": [0, 8, 13, 17, 24, 32, 44, 45, 53, 83, 108, 119, 121, 130, 143, 162, 163, 164, 170, 173, 174, 176, 182, 183, 184, 185, 186, 190, 191, 192, 196, 197, 199, 200, 206, 207, 208, 209, 213, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 244, 248], "w_k": [186, 206], "wa": [22, 32, 57, 95, 96, 98, 99, 102, 103, 104, 105, 106, 110, 112, 118, 119, 120, 121, 220], "wai": [2, 9, 36, 37, 38, 39, 49, 62, 64], "walk": 12, "wandb": [42, 45, 47, 64], "wandb_setup": [64, 224], "wandb_vi": [5, 14, 24, 26, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 64, 224], "wang": [35, 112, 225, 232], "want": [4, 12, 18, 19, 26, 58, 64, 74, 75], "warm": 123, "warn": 144, "wavdict": 17, "wavelet": [9, 16, 20, 43, 46, 63, 125, 126, 129, 131, 137, 144, 149, 150, 166, 171, 173, 174, 179, 239, 240, 244, 245], "waveletdenois": [9, 17, 46, 126, 149], "waveletdictdenois": 17, "waveletprior": [0, 17, 19, 43, 46], "we": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 65, 66, 70, 71, 74, 84, 86, 108, 109, 125, 133, 134, 135, 139, 174, 175, 178, 186, 190], "weight": [5, 9, 11, 14, 17, 21, 22, 24, 25, 26, 27, 32, 36, 37, 38, 39, 42, 43, 45, 46, 47, 64, 73, 80, 91, 92, 94, 95, 96, 97, 98, 99, 107, 109, 110, 111, 114, 119, 120, 121, 132, 140, 158, 159, 182, 203, 235, 237], "weight_adv": [92, 94, 95, 96, 97, 98, 99], "weight_decai": [2, 14, 35, 36, 37, 38, 39, 42, 44, 46, 47], "weight_mc": 97, "weiss": [22, 132, 206], "welcom": 49, "welford": 219, "well": [7, 10, 12, 18, 19, 32, 52, 53, 57, 58, 62, 73, 79, 80, 82, 86, 87, 104, 133, 139, 164, 174, 177, 187, 222, 235], "were": [35, 44], "wgan": [2, 53, 93], "what": 67, "when": [2, 4, 5, 13, 25, 26, 29, 32, 33, 38, 44, 49, 52, 54, 67, 80, 82, 84, 86, 108, 109, 123, 124, 131, 133, 140, 144, 159, 174, 181, 217], "where": [0, 2, 5, 7, 8, 11, 13, 14, 17, 18, 19, 21, 22, 24, 25, 29, 31, 32, 33, 37, 38, 39, 43, 44, 45, 46, 50, 52, 56, 58, 59, 60, 64, 65, 66, 70, 71, 72, 73, 74, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 97, 100, 108, 111, 122, 123, 125, 126, 128, 129, 131, 132, 133, 134, 136, 139, 140, 143, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 164, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 193, 195, 196, 197, 199, 200, 204, 205, 206, 208, 209, 211, 213, 214, 216, 217, 221, 225, 234, 235, 239, 244, 247], "wherea": [29, 31, 32, 52, 64, 84, 86, 164, 185, 193], "whether": [67, 74, 75, 93, 103, 116, 117, 118, 121, 122, 123, 129, 141, 150, 159, 203, 218, 234, 235, 236, 237, 241, 242, 247], "which": [5, 6, 9, 10, 11, 13, 17, 18, 19, 21, 22, 24, 26, 29, 30, 31, 32, 33, 36, 38, 39, 42, 43, 44, 46, 47, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 72, 74, 79, 80, 82, 86, 87, 88, 89, 90, 93, 103, 107, 110, 119, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 163, 164, 169, 173, 174, 179, 182, 185, 187, 194, 195, 200, 203, 215, 216, 219, 222, 223, 224, 229, 230, 231, 232, 233, 235, 237, 241, 242, 246], "while": [2, 7, 11, 12, 36, 52, 56, 78, 101, 104, 106, 115, 116, 117, 120, 129, 159, 194, 195], "whilst": 224, "white": [21, 31, 32, 58, 162, 163, 169, 174], "whiten": 0, "whole": [21, 22, 37, 38, 39, 124, 132, 219], "whose": [56, 77, 172, 187, 246, 247], "why": [31, 32], "widehat": [17, 31, 32, 216, 217], "wider": 64, "width": [17, 67, 69, 109, 116, 117, 132, 170, 176, 187, 228, 244], "wiki": [4, 85, 160, 207], "wikimedia": [7, 29, 30, 33], "wikipedia": [4, 7, 13, 29, 30, 33, 85, 160, 207], "window": [115, 121], "window_s": 121, "wise": [2, 78, 172], "withbia": 119, "within": [51, 54, 58, 66, 67, 78, 101, 104, 106, 115, 116, 117, 120, 194, 195], "without": [35, 49, 58, 64, 67, 164, 177, 179, 187], "work": [0, 7, 8, 9, 13, 14, 26, 30, 31, 32, 43, 46, 108, 119], "worker": 72, "workflow": 49, "world": [7, 29, 30, 33, 35], "would": 0, "wrap": [36, 42, 43, 44, 47, 51, 65, 102], "wrapper": [24, 61, 70, 71], "write": [17, 18, 19, 26, 31, 32, 45, 54, 56, 64, 149, 216, 217], "writer": 248, "written": [53, 56, 129], "wv": [0, 9, 17, 19, 43, 46, 125, 126, 149], "wv_list": 0, "wvdim": [17, 125, 126, 149], "wx": 43, "x": [0, 2, 5, 6, 7, 8, 10, 11, 12, 13, 17, 18, 19, 22, 25, 26, 27, 29, 30, 31, 32, 33, 35, 37, 43, 44, 45, 46, 52, 53, 55, 56, 58, 59, 60, 64, 69, 72, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 101, 102, 104, 107, 109, 110, 111, 113, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 243, 248, 249, 250, 251], "x0": [31, 32, 45, 174], "x0_pred": 32, "x0_t": 32, "x2": [13, 122, 123], "x64": [4, 224], "x_": [17, 25, 29, 33, 43, 44, 46, 52, 56, 60, 129, 133, 139, 151, 152, 153, 154, 155, 156, 157, 158, 174, 217, 221, 235], "x_0": [129, 152], "x_adj": 58, "x_bar": 29, "x_cur": 17, "x_dagger": [58, 174], "x_est": 11, "x_gd_rand": 11, "x_gd_spec": 11, "x_grai": 4, "x_gt": [0, 11, 18, 19, 25, 27, 129, 133, 234], "x_hat": [17, 35, 52, 60, 237], "x_hist": 133, "x_i": 80, "x_in": 74, "x_init": [0, 9, 46, 129, 132, 133, 179, 216, 217, 219], "x_k": [25, 33, 43, 44, 46, 52, 56, 60, 129, 133, 139, 151, 152, 154, 155, 156, 157, 158, 221, 235], "x_lin": [7, 18, 19, 25, 27, 29, 30, 33], "x_model": [0, 18, 19, 25, 27], "x_n": 17, "x_net": [53, 64, 73, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 224], "x_noisi": 31, "x_out": 21, "x_phase": 11, "x_phase_gd_rand": 11, "x_phase_gd_spec": 11, "x_phase_pnp": 11, "x_phase_spec": 11, "x_pnp": 11, "x_prev": [17, 25, 129, 133], "x_prox": [31, 58], "x_prox_scal": 31, "x_rgb": 4, "x_sampl": 31, "x_sampled_sc": 31, "x_spec": 11, "x_stretch_factor_min": [225, 230, 231, 232, 233], "x_t": [32, 217, 225, 230, 231, 232, 233], "x_true": [31, 32], "x_tv": 18, "x_wv": 19, "xhat": [8, 17, 30, 31, 32, 129, 215, 217], "xlabel": 31, "xlin": [10, 12], "xlin2": 12, "xprox": 12, "xprox2": 12, "xset": [52, 55, 56, 58, 129, 131, 174, 179], "xt": 32, "xt_next": 32, "xxx": [50, 65, 66, 70, 71], "xxxxxxxxxxx": 67, "y": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 25, 27, 29, 30, 31, 32, 33, 35, 37, 38, 39, 43, 44, 45, 46, 52, 53, 55, 56, 58, 59, 60, 64, 72, 73, 75, 77, 78, 79, 80, 82, 84, 86, 87, 88, 89, 90, 92, 94, 97, 98, 99, 100, 103, 108, 109, 111, 116, 122, 123, 125, 126, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 143, 151, 152, 153, 154, 155, 158, 162, 163, 164, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 199, 200, 201, 206, 211, 215, 216, 217, 219, 221, 222, 223, 224, 225, 234, 235, 237, 248], "y1": 58, "y2": [12, 58], "y_": [8, 184], "y_1": [10, 86], "y_2": [10, 86], "y_bar": 29, "y_denois": 31, "y_hat": [97, 98, 99, 224], "y_i": [37, 80, 128], "y_in": 74, "y_scale": 31, "y_stretch_factor_min": [225, 230, 231, 232, 233], "y_t": 170, "yann": [39, 43], "yet": 7, "yield": [43, 44, 149], "ylabel": 31, "yosida": [59, 146], "you": [0, 2, 4, 6, 12, 16, 17, 30, 31, 32, 33, 36, 37, 38, 39, 42, 47, 49, 58, 62], "your": [2, 12, 15, 16, 25, 34, 49, 61, 62, 63, 68, 72, 92, 94, 115, 130, 131, 137, 144, 146, 163, 166, 168, 171, 174, 179, 219, 221, 239, 240, 242, 244], "yscale": 11, "yset": [52, 55, 56, 58, 129, 131, 174, 179], "yyi": 50, "yyyi": 64, "z": [0, 2, 7, 25, 45, 52, 56, 58, 59, 84, 88, 89, 90, 103, 108, 133, 135, 138, 139, 143, 146, 151, 153, 154, 166, 169, 171, 174, 179, 180, 182, 188, 221, 225], "z10": 207, "z11": 207, "z4": 207, "z5": [4, 207], "z6": [4, 207], "z7": 207, "z8": 207, "z9": 207, "z_": [17, 25, 29, 46, 56, 60, 129, 139, 151, 152, 153, 154, 221, 235], "z_0": 152, "z_i": 84, "z_k": [25, 33, 46, 56, 60, 129, 139, 151, 152, 153, 154, 235], "z_p": 17, "z_prev": 25, "zenodo": [187, 195], "zernik": [4, 207], "zernike_polynomi": [4, 207], "zero": [0, 4, 8, 10, 12, 13, 22, 29, 31, 32, 44, 58, 61, 64, 125, 128, 159, 162, 163, 169, 173, 174, 182, 186, 209, 226, 251], "zero_grad": [22, 64], "zeros_lik": [13, 17, 44, 45, 56, 174], "zeta": [31, 217], "zhang": [5, 24, 110, 130], "zhou": 31, "zip": [6, 14, 16, 18, 24, 32, 46, 47, 66, 70], "zoom": [225, 246], "zoom_factor_min": [225, 230, 231, 232, 233], "zoran": [22, 132], "zuo": [24, 130], "zygalaki": 220, "\u00f6ktem": 45}, "titles": ["Radio interferometric imaging with deepinverse", "Computation times", "Imaging inverse problems with adversarial networks", "Computation times", "A tour of blur operators", "Image deblurring with custom deep explicit prior.", "Creating your own dataset", "Reconstructing an image using the deep image prior.", "Single photon lidar operator for depth ranging.", "Saving and loading models", "Stacking and concatenating forward operators.", "Random phase retrieval and reconstruction methods.", "Creating a forward operator.", "A tour of forward sensing operators", "Training a reconstruction network.", "Computation times", "Examples", "3D wavelet denoising", "Image deblurring with Total-Variation (TV) prior", "Image inpainting with wavelet prior", "Computation times", "Expected Patch Log Likelihood (EPLL) for Denoising and Inpainting", "Patch priors for limited-angle computed tomography", "Computation times", "DPIR method for PnP image deblurring.", "PnP with custom optimization algorithm (Condat-Vu Primal-Dual)", "Regularization by Denoising (RED) for Super-Resolution.", "Vanilla PnP for computed tomography (CT).", "Computation times", "Building your custom sampling algorithm.", "Image reconstruction with a diffusion model", "Implementing DiffPIR", "Implementing DPS", "Uncertainty quantification with PnP-ULA.", "Computation times", "Image transformations for Equivariant Imaging", "Self-supervised learning with Equivariant Imaging for MRI.", "Self-supervised learning from incomplete measurements of multiple operators.", "Self-supervised denoising with the Neighbor2Neighbor loss.", "Self-supervised denoising with the SURE loss.", "Computation times", "Computation times", "Deep Equilibrium (DEQ) algorithms for image deblurring", "Learned Iterative Soft-Thresholding Algorithm (LISTA) for compressed sensing", "Learned iterative custom prior", "Learned Primal-Dual algorithm for CT scan.", "Unfolded Chambolle-Pock for constrained image inpainting", "Vanilla Unfolded algorithm for super-resolution", "Computation times", "How to Contribute", "Datasets", "Denoisers", "Iterative Reconstruction (PnP, RED, etc.)", "Loss", "Using multiple GPUs", "Math Notation", "Optim", "Other Reconstruction Methods", "Physics", "Diffusion Algorithms", "Unfolded Algorithms", "Utils", "DeepInverse: a Pytorch library for imaging with deep learning", "Computation times", "Trainer", "CBSD68", "DIV2K", "FastMRISliceDataset", "HDF5Dataset", "PatchDataset", "Set14HR", "Urban100HR", "generate_dataset", "EILoss", "FNEJacobianSpectralNorm", "JacobianSpectralNorm", "LPIPS", "Loss", "LpNorm", "MCLoss", "MOILoss", "NIQE", "Neighbor2Neighbor", "PSNR", "R2RLoss", "SSIM", "SplittingLoss", "SupLoss", "SureGaussianLoss", "SurePGLoss", "SurePoissonLoss", "TVLoss", "DiscriminatorLoss", "DiscriminatorMetric", "GeneratorLoss", "SupAdversarialDiscriminatorLoss", "SupAdversarialGeneratorLoss", "UAIRGeneratorLoss", "UnsupAdversarialDiscriminatorLoss", "UnsupAdversarialGeneratorLoss", "ArtifactRemoval", "AutoEncoder", "BM3D", "CSGMGenerator", "ConvDecoder", "DCGANDiscriminator", "DCGANGenerator", "DRUNet", "DeepImagePrior", "DiffUNet", "DnCNN", "EPLLDenoiser", "ESRGANDiscriminator", "EquivariantDenoiser", "GSDRUNet", "MedianFilter", "PDNet_DualBlock", "PDNet_PrimalBlock", "PatchGANDiscriminator", "Restormer", "SCUNet", "SwinIR", "TGVDenoiser", "TVDenoiser", "UNet", "WaveletDenoiser", "WaveletDictDenoiser", "to_complex_denoiser", "AmplitudeLoss", "BaseOptim", "DPIR", "DataFidelity", "EPLL", "FixedPoint", "IndicatorL2", "L1", "L1Prior", "L2", "LogPoissonLikelihood", "OptimIterator", "PatchNR", "PatchPrior", "PnP", "PoissonLikelihood", "Prior", "RED", "ScorePrior", "TVPrior", "Tikhonov", "WaveletPrior", "optim_builder", "ADMMIteration", "CPIteration", "DRSIteration", "FISTAIteration", "GDIteration", "HQSIteration", "PGDIteration", "SMIteration", "GaussianMixtureModel", "conjugate_gradient", "gradient_descent", "Blur", "BlurFFT", "CompressedSensing", "Decolorize", "DecomposablePhysics", "Demosaicing", "Denoising", "Downsampling", "DynamicMRI", "GaussianNoise", "Haze", "Inpainting", "LinearPhysics", "LogPoissonNoise", "MRI", "Pansharpen", "PhaseRetrieval", "Physics", "PoissonGaussianNoise", "PoissonNoise", "RadioInterferometry", "RandomPhaseRetrieval", "SinglePhotonLidar", "SinglePixelCamera", "SpaceVaryingBlur", "Tomography", "UniformGaussianNoise", "UniformNoise", "adjoint_function", "bicubic_filter", "bilinear_filter", "gaussian_blur", "IRadon", "Radon", "conv2d", "conv2d_fft", "conv3d", "conv_transpose2d", "conv_transpose2d_fft", "conv_transpose3d", "histogram", "histogramdd", "multiplier", "multiplier_adjoint", "product_convolution2d", "DiffractionBlurGenerator", "EquispacedMaskGenerator", "GaussianMaskGenerator", "GeneratorMixture", "MotionBlurGenerator", "PhysicsGenerator", "RandomMaskGenerator", "SigmaGenerator", "DDRM", "DPS", "DiffPIR", "DiffusionSampler", "MonteCarlo", "SKRock", "ULA", "test", "train", "AdversarialTrainer", "Homography", "Rotate", "Scale", "Shift", "Transform", "Affine", "Euclidean", "PanTiltRotate", "Similarity", "BaseDEQ", "BaseUnfold", "DEQ_builder", "unfolded_builder", "TensorList", "cal_psnr", "get_freer_gpu", "load_image", "load_url_image", "ones_like", "plot", "plot_curves", "plot_inset", "plot_parameters", "plot_videos", "rand_like", "randn_like", "zeros_like"], "titleterms": {"3d": 17, "A": [4, 13], "The": [0, 31, 32], "adjoint_funct": 190, "admmiter": 151, "advanc": 16, "adversari": [2, 16, 51, 53], "adversarialtrain": 224, "affin": 230, "algorithm": [5, 7, 17, 18, 19, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 42, 43, 44, 45, 47, 52, 59, 60], "all": 31, "ambientgan": 2, "amplitudeloss": 128, "an": [7, 19, 31, 52], "angl": 22, "appli": 8, "approxim": 32, "artifactremov": 100, "autoencod": 101, "back": 57, "base": [5, 6, 14, 17, 18, 19, 24, 25, 26, 36, 37, 38, 39, 42, 43, 44, 46, 47], "basedeq": 234, "baseoptim": 129, "baseunfold": 235, "basic": 16, "benefit": 12, "bicubic_filt": 191, "bilinear_filt": 192, "blur": [4, 5, 13, 18, 24, 58, 162], "blurfft": 163, "bm3d": 102, "brigg": 0, "build": 29, "cal_psnr": 239, "camera": 13, "carlo": [30, 59], "cbsd68": 65, "chain": 59, "chambol": 46, "class": [26, 29], "classic": 51, "comparison": 11, "complex": 51, "compress": [13, 43, 44, 58], "compressedsens": 164, "comput": [1, 3, 13, 15, 20, 22, 23, 27, 28, 34, 40, 41, 48, 63], "concaten": 10, "condat": 25, "condit": 2, "conjugate_gradi": 160, "constrain": 46, "construct": 11, "contribut": 49, "conv2d": 196, "conv2d_fft": 197, "conv3d": 198, "conv_transpose2d": 199, "conv_transpose2d_fft": 200, "conv_transpose3d": 201, "convdecod": 104, "correct": 11, "cpiter": 152, "creat": [6, 8, 12, 17, 29, 30, 33], "csgm": 2, "csgmgener": 103, "ct": [27, 45], "custom": [5, 12, 25, 26, 29, 44, 45], "data": [5, 6, 9, 14, 17, 18, 19, 24, 25, 26, 27, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 56], "datafidel": 131, "dataload": 6, "dataset": [2, 5, 6, 14, 18, 19, 24, 25, 26, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50], "dcgandiscrimin": 105, "dcgangener": 106, "ddrm": 215, "deblur": [5, 18, 24, 42], "decolor": [13, 165], "decompos": 12, "decomposablephys": 166, "deep": [5, 7, 42, 51, 52, 60, 62], "deepimageprior": 108, "deepinvers": [0, 62], "defin": [2, 5, 7, 9, 14, 25, 29, 30, 32, 33, 42, 43, 44, 45, 46, 47, 58], "definit": [22, 26], "degrad": [5, 6, 14, 18, 19, 24, 25, 26, 36, 37, 42, 43, 44, 45, 46, 47], "dehaz": 58, "demosa": [13, 167], "denois": [11, 13, 17, 21, 26, 30, 31, 32, 38, 39, 51, 168], "depend": 58, "depth": 8, "deq": 42, "deq_build": 236, "descent": 11, "develop": 62, "diffpir": [31, 217], "diffract": 4, "diffractionblurgener": 207, "diffunet": 109, "diffus": [30, 32, 59], "diffusionsampl": 218, "dip": 7, "discriminatorloss": 92, "discriminatormetr": 93, "distribut": 58, "div2k": 66, "dncnn": 110, "downsampl": 169, "dp": [32, 216], "dpir": [24, 130], "drsiter": 153, "drunet": 107, "dual": [25, 45], "dykstra": 17, "dynamicmri": 170, "eiloss": 73, "em": 22, "epll": [21, 22, 132], "eplldenois": 111, "equilibrium": [42, 60], "equispacedmaskgener": 208, "equivari": [35, 36, 51], "equivariantdenois": 113, "esrgandiscrimin": 112, "etc": 52, "euclidean": 231, "evalu": [5, 18, 19, 24, 25, 26, 27], "exampl": [16, 30, 64, 68, 69, 71, 72, 73, 74, 76, 77, 79, 80, 82, 83, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 124, 125, 126, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 157, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 193, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247], "expect": 21, "explicit": 5, "explor": [18, 19], "extens": 17, "fastmrislicedataset": 67, "featur": 62, "fidel": [31, 45, 56], "filter": [8, 57], "find": 62, "fistaiter": 154, "fixedpoint": 133, "fnejacobianspectralnorm": 74, "forward": [7, 8, 9, 10, 12, 13, 14, 22, 25, 27, 29, 30, 33, 46, 58], "from": [7, 11, 13, 29, 30, 33, 37], "fstep": 25, "function": 58, "gan": 2, "gaussian_blur": 193, "gaussianmaskgener": 209, "gaussianmixturemodel": 159, "gaussiannois": 171, "gditer": 155, "gener": [2, 4, 5, 6, 7, 8, 10, 11, 12, 14, 18, 19, 24, 29, 30, 31, 33, 36, 37, 38, 39, 42, 43, 44, 46, 47, 56, 58], "generate_dataset": 72, "generatorloss": 94, "generatormixtur": 210, "get": 62, "get_freer_gpu": 240, "gpu": 54, "gradient": [11, 43, 44], "gradient_desc": 161, "groundtruth": 0, "gsdrunet": 114, "gstep": 25, "haze": 172, "hd5dataset": 50, "hdf5dataset": 68, "help": 62, "histogram": 202, "histogramdd": 203, "homographi": 225, "how": 49, "hqsiter": 156, "imag": [0, 2, 4, 5, 6, 7, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 33, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 50, 52, 58, 62], "implement": [31, 32, 52], "import": 0, "incomplet": 37, "indicatorl2": 134, "initi": 11, "inpaint": [13, 19, 21, 46, 173], "instal": 62, "interferometr": [0, 58], "internet": [7, 11, 13, 29, 30, 33], "introduct": [53, 58], "invers": [2, 5, 18, 19, 24, 25, 27, 31, 32], "involv": 26, "iradon": 194, "iter": [17, 29, 43, 44, 45, 52, 56], "jacobianspectralnorm": 75, "knee": 36, "l1": 135, "l1prior": 136, "l2": 137, "langevin": 59, "lead": 62, "learn": [16, 36, 37, 43, 44, 45, 53, 57, 62], "librari": 62, "lidar": [8, 58], "like": 17, "likelihood": [21, 33], "limit": 22, "linear": [12, 58], "linearphys": 174, "list": 55, "lista": 43, "load": [4, 5, 6, 7, 9, 11, 13, 14, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 32, 33, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47], "load_imag": 241, "load_url_imag": 242, "log": 21, "logpoissonlikelihood": 138, "logpoissonnois": 175, "loop": 22, "loss": [38, 39, 53, 77], "low": [42, 47], "lpip": 76, "lpnorm": 78, "magnet": 58, "markov": 59, "match": 8, "math": 55, "mathemat": 55, "mcloss": 79, "mcmc": 33, "measur": [0, 7, 8, 11, 29, 30, 33, 37, 43, 44], "medianfilt": 115, "method": [11, 24, 57], "metric": 53, "mmse": 30, "model": [2, 7, 8, 9, 14, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 32, 33, 45, 46], "modul": 25, "moiloss": 80, "mont": [30, 59], "montecarlo": 219, "motion": 4, "motionblurgener": 211, "mri": [13, 36, 176], "multipl": [17, 37, 54], "multipli": 204, "multiplier_adjoint": 205, "natur": 0, "neighbor2neighbor": [38, 82], "network": [2, 14, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 51, 53], "new": 58, "niqe": 81, "nois": [7, 22, 29, 30, 33, 58], "noisi": [38, 39], "notat": 55, "ones_lik": 243, "oper": [0, 4, 5, 7, 8, 9, 10, 12, 13, 14, 17, 18, 19, 22, 24, 25, 26, 27, 29, 30, 33, 36, 37, 42, 43, 44, 45, 46, 47, 58], "optim": [5, 16, 18, 19, 25, 56], "optim_build": 150, "optimiter": 139, "other": [57, 61], "our": 12, "overal": 11, "own": 6, "packag": 0, "pan": 13, "pansharpen": 177, "pantiltrot": 232, "paramet": [22, 27, 36, 37, 38, 39, 42, 43, 44, 45, 47, 56, 58], "particular": 26, "patch": [16, 21, 22], "patchdataset": [50, 69], "patchgandiscrimin": 118, "patchnr": [22, 140], "patchprior": 141, "path": [5, 6, 9, 14, 17, 18, 19, 24, 25, 26, 27, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47], "pattern": 0, "pdnet": 45, "pdnet_dualblock": 116, "pdnet_primalblock": 117, "pgditer": 157, "phantom": 45, "phase": [11, 58], "phaseretriev": 178, "photon": [8, 58], "physic": [5, 58, 179], "physicsgener": 212, "pixel": 13, "pixelwis": 58, "plai": 16, "plot": [7, 8, 18, 19, 22, 25, 27, 29, 30, 33, 43, 44, 47, 61, 244], "plot_curv": 245, "plot_inset": 246, "plot_paramet": 247, "plot_video": 248, "plug": 16, "pnp": [11, 24, 25, 26, 27, 33, 47, 52, 142], "pock": 46, "poissongaussiannois": 180, "poissonlikelihood": 143, "poissonnois": 181, "precondit": 29, "predefin": 52, "pretrain": 51, "primal": [25, 45], "prior": [0, 5, 7, 16, 18, 19, 22, 26, 29, 33, 44, 45, 52, 56, 144], "problem": [0, 2, 5, 17, 18, 19, 24, 25, 26, 27, 31, 32], "product_convolution2d": 206, "project": 57, "proxim": [43, 44], "psnr": 83, "put": 31, "pytorch": 62, "quantif": 33, "r2rloss": 84, "radio": [0, 58], "radiointerferometri": 182, "radon": 195, "rand_lik": 249, "randn_lik": 250, "random": [11, 45], "randommaskgener": 213, "randomphaseretriev": 183, "rang": 8, "reconstruct": [5, 7, 11, 14, 22, 30, 36, 37, 46, 52, 57], "recov": 8, "red": [26, 52, 145], "regular": [26, 53], "remot": 58, "requir": 0, "resolut": [13, 26, 42, 47, 58], "reson": 58, "restorm": 119, "result": [5, 6, 7, 8, 9, 14, 17, 18, 19, 24, 25, 26, 27, 29, 30, 33, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47], "retriev": [11, 58], "ri": 0, "rotat": 226, "run": [7, 22, 29, 30, 33], "sampl": [0, 16, 29, 30, 31, 33], "sampler": [29, 30, 33], "save": [9, 46], "scale": 227, "scan": 45, "schedul": 32, "scoreprior": 146, "scunet": 120, "self": [16, 36, 37, 38, 39, 53], "sens": [13, 43, 58], "set": [5, 14, 18, 19, 22, 24, 25, 27, 36, 37, 38, 39, 46], "set14hr": 70, "setup": [5, 6, 9, 11, 14, 17, 18, 19, 24, 25, 26, 27, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47], "sharpen": 13, "shift": 228, "sigmagener": 214, "signal": [8, 11], "similar": 233, "simul": 0, "singl": [8, 13, 58], "singlephotonlidar": 184, "singlepixelcamera": 185, "skrock": 220, "smiter": 158, "soft": 43, "solv": [0, 5, 17, 18, 19, 24, 25, 27], "spacevaryingblur": 186, "spectral": 11, "splittingloss": 86, "ssim": 85, "stack": 10, "standard": 29, "start": 62, "step": [31, 32], "subsampl": 37, "summari": 51, "supadversarialdiscriminatorloss": 95, "supadversarialgeneratorloss": 96, "super": [13, 26, 47, 58], "supervis": [16, 36, 37, 38, 39, 53], "suploss": 87, "sure": 39, "suregaussianloss": 88, "surepgloss": 89, "surepoissonloss": 90, "swinir": 121, "symbol": 55, "tensorlist": [61, 238], "term": 45, "test": [4, 14, 21, 22, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 61, 222], "tgvdenois": 122, "thi": 26, "threshold": 43, "tikhonov": 148, "time": [1, 3, 15, 20, 23, 28, 34, 40, 41, 48, 63], "to_complex_denois": 127, "togeth": 31, "toi": [8, 10, 12], "tomographi": [13, 22, 27, 58, 187], "total": 18, "tour": [4, 13], "train": [2, 14, 22, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 61, 223], "trainabl": 45, "trainer": 64, "transform": [35, 53, 229], "tv": 18, "tvdenois": 123, "tvloss": 91, "tvprior": 147, "uair": 2, "uairgeneratorloss": 97, "ula": [29, 33, 221], "uncertainti": 33, "unet": 124, "unfold": [16, 43, 44, 45, 46, 47, 60], "unfolded_build": 237, "uniformgaussiannois": 188, "uniformnois": 189, "unsupadversarialdiscriminatorloss": 98, "unsupadversarialgeneratorloss": 99, "up": [5, 14, 18, 19, 24, 25, 27, 36, 37, 38, 39, 46], "urban100hr": 71, "us": [7, 12, 17, 31, 32, 54, 64, 68, 69, 71, 72, 73, 74, 76, 77, 79, 80, 82, 83, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 124, 125, 126, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 157, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 193, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247], "util": [53, 56, 60, 61], "vanilla": [27, 47], "variat": 18, "verifi": [10, 12], "visual": 11, "volum": 17, "vu": 25, "wavelet": [0, 17, 19], "waveletdenois": 125, "waveletdictdenois": 126, "waveletprior": 149, "weight": [0, 44, 51], "your": [6, 29, 31, 32], "zeros_lik": 251}})